/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "欢迎使用Di-Link EasyIoT",
  "description": "一个基于VuePress的 知识管理&博客 主题",
  "base": "/",
  "headTags": [
    [
      "link",
      {
        "rel": "icon",
        "href": "/img/favicon.ico"
      }
    ],
    [
      "meta",
      {
        "name": "keywords",
        "content": "vuepress,theme,blog,vdoing"
      }
    ],
    [
      "meta",
      {
        "name": "theme-color",
        "content": "#11a8cd"
      }
    ],
    [
      "meta",
      {
        "name": "wwads-cn-verify",
        "content": "6c4b761a28b734fe93831e3fb400ce87"
      }
    ],
    [
      "script",
      {
        "src": "https://cdn.wwads.cn/js/makemoney.js",
        "type": "text/javascript"
      }
    ]
  ],
  "pages": [
    {
      "title": "快速开始",
      "frontmatter": {
        "title": "快速开始",
        "date": "2020-05-11T13:59:38.000Z",
        "permalink": "/doc/pages/fast-start",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/01.%E9%80%9F%E8%A7%88/01.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B.html",
      "relativePath": "01.文档/01.速览/01.快速开始.md",
      "key": "v-825b19ba",
      "path": "/doc/pages/fast-start/",
      "headers": [
        {
          "level": 2,
          "title": "Markdown",
          "slug": "markdown",
          "normalizedTitle": "markdown",
          "charIndex": 109
        },
        {
          "level": 2,
          "title": "知识管理",
          "slug": "知识管理",
          "normalizedTitle": "知识管理",
          "charIndex": 22
        },
        {
          "level": 2,
          "title": "VuePress",
          "slug": "vuepress",
          "normalizedTitle": "vuepress",
          "charIndex": 294
        },
        {
          "level": 2,
          "title": "知识管理&博客主题-Vdoing的诞生",
          "slug": "知识管理-博客主题-vdoing的诞生",
          "normalizedTitle": "知识管理&amp;博客主题-vdoing的诞生",
          "charIndex": null
        },
        {
          "level": 3,
          "title": "主题名称",
          "slug": "主题名称",
          "normalizedTitle": "主题名称",
          "charIndex": 1058
        }
      ],
      "headersStr": "Markdown 知识管理 VuePress 知识管理&博客主题-Vdoing的诞生 主题名称",
      "content": "这个主题的初衷是打造一个好用的、面向程序员的知识管理工具。\n\n对于程序员来说，繁杂的知识体系难免会有遗忘的地方。如果有一个方便好用的知识管理工具，可以帮助我们很好的管理知识，并能够快速地把遗忘的知识点找回来。\n\n\n# Markdown\n\n最初接触Markdown的时候，我就被它简洁的语法干净的文本结构吸引住，它的代码块和兼容html标签的能力更是让我爱上它，很高兴找到了一个高效记录学习笔记的工具。\n\n\n# 知识管理\n\n在一段学习的日子里，我尝试过用txt记录笔记、云笔记、Markdown笔记，并把Markdown文件上传到github进行管理，但总感觉还是不够方便...直到我发现了VuePress，它似乎可以管理我的学习笔记，并且把站点部署到github pages不就是一个在线的云笔记网站了吗\n\n\n# VuePress\n\nVuePress是一个 Vue 驱动的静态网站生成器，正是以Markdown为中心的项目结构，它简洁至上的理念正合我心。对于我这个对Vue还算有一些了解的前端，迫不及待的想去使用它来搭建一个我的云笔记网站。\n\n\n# 知识管理&博客主题-Vdoing的诞生\n\n我以前的一个领导和我们说过一个好的知识管理可以帮助我们提高开发质量和开发效率，下面这张图就是他想传达的，我表示赞同：\n\n什么是一个好用的知识管理工具呢？其实我也在不断的寻找和思考中。不过我觉得它至少要结构清晰、管理方便，在查找知识点的过程中可以快速的找到，正像上图所说的要在15秒内找到一个知识点，在添加内容的时候可以很方便的添加，并且保证结构清晰。\n\nVuePress的官方默认主题是专门为写文档而生的，和我心目中的知识库有一些差距，比如在满足结构清晰这点上，每添加一个内容就得手动的添加侧边栏数据，还有在满足15秒内找到一个知识点上还是不够好，因此我觉得需要做一些改造。\n\n在知识管理方面，有三种典型的知识形态：\n\n>  * 结构化：看重知识的条理性和实用性，有一定专业背景才能看懂\n>  * 碎片化：描述具体的知识点，通俗易懂\n>  * 体系化：对某一领域的完整解读，通常是某类知识的专业之作\n\n从这三种知识形态出发，我给主题添加了自动生成结构化侧边栏、目录页、面包屑等等。在满足了结构化之后，写博客应该算得上是一种碎片化的形态，我就给主题添加了分类、标签、归档等等。在满足更方便添加内容上，有了自动生成front matter、批量操作front matter等，更多关于主题的知识从开始使用它去探索吧~~\n\n\n# 主题名称\n\nVdoing，中文大概是维度的意思。起这个名的原因，首先是我看过一个视频《尤雨溪创立vue的心路历程》B站传送 youtube传送，里面有讲到vue起名的故事，一开始想起的名其实是Seed.js，但是在npm上被占用了，然后发现vue是一个挺酷的一个词，才决定用vue。发现大佬起名可以这么酷。再者，这个主题我想它可以多维度的快速寻找一个知识点，要么就叫维度吧，那英文名就用Vdoing好了...",
      "normalizedContent": "这个主题的初衷是打造一个好用的、面向程序员的知识管理工具。\n\n对于程序员来说，繁杂的知识体系难免会有遗忘的地方。如果有一个方便好用的知识管理工具，可以帮助我们很好的管理知识，并能够快速地把遗忘的知识点找回来。\n\n\n# markdown\n\n最初接触markdown的时候，我就被它简洁的语法干净的文本结构吸引住，它的代码块和兼容html标签的能力更是让我爱上它，很高兴找到了一个高效记录学习笔记的工具。\n\n\n# 知识管理\n\n在一段学习的日子里，我尝试过用txt记录笔记、云笔记、markdown笔记，并把markdown文件上传到github进行管理，但总感觉还是不够方便...直到我发现了vuepress，它似乎可以管理我的学习笔记，并且把站点部署到github pages不就是一个在线的云笔记网站了吗\n\n\n# vuepress\n\nvuepress是一个 vue 驱动的静态网站生成器，正是以markdown为中心的项目结构，它简洁至上的理念正合我心。对于我这个对vue还算有一些了解的前端，迫不及待的想去使用它来搭建一个我的云笔记网站。\n\n\n# 知识管理&博客主题-vdoing的诞生\n\n我以前的一个领导和我们说过一个好的知识管理可以帮助我们提高开发质量和开发效率，下面这张图就是他想传达的，我表示赞同：\n\n什么是一个好用的知识管理工具呢？其实我也在不断的寻找和思考中。不过我觉得它至少要结构清晰、管理方便，在查找知识点的过程中可以快速的找到，正像上图所说的要在15秒内找到一个知识点，在添加内容的时候可以很方便的添加，并且保证结构清晰。\n\nvuepress的官方默认主题是专门为写文档而生的，和我心目中的知识库有一些差距，比如在满足结构清晰这点上，每添加一个内容就得手动的添加侧边栏数据，还有在满足15秒内找到一个知识点上还是不够好，因此我觉得需要做一些改造。\n\n在知识管理方面，有三种典型的知识形态：\n\n>  * 结构化：看重知识的条理性和实用性，有一定专业背景才能看懂\n>  * 碎片化：描述具体的知识点，通俗易懂\n>  * 体系化：对某一领域的完整解读，通常是某类知识的专业之作\n\n从这三种知识形态出发，我给主题添加了自动生成结构化侧边栏、目录页、面包屑等等。在满足了结构化之后，写博客应该算得上是一种碎片化的形态，我就给主题添加了分类、标签、归档等等。在满足更方便添加内容上，有了自动生成front matter、批量操作front matter等，更多关于主题的知识从开始使用它去探索吧~~\n\n\n# 主题名称\n\nvdoing，中文大概是维度的意思。起这个名的原因，首先是我看过一个视频《尤雨溪创立vue的心路历程》b站传送 youtube传送，里面有讲到vue起名的故事，一开始想起的名其实是seed.js，但是在npm上被占用了，然后发现vue是一个挺酷的一个词，才决定用vue。发现大佬起名可以这么酷。再者，这个主题我想它可以多维度的快速寻找一个知识点，要么就叫维度吧，那英文名就用vdoing好了...",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "功能概览",
      "frontmatter": {
        "title": "功能概览",
        "date": "2020-05-11T13:54:03.000Z",
        "permalink": "/doc/pages/web-guide",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/01.%E9%80%9F%E8%A7%88/02.%E5%8A%9F%E8%83%BD%E6%A6%82%E8%A7%88.html",
      "relativePath": "01.文档/01.速览/02.功能概览.md",
      "key": "v-f980a9d8",
      "path": "/doc/pages/web-guide/",
      "headers": [
        {
          "level": 2,
          "title": "特性",
          "slug": "特性",
          "normalizedTitle": "特性",
          "charIndex": 267
        },
        {
          "level": 2,
          "title": "扩展功能",
          "slug": "扩展功能",
          "normalizedTitle": "扩展功能",
          "charIndex": 541
        },
        {
          "level": 2,
          "title": "安利",
          "slug": "安利",
          "normalizedTitle": "安利",
          "charIndex": 865
        }
      ],
      "headersStr": "特性 扩展功能 安利",
      "content": "Vdoing是VuePress v1.x的一个主题，是在默认主题基础上做的修改和扩展，很多配置仍然沿用官方配置。使用本主题可以很方便的搭建一个结构化的知识库或博客。\n\n这个主题的初衷是打造一个好用的、面向程序员的知识管理工具： 主题初衷与诞生。\n\n注意\n\n 1. Node请使用>=18.0.0版本。\n 2. 在使用本主题前，要求你至少会VuePress v1.x的基本使用和默认主题的基本配置，然后再查看本文档。\n 3. 本文档仅负责介绍Vdoing主题对默认主题的扩展部分，更多配置请移步 VuePress v1.x文档\n\n\n# 特性\n\n * 知识管理\n\n包含三种典型的知识管理形态：结构化、碎片化、体系化。轻松打造属于你自己的知识管理平台。\n\n * 结构化\n\n自动生成侧边栏、目录页、索引页、面包屑等，轻松构建一个结构化知识库。\n\n * 碎片化&个性化\n\n博客功能提供一种知识的碎片化形态，并提供个性化的博客配置。\n\n * 简洁高效\n\n以 Markdown 为中心的项目结构，内置自动化工具，以更少的配置完成更多的事。配合多维索引快速定位每个知识点。\n\n * 沉浸式阅读体验\n\n专为阅读设计的UI，配合多种颜色模式、可关闭的侧边栏和导航栏，带给你一种沉浸式阅读体验。\n\n\n# 扩展功能\n\n相较于默认主题，添加的功能内容主要有：\n\n * 添加方便管理学习笔记和技术文档的自动生成结构化侧边栏、自动生成front matter、目录页、扩展的搜索框插件、面包屑、快捷翻页按钮 等，让你快速定位到任何你想要找的内容。\n\n * 添加博客相关的 文章信息栏（作者与创建时间）、最近更新栏 、博主信息栏、页脚版权栏、分类功能+分类页、标签功能+标签页、归档页、评论插件等。\n\n * 方便好用的 Markdown 容器。\n\n * 首页文章列表、个性化配置和样式美化等。\n\n * 多种颜色模式供用户选择：跟随系统、浅色模式、深色模式、阅读模式\n\n * 提高搬砖效率的辅助工具： 批量操作front matter工具\n\n * ...\n\n\n# 安利\n\n * 拥有它你就同时拥有了一个专属你个人的在线知识库(云笔记)、博客、文档库、Demo库、一站式技术搜索工具，内容全部采用Markdown编写，简单高效，各种代码随便贴。\n\n * 你可以在.md文件中写html、css、js、甚至是vue组件代码，markdown天然的就支持vue组件，魔改页面什么的不要太简单。\n\n * 相当多的程序员喜欢深色模式，还有的视力也不太好(🤓)，我们有浅色、深色和阅读模式，更有跟随系统自动响应深浅色模式功能，想怎么换就怎么换。\n   \n   > 点击右下角换肤按钮\n\n * 当你习惯用vdoing主题后，在别处看文档发现是markdown编写的，但所在站点的目录、导航、主题等某个地方用起来不是很爽，你都可以把文档拷贝或把整个专栏下载(如支持下载的话)下来放到vdoing主题，vdoing的自动化工具助你生成一个结构清晰的、拥有目录、页面导航的，而且有多种颜色模式的文档站。让你更专注于内容的学习。\n   \n   > 参考我博客中的文档专栏\n\n * 如果你想和更多的人分享你的文章，那么这款seo友好的主题是一个很不错的选择，更有为了加快百度收录而定制的每天定时百度推送程序。\n   \n   > 参考我的博客收录情况。\n\n别犹豫了，赶快上手吧",
      "normalizedContent": "vdoing是vuepress v1.x的一个主题，是在默认主题基础上做的修改和扩展，很多配置仍然沿用官方配置。使用本主题可以很方便的搭建一个结构化的知识库或博客。\n\n这个主题的初衷是打造一个好用的、面向程序员的知识管理工具： 主题初衷与诞生。\n\n注意\n\n 1. node请使用>=18.0.0版本。\n 2. 在使用本主题前，要求你至少会vuepress v1.x的基本使用和默认主题的基本配置，然后再查看本文档。\n 3. 本文档仅负责介绍vdoing主题对默认主题的扩展部分，更多配置请移步 vuepress v1.x文档\n\n\n# 特性\n\n * 知识管理\n\n包含三种典型的知识管理形态：结构化、碎片化、体系化。轻松打造属于你自己的知识管理平台。\n\n * 结构化\n\n自动生成侧边栏、目录页、索引页、面包屑等，轻松构建一个结构化知识库。\n\n * 碎片化&个性化\n\n博客功能提供一种知识的碎片化形态，并提供个性化的博客配置。\n\n * 简洁高效\n\n以 markdown 为中心的项目结构，内置自动化工具，以更少的配置完成更多的事。配合多维索引快速定位每个知识点。\n\n * 沉浸式阅读体验\n\n专为阅读设计的ui，配合多种颜色模式、可关闭的侧边栏和导航栏，带给你一种沉浸式阅读体验。\n\n\n# 扩展功能\n\n相较于默认主题，添加的功能内容主要有：\n\n * 添加方便管理学习笔记和技术文档的自动生成结构化侧边栏、自动生成front matter、目录页、扩展的搜索框插件、面包屑、快捷翻页按钮 等，让你快速定位到任何你想要找的内容。\n\n * 添加博客相关的 文章信息栏（作者与创建时间）、最近更新栏 、博主信息栏、页脚版权栏、分类功能+分类页、标签功能+标签页、归档页、评论插件等。\n\n * 方便好用的 markdown 容器。\n\n * 首页文章列表、个性化配置和样式美化等。\n\n * 多种颜色模式供用户选择：跟随系统、浅色模式、深色模式、阅读模式\n\n * 提高搬砖效率的辅助工具： 批量操作front matter工具\n\n * ...\n\n\n# 安利\n\n * 拥有它你就同时拥有了一个专属你个人的在线知识库(云笔记)、博客、文档库、demo库、一站式技术搜索工具，内容全部采用markdown编写，简单高效，各种代码随便贴。\n\n * 你可以在.md文件中写html、css、js、甚至是vue组件代码，markdown天然的就支持vue组件，魔改页面什么的不要太简单。\n\n * 相当多的程序员喜欢深色模式，还有的视力也不太好(🤓)，我们有浅色、深色和阅读模式，更有跟随系统自动响应深浅色模式功能，想怎么换就怎么换。\n   \n   > 点击右下角换肤按钮\n\n * 当你习惯用vdoing主题后，在别处看文档发现是markdown编写的，但所在站点的目录、导航、主题等某个地方用起来不是很爽，你都可以把文档拷贝或把整个专栏下载(如支持下载的话)下来放到vdoing主题，vdoing的自动化工具助你生成一个结构清晰的、拥有目录、页面导航的，而且有多种颜色模式的文档站。让你更专注于内容的学习。\n   \n   > 参考我博客中的文档专栏\n\n * 如果你想和更多的人分享你的文章，那么这款seo友好的主题是一个很不错的选择，更有为了加快百度收录而定制的每天定时百度推送程序。\n   \n   > 参考我的博客收录情况。\n\n别犹豫了，赶快上手吧",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "地图展示",
      "frontmatter": {
        "title": "地图展示",
        "date": "2020-05-11T13:54:40.000Z",
        "permalink": "/doc/pages/homePage/map-display",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/02.%E9%A6%96%E9%A1%B5/01.%E5%9C%B0%E5%9B%BE%E5%B1%95%E7%A4%BA.html",
      "relativePath": "01.文档/02.首页/01.地图展示.md",
      "key": "v-99e388b0",
      "path": "/doc/pages/homePage/map-display/",
      "headers": [
        {
          "level": 2,
          "title": "安装和启动",
          "slug": "安装和启动",
          "normalizedTitle": "安装和启动",
          "charIndex": 29
        },
        {
          "level": 2,
          "title": "使用Vdoing主题",
          "slug": "使用vdoing主题",
          "normalizedTitle": "使用vdoing主题",
          "charIndex": 929
        },
        {
          "level": 2,
          "title": "版本升级",
          "slug": "版本升级",
          "normalizedTitle": "版本升级",
          "charIndex": 1212
        }
      ],
      "headersStr": "安装和启动 使用Vdoing主题 版本升级",
      "content": "注意⚠️\n\nNode请使用>=18.0.0版本。\n\n\n# 安装和启动\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n\n# enter the project directory\ncd vuepress-theme-vdoing\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing-doc.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-doc\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/xugaoyi/vuepress-theme-vdoing-doc\n\n# clone the project\ngit clone https://github.com/u2sb/vuepress-theme-vdoing-template.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-template\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/u2sb/vuepress-theme-vdoing-template\n\n\n# 使用Vdoing主题\n\n 1. 安装最新的Vdoing主题包：\n\nnpm install vuepress-theme-vdoing -D\n\n\n 2. 在.vuepress/config.js中配置使用主题：\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing'\n}\n\n\n提示\n\n 1. 不建议在原默认vuepress项目上单独安装使用本主题包，而是clone我的整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n主题的版本会不定期更新，你只需更新npm主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n提示\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n 2. 在.vuepress/config.js中，设置theme: 'vdoing'才是使用npm主题依赖包:\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing', // npm主题依赖包\n  // theme: require.resolve('../../vdoing'), // 使用本地主题包\n}\n",
      "normalizedContent": "注意⚠️\n\nnode请使用>=18.0.0版本。\n\n\n# 安装和启动\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n\n# enter the project directory\ncd vuepress-theme-vdoing\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing-doc.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-doc\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/xugaoyi/vuepress-theme-vdoing-doc\n\n# clone the project\ngit clone https://github.com/u2sb/vuepress-theme-vdoing-template.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-template\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/u2sb/vuepress-theme-vdoing-template\n\n\n# 使用vdoing主题\n\n 1. 安装最新的vdoing主题包：\n\nnpm install vuepress-theme-vdoing -d\n\n\n 2. 在.vuepress/config.js中配置使用主题：\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing'\n}\n\n\n提示\n\n 1. 不建议在原默认vuepress项目上单独安装使用本主题包，而是clone我的整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n主题的版本会不定期更新，你只需更新npm主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n提示\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n 2. 在.vuepress/config.js中，设置theme: 'vdoing'才是使用npm主题依赖包:\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing', // npm主题依赖包\n  // theme: require.resolve('../../vdoing'), // 使用本地主题包\n}\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "大屏展示",
      "frontmatter": {
        "title": "大屏展示",
        "date": "2020-05-11T13:54:40.000Z",
        "permalink": "/doc/pages/homePage/data-display",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/02.%E9%A6%96%E9%A1%B5/02.%E5%A4%A7%E5%B1%8F%E5%B1%95%E7%A4%BA.html",
      "relativePath": "01.文档/02.首页/02.大屏展示.md",
      "key": "v-1860a7fc",
      "path": "/doc/pages/homePage/data-display/",
      "headers": [
        {
          "level": 2,
          "title": "安装和启动",
          "slug": "安装和启动",
          "normalizedTitle": "安装和启动",
          "charIndex": 29
        },
        {
          "level": 2,
          "title": "使用Vdoing主题",
          "slug": "使用vdoing主题",
          "normalizedTitle": "使用vdoing主题",
          "charIndex": 929
        },
        {
          "level": 2,
          "title": "版本升级",
          "slug": "版本升级",
          "normalizedTitle": "版本升级",
          "charIndex": 1212
        }
      ],
      "headersStr": "安装和启动 使用Vdoing主题 版本升级",
      "content": "注意⚠️\n\nNode请使用>=18.0.0版本。\n\n\n# 安装和启动\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n\n# enter the project directory\ncd vuepress-theme-vdoing\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing-doc.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-doc\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/xugaoyi/vuepress-theme-vdoing-doc\n\n# clone the project\ngit clone https://github.com/u2sb/vuepress-theme-vdoing-template.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-template\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/u2sb/vuepress-theme-vdoing-template\n\n\n# 使用Vdoing主题\n\n 1. 安装最新的Vdoing主题包：\n\nnpm install vuepress-theme-vdoing -D\n\n\n 2. 在.vuepress/config.js中配置使用主题：\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing'\n}\n\n\n提示\n\n 1. 不建议在原默认vuepress项目上单独安装使用本主题包，而是clone我的整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n主题的版本会不定期更新，你只需更新npm主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n提示\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n 2. 在.vuepress/config.js中，设置theme: 'vdoing'才是使用npm主题依赖包:\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing', // npm主题依赖包\n  // theme: require.resolve('../../vdoing'), // 使用本地主题包\n}\n",
      "normalizedContent": "注意⚠️\n\nnode请使用>=18.0.0版本。\n\n\n# 安装和启动\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n\n# enter the project directory\ncd vuepress-theme-vdoing\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing-doc.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-doc\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/xugaoyi/vuepress-theme-vdoing-doc\n\n# clone the project\ngit clone https://github.com/u2sb/vuepress-theme-vdoing-template.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-template\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/u2sb/vuepress-theme-vdoing-template\n\n\n# 使用vdoing主题\n\n 1. 安装最新的vdoing主题包：\n\nnpm install vuepress-theme-vdoing -d\n\n\n 2. 在.vuepress/config.js中配置使用主题：\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing'\n}\n\n\n提示\n\n 1. 不建议在原默认vuepress项目上单独安装使用本主题包，而是clone我的整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n主题的版本会不定期更新，你只需更新npm主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n提示\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n 2. 在.vuepress/config.js中，设置theme: 'vdoing'才是使用npm主题依赖包:\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing', // npm主题依赖包\n  // theme: require.resolve('../../vdoing'), // 使用本地主题包\n}\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "统计信息",
      "frontmatter": {
        "title": "统计信息",
        "date": "2020-05-11T13:54:40.000Z",
        "permalink": "/doc/pages/homePage/statistics",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/02.%E9%A6%96%E9%A1%B5/03.%E7%BB%9F%E8%AE%A1%E4%BF%A1%E6%81%AF.html",
      "relativePath": "01.文档/02.首页/03.统计信息.md",
      "key": "v-edb31ccc",
      "path": "/doc/pages/homePage/statistics/",
      "headers": [
        {
          "level": 2,
          "title": "安装和启动",
          "slug": "安装和启动",
          "normalizedTitle": "安装和启动",
          "charIndex": 29
        },
        {
          "level": 2,
          "title": "使用Vdoing主题",
          "slug": "使用vdoing主题",
          "normalizedTitle": "使用vdoing主题",
          "charIndex": 929
        },
        {
          "level": 2,
          "title": "版本升级",
          "slug": "版本升级",
          "normalizedTitle": "版本升级",
          "charIndex": 1212
        }
      ],
      "headersStr": "安装和启动 使用Vdoing主题 版本升级",
      "content": "注意⚠️\n\nNode请使用>=18.0.0版本。\n\n\n# 安装和启动\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n\n# enter the project directory\ncd vuepress-theme-vdoing\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing-doc.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-doc\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/xugaoyi/vuepress-theme-vdoing-doc\n\n# clone the project\ngit clone https://github.com/u2sb/vuepress-theme-vdoing-template.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-template\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/u2sb/vuepress-theme-vdoing-template\n\n\n# 使用Vdoing主题\n\n 1. 安装最新的Vdoing主题包：\n\nnpm install vuepress-theme-vdoing -D\n\n\n 2. 在.vuepress/config.js中配置使用主题：\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing'\n}\n\n\n提示\n\n 1. 不建议在原默认vuepress项目上单独安装使用本主题包，而是clone我的整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n主题的版本会不定期更新，你只需更新npm主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n提示\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n 2. 在.vuepress/config.js中，设置theme: 'vdoing'才是使用npm主题依赖包:\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing', // npm主题依赖包\n  // theme: require.resolve('../../vdoing'), // 使用本地主题包\n}\n",
      "normalizedContent": "注意⚠️\n\nnode请使用>=18.0.0版本。\n\n\n# 安装和启动\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n\n# enter the project directory\ncd vuepress-theme-vdoing\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing-doc.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-doc\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/xugaoyi/vuepress-theme-vdoing-doc\n\n# clone the project\ngit clone https://github.com/u2sb/vuepress-theme-vdoing-template.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-template\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/u2sb/vuepress-theme-vdoing-template\n\n\n# 使用vdoing主题\n\n 1. 安装最新的vdoing主题包：\n\nnpm install vuepress-theme-vdoing -d\n\n\n 2. 在.vuepress/config.js中配置使用主题：\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing'\n}\n\n\n提示\n\n 1. 不建议在原默认vuepress项目上单独安装使用本主题包，而是clone我的整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n主题的版本会不定期更新，你只需更新npm主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n提示\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n 2. 在.vuepress/config.js中，设置theme: 'vdoing'才是使用npm主题依赖包:\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing', // npm主题依赖包\n  // theme: require.resolve('../../vdoing'), // 使用本地主题包\n}\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "产品清单",
      "frontmatter": {
        "title": "产品清单",
        "date": "2020-05-11T13:54:56.000Z",
        "permalink": "/doc/pages/productManage/product-list",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/03.%E4%BA%A7%E5%93%81%E7%AE%A1%E7%90%86/01.%E4%BA%A7%E5%93%81%E6%B8%85%E5%8D%95.html",
      "relativePath": "01.文档/03.产品管理/01.产品清单.md",
      "key": "v-9020f0c8",
      "path": "/doc/pages/productManage/product-list/",
      "headersStr": null,
      "content": ".\n├── .github   (可选，GitHub 相关文件)\n│   ├── workflows\n│   │   ├── baiduPush.yml (可选，百度定时自动推送)\n│   │   └── ci.yml (可选，自动部署)\n├── docs (必须，不要修改文件夹名称)\n│   ├── .vuepress （同官方，查看：https://vuepress.vuejs.org/zh/guide/directory-structure.html#目录结构）\n│   ├── @pages (可选，自动生成的文件夹，存放分类页、标签页、归档页)\n│   ├── _posts (可选，专门存放碎片化博客文章的文件夹)\n│   ├── <结构化目录>\n│   └── index.md (首页)\n├── vdoing (可选，本地的vdoing主题)\n├── utils  (可选，vdoing主题使用的node工具)\n│   ├── modules\n│   ├── config.yml (可选，批量操作front matter配置)\n│   ├── editFrontmatter.js (可选，批量操作front matter工具)\n├── baiduPush.sh (可选，百度推送命令脚本)\n├── deploy.sh (可选，部署命令脚本)\n│\n└── package.json\n\n\n\n * docs 文件夹名称请不要修改\n\n * docs/.vuepress 用于存放全局的配置、样式、静态资源等，同官方，查看 详情\n\n * docs/@pages 此文件夹是自动生成的，存放分类页、标签页、归档页对应的.md文件，一般不需要改动\n\n * docs/_posts 专门用于存放碎片化博客文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n * docs/<结构化目录> 请查看《构建结构化站点的核心配置和约定》。\n\n * docs/index.md 首页\n\n * vdoing 存放在本地的vdoing主题文件，如果你想深度的修改主题，首先要在docs/.vuepress/config.js中配置使用的主题指向这个文件。\n\n  module.exports = {\n    // theme: 'vdoing', // npm主题依赖包\n    theme: require.resolve('../../vdoing'), // 使用本地主题包\n  }\n\n\n  import { resolve } from 'path'\n  import { defineConfig4CustomTheme } from 'vuepress/config'\n  import { VdoingThemeConfig } from 'vuepress-theme-vdoing/types'\n  export default defineConfig4CustomTheme<VdoingThemeConfig>({\n    // theme: 'vdoing', // 使用npm主题包\n    theme: resolve(__dirname, '../../vdoing'), // 使用本地主题包\n  })\n\n\n注意：主题的后续维护升级只对npm主题包负责，就是说你使用本地主题就等于放弃了后续的升级服务。因此，建议能在docs/.vuepress/内配置和修改的，就尽量不要改动主题内部代码。\n\n----------------------------------------\n\n提示\n\n为了方便您更快的学习和使用本主题，我在代码当中添加了比较多的注释说明。",
      "normalizedContent": ".\n├── .github   (可选，github 相关文件)\n│   ├── workflows\n│   │   ├── baidupush.yml (可选，百度定时自动推送)\n│   │   └── ci.yml (可选，自动部署)\n├── docs (必须，不要修改文件夹名称)\n│   ├── .vuepress （同官方，查看：https://vuepress.vuejs.org/zh/guide/directory-structure.html#目录结构）\n│   ├── @pages (可选，自动生成的文件夹，存放分类页、标签页、归档页)\n│   ├── _posts (可选，专门存放碎片化博客文章的文件夹)\n│   ├── <结构化目录>\n│   └── index.md (首页)\n├── vdoing (可选，本地的vdoing主题)\n├── utils  (可选，vdoing主题使用的node工具)\n│   ├── modules\n│   ├── config.yml (可选，批量操作front matter配置)\n│   ├── editfrontmatter.js (可选，批量操作front matter工具)\n├── baidupush.sh (可选，百度推送命令脚本)\n├── deploy.sh (可选，部署命令脚本)\n│\n└── package.json\n\n\n\n * docs 文件夹名称请不要修改\n\n * docs/.vuepress 用于存放全局的配置、样式、静态资源等，同官方，查看 详情\n\n * docs/@pages 此文件夹是自动生成的，存放分类页、标签页、归档页对应的.md文件，一般不需要改动\n\n * docs/_posts 专门用于存放碎片化博客文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n * docs/<结构化目录> 请查看《构建结构化站点的核心配置和约定》。\n\n * docs/index.md 首页\n\n * vdoing 存放在本地的vdoing主题文件，如果你想深度的修改主题，首先要在docs/.vuepress/config.js中配置使用的主题指向这个文件。\n\n  module.exports = {\n    // theme: 'vdoing', // npm主题依赖包\n    theme: require.resolve('../../vdoing'), // 使用本地主题包\n  }\n\n\n  import { resolve } from 'path'\n  import { defineconfig4customtheme } from 'vuepress/config'\n  import { vdoingthemeconfig } from 'vuepress-theme-vdoing/types'\n  export default defineconfig4customtheme<vdoingthemeconfig>({\n    // theme: 'vdoing', // 使用npm主题包\n    theme: resolve(__dirname, '../../vdoing'), // 使用本地主题包\n  })\n\n\n注意：主题的后续维护升级只对npm主题包负责，就是说你使用本地主题就等于放弃了后续的升级服务。因此，建议能在docs/.vuepress/内配置和修改的，就尽量不要改动主题内部代码。\n\n----------------------------------------\n\n提示\n\n为了方便您更快的学习和使用本主题，我在代码当中添加了比较多的注释说明。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "设备清单",
      "frontmatter": {
        "title": "设备清单",
        "date": "2020-05-12T11:01:21.000Z",
        "permalink": "/doc/pages/deviceManage/device-list",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/04.%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/01.%E8%AE%BE%E5%A4%87%E6%B8%85%E5%8D%95.html",
      "relativePath": "01.文档/04.设备管理/01.设备清单.md",
      "key": "v-7a82d9d0",
      "path": "/doc/pages/deviceManage/device-list/",
      "headers": [
        {
          "level": 3,
          "title": "命名约定",
          "slug": "命名约定",
          "normalizedTitle": "命名约定",
          "charIndex": 442
        },
        {
          "level": 3,
          "title": "级别说明",
          "slug": "级别说明",
          "normalizedTitle": "级别说明",
          "charIndex": 694
        },
        {
          "level": 3,
          "title": "目录结构例子",
          "slug": "目录结构例子",
          "normalizedTitle": "目录结构例子",
          "charIndex": 1016
        },
        {
          "level": 3,
          "title": "如何知道侧边栏数据有没有正确生成？",
          "slug": "如何知道侧边栏数据有没有正确生成",
          "normalizedTitle": "如何知道侧边栏数据有没有正确生成？",
          "charIndex": 1850
        }
      ],
      "headersStr": "命名约定 级别说明 目录结构例子 如何知道侧边栏数据有没有正确生成？",
      "content": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeConfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: Boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 README.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 README.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《JavaScript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.JavaScript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "normalizedContent": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeconfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 readme.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 readme.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《javascript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.javascript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "设备授权",
      "frontmatter": {
        "title": "设备授权",
        "date": "2020-05-12T11:01:21.000Z",
        "permalink": "/doc/pages/deviceManage/device-authorize",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/04.%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/02.%E8%AE%BE%E5%A4%87%E6%8E%88%E6%9D%83.html",
      "relativePath": "01.文档/04.设备管理/02.设备授权.md",
      "key": "v-1895028e",
      "path": "/doc/pages/deviceManage/device-authorize/",
      "headers": [
        {
          "level": 3,
          "title": "命名约定",
          "slug": "命名约定",
          "normalizedTitle": "命名约定",
          "charIndex": 442
        },
        {
          "level": 3,
          "title": "级别说明",
          "slug": "级别说明",
          "normalizedTitle": "级别说明",
          "charIndex": 694
        },
        {
          "level": 3,
          "title": "目录结构例子",
          "slug": "目录结构例子",
          "normalizedTitle": "目录结构例子",
          "charIndex": 1016
        },
        {
          "level": 3,
          "title": "如何知道侧边栏数据有没有正确生成？",
          "slug": "如何知道侧边栏数据有没有正确生成",
          "normalizedTitle": "如何知道侧边栏数据有没有正确生成？",
          "charIndex": 1850
        }
      ],
      "headersStr": "命名约定 级别说明 目录结构例子 如何知道侧边栏数据有没有正确生成？",
      "content": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeConfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: Boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 README.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 README.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《JavaScript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.JavaScript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "normalizedContent": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeconfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 readme.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 readme.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《javascript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.javascript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "设备录入",
      "frontmatter": {
        "title": "设备录入",
        "date": "2020-05-12T11:01:21.000Z",
        "permalink": "/doc/pages/deviceManage/device-enter",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/04.%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/03.%E8%AE%BE%E5%A4%87%E5%BD%95%E5%85%A5.html",
      "relativePath": "01.文档/04.设备管理/03.设备录入.md",
      "key": "v-4902f6e3",
      "path": "/doc/pages/deviceManage/device-enter/",
      "headers": [
        {
          "level": 3,
          "title": "命名约定",
          "slug": "命名约定",
          "normalizedTitle": "命名约定",
          "charIndex": 442
        },
        {
          "level": 3,
          "title": "级别说明",
          "slug": "级别说明",
          "normalizedTitle": "级别说明",
          "charIndex": 694
        },
        {
          "level": 3,
          "title": "目录结构例子",
          "slug": "目录结构例子",
          "normalizedTitle": "目录结构例子",
          "charIndex": 1016
        },
        {
          "level": 3,
          "title": "如何知道侧边栏数据有没有正确生成？",
          "slug": "如何知道侧边栏数据有没有正确生成",
          "normalizedTitle": "如何知道侧边栏数据有没有正确生成？",
          "charIndex": 1850
        }
      ],
      "headersStr": "命名约定 级别说明 目录结构例子 如何知道侧边栏数据有没有正确生成？",
      "content": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeConfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: Boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 README.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 README.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《JavaScript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.JavaScript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "normalizedContent": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeconfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 readme.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 readme.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《javascript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.javascript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "设备分配",
      "frontmatter": {
        "title": "设备分配",
        "date": "2020-05-12T11:01:21.000Z",
        "permalink": "/doc/pages/deviceManage/device-allocation",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/04.%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/04.%E8%AE%BE%E5%A4%87%E5%88%86%E9%85%8D.html",
      "relativePath": "01.文档/04.设备管理/04.设备分配.md",
      "key": "v-7135f3fc",
      "path": "/doc/pages/deviceManage/device-allocation/",
      "headers": [
        {
          "level": 3,
          "title": "命名约定",
          "slug": "命名约定",
          "normalizedTitle": "命名约定",
          "charIndex": 442
        },
        {
          "level": 3,
          "title": "级别说明",
          "slug": "级别说明",
          "normalizedTitle": "级别说明",
          "charIndex": 694
        },
        {
          "level": 3,
          "title": "目录结构例子",
          "slug": "目录结构例子",
          "normalizedTitle": "目录结构例子",
          "charIndex": 1016
        },
        {
          "level": 3,
          "title": "如何知道侧边栏数据有没有正确生成？",
          "slug": "如何知道侧边栏数据有没有正确生成",
          "normalizedTitle": "如何知道侧边栏数据有没有正确生成？",
          "charIndex": 1850
        }
      ],
      "headersStr": "命名约定 级别说明 目录结构例子 如何知道侧边栏数据有没有正确生成？",
      "content": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeConfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: Boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 README.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 README.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《JavaScript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.JavaScript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "normalizedContent": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeconfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 readme.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 readme.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《javascript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.javascript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "关键数据",
      "frontmatter": {
        "title": "关键数据",
        "date": "2020-05-12T11:46:37.000Z",
        "permalink": "/doc/pages/dataCenter/data-center",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/05.%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/01.%E5%85%B3%E9%94%AE%E6%95%B0%E6%8D%AE.html",
      "relativePath": "01.文档/05.数据中心/01.关键数据.md",
      "key": "v-371df0e5",
      "path": "/doc/pages/dataCenter/data-center/",
      "headers": [
        {
          "level": 3,
          "title": "生成示例",
          "slug": "生成示例",
          "normalizedTitle": "生成示例",
          "charIndex": 203
        },
        {
          "level": 3,
          "title": "title",
          "slug": "title",
          "normalizedTitle": "title",
          "charIndex": 28
        },
        {
          "level": 3,
          "title": "date",
          "slug": "date",
          "normalizedTitle": "date",
          "charIndex": 38
        },
        {
          "level": 3,
          "title": "permalink",
          "slug": "permalink",
          "normalizedTitle": "permalink",
          "charIndex": 49
        },
        {
          "level": 3,
          "title": "categories",
          "slug": "categories",
          "normalizedTitle": "categories",
          "charIndex": 63
        },
        {
          "level": 3,
          "title": "tags",
          "slug": "tags",
          "normalizedTitle": "tags",
          "charIndex": 78
        },
        {
          "level": 3,
          "title": "扩展自动生成front matter",
          "slug": "扩展自动生成front-matter",
          "normalizedTitle": "扩展自动生成front matter",
          "charIndex": 1126
        },
        {
          "level": 3,
          "title": "碎片化文章‘分类’的自动生成规则",
          "slug": "碎片化文章-分类-的自动生成规则",
          "normalizedTitle": "碎片化文章‘分类’的自动生成规则",
          "charIndex": 1232
        }
      ],
      "headersStr": "生成示例 title date permalink categories tags 扩展自动生成front matter 碎片化文章‘分类’的自动生成规则",
      "content": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendFrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《JavaScript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - JavaScript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：YYYY-MM-DD HH:MM:SS\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> Q：自动生成front matter为什么要包含永久链接？\n> \n> A：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendFrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendFrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeConfig.categoryText 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categoryText的默认值是‘随笔’，可在themeConfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "normalizedContent": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendfrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《javascript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - javascript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：yyyy-mm-dd hh:mm:ss\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> q：自动生成front matter为什么要包含永久链接？\n> \n> a：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendfrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendfrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeconfig.categorytext 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categorytext的默认值是‘随笔’，可在themeconfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "报警数据",
      "frontmatter": {
        "title": "报警数据",
        "date": "2020-05-12T11:46:37.000Z",
        "permalink": "/doc/pages/dataCenter/alarm-data",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/05.%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/02.%E6%8A%A5%E8%AD%A6%E6%95%B0%E6%8D%AE.html",
      "relativePath": "01.文档/05.数据中心/02.报警数据.md",
      "key": "v-4eb5053b",
      "path": "/doc/pages/dataCenter/alarm-data/",
      "headers": [
        {
          "level": 3,
          "title": "生成示例",
          "slug": "生成示例",
          "normalizedTitle": "生成示例",
          "charIndex": 203
        },
        {
          "level": 3,
          "title": "title",
          "slug": "title",
          "normalizedTitle": "title",
          "charIndex": 28
        },
        {
          "level": 3,
          "title": "date",
          "slug": "date",
          "normalizedTitle": "date",
          "charIndex": 38
        },
        {
          "level": 3,
          "title": "permalink",
          "slug": "permalink",
          "normalizedTitle": "permalink",
          "charIndex": 49
        },
        {
          "level": 3,
          "title": "categories",
          "slug": "categories",
          "normalizedTitle": "categories",
          "charIndex": 63
        },
        {
          "level": 3,
          "title": "tags",
          "slug": "tags",
          "normalizedTitle": "tags",
          "charIndex": 78
        },
        {
          "level": 3,
          "title": "扩展自动生成front matter",
          "slug": "扩展自动生成front-matter",
          "normalizedTitle": "扩展自动生成front matter",
          "charIndex": 1126
        },
        {
          "level": 3,
          "title": "碎片化文章‘分类’的自动生成规则",
          "slug": "碎片化文章-分类-的自动生成规则",
          "normalizedTitle": "碎片化文章‘分类’的自动生成规则",
          "charIndex": 1232
        }
      ],
      "headersStr": "生成示例 title date permalink categories tags 扩展自动生成front matter 碎片化文章‘分类’的自动生成规则",
      "content": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendFrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《JavaScript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - JavaScript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：YYYY-MM-DD HH:MM:SS\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> Q：自动生成front matter为什么要包含永久链接？\n> \n> A：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendFrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendFrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeConfig.categoryText 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categoryText的默认值是‘随笔’，可在themeConfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "normalizedContent": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendfrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《javascript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - javascript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：yyyy-mm-dd hh:mm:ss\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> q：自动生成front matter为什么要包含永久链接？\n> \n> a：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendfrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendfrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeconfig.categorytext 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categorytext的默认值是‘随笔’，可在themeconfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "设备日志",
      "frontmatter": {
        "title": "设备日志",
        "date": "2020-05-12T11:46:37.000Z",
        "permalink": "/doc/pages/dataCenter/device-log",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/05.%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/03.%E8%AE%BE%E5%A4%87%E6%97%A5%E5%BF%97.html",
      "relativePath": "01.文档/05.数据中心/03.设备日志.md",
      "key": "v-7866a20e",
      "path": "/doc/pages/dataCenter/device-log/",
      "headers": [
        {
          "level": 3,
          "title": "生成示例",
          "slug": "生成示例",
          "normalizedTitle": "生成示例",
          "charIndex": 203
        },
        {
          "level": 3,
          "title": "title",
          "slug": "title",
          "normalizedTitle": "title",
          "charIndex": 28
        },
        {
          "level": 3,
          "title": "date",
          "slug": "date",
          "normalizedTitle": "date",
          "charIndex": 38
        },
        {
          "level": 3,
          "title": "permalink",
          "slug": "permalink",
          "normalizedTitle": "permalink",
          "charIndex": 49
        },
        {
          "level": 3,
          "title": "categories",
          "slug": "categories",
          "normalizedTitle": "categories",
          "charIndex": 63
        },
        {
          "level": 3,
          "title": "tags",
          "slug": "tags",
          "normalizedTitle": "tags",
          "charIndex": 78
        },
        {
          "level": 3,
          "title": "扩展自动生成front matter",
          "slug": "扩展自动生成front-matter",
          "normalizedTitle": "扩展自动生成front matter",
          "charIndex": 1126
        },
        {
          "level": 3,
          "title": "碎片化文章‘分类’的自动生成规则",
          "slug": "碎片化文章-分类-的自动生成规则",
          "normalizedTitle": "碎片化文章‘分类’的自动生成规则",
          "charIndex": 1232
        }
      ],
      "headersStr": "生成示例 title date permalink categories tags 扩展自动生成front matter 碎片化文章‘分类’的自动生成规则",
      "content": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendFrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《JavaScript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - JavaScript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：YYYY-MM-DD HH:MM:SS\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> Q：自动生成front matter为什么要包含永久链接？\n> \n> A：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendFrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendFrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeConfig.categoryText 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categoryText的默认值是‘随笔’，可在themeConfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "normalizedContent": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendfrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《javascript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - javascript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：yyyy-mm-dd hh:mm:ss\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> q：自动生成front matter为什么要包含永久链接？\n> \n> a：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendfrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendfrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeconfig.categorytext 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categorytext的默认值是‘随笔’，可在themeconfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "控制日志",
      "frontmatter": {
        "title": "控制日志",
        "date": "2020-05-12T11:46:37.000Z",
        "permalink": "/doc/pages/dataCenter/control-data",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/05.%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/04.%E6%8E%A7%E5%88%B6%E6%97%A5%E5%BF%97.html",
      "relativePath": "01.文档/05.数据中心/04.控制日志.md",
      "key": "v-9d1ed7c2",
      "path": "/doc/pages/dataCenter/control-data/",
      "headers": [
        {
          "level": 3,
          "title": "生成示例",
          "slug": "生成示例",
          "normalizedTitle": "生成示例",
          "charIndex": 203
        },
        {
          "level": 3,
          "title": "title",
          "slug": "title",
          "normalizedTitle": "title",
          "charIndex": 28
        },
        {
          "level": 3,
          "title": "date",
          "slug": "date",
          "normalizedTitle": "date",
          "charIndex": 38
        },
        {
          "level": 3,
          "title": "permalink",
          "slug": "permalink",
          "normalizedTitle": "permalink",
          "charIndex": 49
        },
        {
          "level": 3,
          "title": "categories",
          "slug": "categories",
          "normalizedTitle": "categories",
          "charIndex": 63
        },
        {
          "level": 3,
          "title": "tags",
          "slug": "tags",
          "normalizedTitle": "tags",
          "charIndex": 78
        },
        {
          "level": 3,
          "title": "扩展自动生成front matter",
          "slug": "扩展自动生成front-matter",
          "normalizedTitle": "扩展自动生成front matter",
          "charIndex": 1126
        },
        {
          "level": 3,
          "title": "碎片化文章‘分类’的自动生成规则",
          "slug": "碎片化文章-分类-的自动生成规则",
          "normalizedTitle": "碎片化文章‘分类’的自动生成规则",
          "charIndex": 1232
        }
      ],
      "headersStr": "生成示例 title date permalink categories tags 扩展自动生成front matter 碎片化文章‘分类’的自动生成规则",
      "content": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendFrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《JavaScript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - JavaScript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：YYYY-MM-DD HH:MM:SS\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> Q：自动生成front matter为什么要包含永久链接？\n> \n> A：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendFrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendFrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeConfig.categoryText 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categoryText的默认值是‘随笔’，可在themeConfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "normalizedContent": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendfrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《javascript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - javascript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：yyyy-mm-dd hh:mm:ss\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> q：自动生成front matter为什么要包含永久链接？\n> \n> a：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendfrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendfrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeconfig.categorytext 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categorytext的默认值是‘随笔’，可在themeconfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "经销商清单",
      "frontmatter": {
        "title": "经销商清单",
        "date": "2020-11-10T18:56:22.000Z",
        "permalink": "/doc/pages/distributorManage/distributor-list",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/07.%E7%BB%8F%E9%94%80%E5%95%86%E7%AE%A1%E7%90%86/01.%E7%BB%8F%E9%94%80%E5%95%86%E6%B8%85%E5%8D%95.html",
      "relativePath": "01.文档/07.经销商管理/01.经销商清单.md",
      "key": "v-71b0c874",
      "path": "/doc/pages/distributorManage/distributor-list/",
      "headers": [
        {
          "level": 2,
          "title": "标记",
          "slug": "标记",
          "normalizedTitle": "标记",
          "charIndex": 43
        },
        {
          "level": 4,
          "title": "《沁园春·雪》",
          "slug": "《沁园春·雪》",
          "normalizedTitle": "《沁园春·雪》",
          "charIndex": 220
        },
        {
          "level": 2,
          "title": "代码块选项卡",
          "slug": "代码块选项卡",
          "normalizedTitle": "代码块选项卡",
          "charIndex": 406
        }
      ],
      "headersStr": "标记 《沁园春·雪》 代码块选项卡",
      "content": "主题的内置组件可以直接在Markdown文件中以类似html标签的方式使用。\n\n\n# 标记\n\n * Props:\n   \n   * text- string\n   * type - string, 可选值： tip | warning | error，默认： tip\n   * vertical - string, 可选值： top | middle，默认： top\n\n * Usage:\n\n你可以在标题或其他内容中使用标记：\n\n#### 《沁园春·雪》 <Badge text=\"摘\"/>\n北国风光<Badge text=\"注释\" type=\"warning\"/>，千里冰封，万里雪飘。\n\n> <Badge text=\"译文\" type=\"error\" vertical=\"middle\"/>: 北方的风光。\n\n\n效果：\n\n# 《沁园春·雪》\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 代码块选项卡\n\n在<code-group>中嵌套<code-block>来配合使用。在<code-block>标签添加title来指定tab标题，active指定当前tab：\n\n<code-group>\n  <code-block title=\"YARN\" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -D\n  ```\n  </code-block>\n\n  <code-block title=\"NPM\">\n  ```bash\n  npm install vuepress-theme-vdoing -D\n  ```\n  </code-block>\n</code-group>\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -D\n\n\nnpm install vuepress-theme-vdoing -D\n\n\n注意\n\n * 请在<code-group>标签与markdown内容之间使用空行隔开，否则可能会解析不出来。\n * 该组件只适用于放置代码块，放其他内容在体验上并不友好。如您确实需要放置其他内容的选项卡，推荐使用vuepress-plugin-tabs插件。",
      "normalizedContent": "主题的内置组件可以直接在markdown文件中以类似html标签的方式使用。\n\n\n# 标记\n\n * props:\n   \n   * text- string\n   * type - string, 可选值： tip | warning | error，默认： tip\n   * vertical - string, 可选值： top | middle，默认： top\n\n * usage:\n\n你可以在标题或其他内容中使用标记：\n\n#### 《沁园春·雪》 <badge text=\"摘\"/>\n北国风光<badge text=\"注释\" type=\"warning\"/>，千里冰封，万里雪飘。\n\n> <badge text=\"译文\" type=\"error\" vertical=\"middle\"/>: 北方的风光。\n\n\n效果：\n\n# 《沁园春·雪》\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 代码块选项卡\n\n在<code-group>中嵌套<code-block>来配合使用。在<code-block>标签添加title来指定tab标题，active指定当前tab：\n\n<code-group>\n  <code-block title=\"yarn\" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -d\n  ```\n  </code-block>\n\n  <code-block title=\"npm\">\n  ```bash\n  npm install vuepress-theme-vdoing -d\n  ```\n  </code-block>\n</code-group>\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -d\n\n\nnpm install vuepress-theme-vdoing -d\n\n\n注意\n\n * 请在<code-group>标签与markdown内容之间使用空行隔开，否则可能会解析不出来。\n * 该组件只适用于放置代码块，放其他内容在体验上并不友好。如您确实需要放置其他内容的选项卡，推荐使用vuepress-plugin-tabs插件。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "项目清单",
      "frontmatter": {
        "title": "项目清单",
        "date": "2020-05-29T11:16:18.000Z",
        "permalink": "/doc/pages/projectManage/project-list",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/06.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/01.%E9%A1%B9%E7%9B%AE%E6%B8%85%E5%8D%95.html",
      "relativePath": "01.文档/06.项目管理/01.项目清单.md",
      "key": "v-dc4afbc0",
      "path": "/doc/pages/projectManage/project-list/",
      "headers": [
        {
          "level": 2,
          "title": "信息框容器",
          "slug": "信息框容器",
          "normalizedTitle": "信息框容器",
          "charIndex": 92
        },
        {
          "level": 2,
          "title": "布局容器",
          "slug": "布局容器",
          "normalizedTitle": "布局容器",
          "charIndex": 357
        },
        {
          "level": 3,
          "title": "我是居中的内容",
          "slug": "我是居中的内容",
          "normalizedTitle": "我是居中的内容",
          "charIndex": 384
        },
        {
          "level": 2,
          "title": "普通卡片列表",
          "slug": "普通卡片列表",
          "normalizedTitle": "普通卡片列表",
          "charIndex": 979
        },
        {
          "level": 3,
          "title": "语法",
          "slug": "语法",
          "normalizedTitle": "语法",
          "charIndex": 23
        },
        {
          "level": 2,
          "title": "图文卡片列表",
          "slug": "图文卡片列表",
          "normalizedTitle": "图文卡片列表",
          "charIndex": 3501
        },
        {
          "level": 3,
          "title": "语法",
          "slug": "语法-2",
          "normalizedTitle": "语法",
          "charIndex": 23
        },
        {
          "level": 2,
          "title": "增强配置",
          "slug": "增强配置",
          "normalizedTitle": "增强配置",
          "charIndex": 5725
        },
        {
          "level": 3,
          "title": "1. 普通卡片和图文卡片容器",
          "slug": "_1-普通卡片和图文卡片容器",
          "normalizedTitle": "1. 普通卡片和图文卡片容器",
          "charIndex": 5778
        },
        {
          "level": 4,
          "title": "target",
          "slug": "target",
          "normalizedTitle": "target",
          "charIndex": 5796
        },
        {
          "level": 3,
          "title": "2. 图文卡片容器",
          "slug": "_2-图文卡片容器",
          "normalizedTitle": "2. 图文卡片容器",
          "charIndex": 5870
        },
        {
          "level": 4,
          "title": "imgHeight",
          "slug": "imgheight",
          "normalizedTitle": "imgheight",
          "charIndex": 5883
        },
        {
          "level": 4,
          "title": "objectFit",
          "slug": "objectfit",
          "normalizedTitle": "objectfit",
          "charIndex": 5928
        },
        {
          "level": 4,
          "title": "lineClamp",
          "slug": "lineclamp",
          "normalizedTitle": "lineclamp",
          "charIndex": 6113
        },
        {
          "level": 3,
          "title": "3. 配置示例：",
          "slug": "_3-配置示例",
          "normalizedTitle": "3. 配置示例：",
          "charIndex": 6152
        }
      ],
      "headersStr": "信息框容器 布局容器 我是居中的内容 普通卡片列表 语法 图文卡片列表 语法 增强配置 1. 普通卡片和图文卡片容器 target 2. 图文卡片容器 imgHeight objectFit lineClamp 3. 配置示例：",
      "content": "Markdown 容器是对 Markdown 语法的一个扩展，使用简单的语法就可以在页面中呈现丰富的效果。\n\n除了原默认主题自带的容器外，本主题还新增了一些好用的自定义容器。\n\n\n# 信息框容器\n\n输入\n\n::: tip\n这是一条提示\n:::\n\n::: warning\n这是一条注意\n:::\n\n::: danger\n这是一条警告\n:::\n\n::: note\n这是笔记容器，在 <Badge text=\"v1.5.0 +\" /> 版本才支持哦~\n:::\n\n\n输出\n\n提示\n\n这是一条提示\n\n注意\n\n这是一条注意\n\n警告\n\n这是一条警告\n\n笔记\n\n这是笔记容器，在 以上版本才支持哦~\n\n以上容器均可自定义标题，如：\n\n::: tip 我的提示\n自定义标题的提示框\n:::\n\n\n我的提示\n\n自定义标题的提示框\n\n\n# 布局容器\n\n输入\n\n::: center\n  ### 我是居中的内容\n  （可用于标题、图片等的居中）\n:::\n\n::: right\n  [我是右浮动的内容](https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E8%BF%90%E5%8A%A8%E5%AE%9A%E5%BE%8B)\n:::\n\n::: details\n这是一个详情块，在 IE / Edge 中不生效\n```js\nconsole.log('这是一个详情块')\n```\n:::\n\n::: theorem 牛顿第一定律\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n::: right\n来自 [维基百科](https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E8%BF%90%E5%8A%A8%E5%AE%9A%E5%BE%8B)\n:::\n\n\n输出\n\n\n# 我是居中的内容\n\n（可用于标题、图片等的居中）\n\n我是右浮动的内容\n\n点击查看\n\n这是一个详情块，在 IE / Edge 中不生效\n\nconsole.log('这是一个详情块')\n\n\n牛顿第一定律\n\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n\n来自 维基百科\n\n> 注意：right、details、theorem这三个容器在v1.3.0 +版本才支持。center容器在v1.3.3 +版本才支持。\n\n\n# 普通卡片列表\n\n普通卡片列表容器，可用于友情链接、项目推荐、诗词展示等。\n\n先来看看效果：\n\n输出\n\n麋鹿鲁哟\n\n大道至简，知易行难\n\nXAOXUU\n\n#IOS #Volantis主题作者\n\n平凡的你我\n\n理想成为大牛的小陈同学\n\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgColor: '#CBEAFA' # 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号\n  textColor: '#6854A1' # 可选，默认var(--textColor)\n- name: XAOXUU\n  desc: '#IOS #Volantis主题作者'\n  avatar: https://jsd.cdn.zzko.cn/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgColor: '#718971'\n  textColor: '#fff'\n- name: 平凡的你我\n  desc: 理想成为大牛的小陈同学\n  avatar: https://reinness.com/avatar.png\n  link: https://reinness.com\n  bgColor: '#FCDBA0'\n  textColor: '#A05F2C'\n\n\n上面效果在Markdown中的代码是这样的：\n\n输入\n\n::: cardList\n```yaml\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgColor: '#CBEAFA' # 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号\n  textColor: '#6854A1' # 可选，默认var(--textColor)\n- name: XAOXUU\n  desc: '#IOS #Volantis主题作者'\n  avatar: https://jsd.cdn.zzko.cn/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgColor: '#718971'\n  textColor: '#fff'\n- name: 平凡的你我\n  desc: 理想成为大牛的小陈同学\n  avatar: https://reinness.com/avatar.png\n  link: https://reinness.com\n  bgColor: '#FCDBA0'\n  textColor: '#A05F2C'\n```\n:::\n\n\n\n# 语法\n\n::: cardList <每行显示数量>\n``` yaml\n- name: 名称\n  desc: 描述\n  avatar: https://xxx.jpg # 头像，可选\n  link: https://xxx/ # 链接，可选\n  bgColor: '#CBEAFA' # 背景色，可选，默认var(--bodyBg)。颜色值有#号时请添加引号\n  textColor: '#6854A1' # 文本色，可选，默认var(--textColor)\n```\n:::\n\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为yaml\n * 代码块内是一个yaml格式的数组列表\n * 数组成员的属性有：\n   * name名称\n   * desc描述\n   * avatar头像，可选\n   * link链接，可选\n   * bgColor背景色，可选，默认var(--bodyBg)。颜色值有#号时请添加引号\n   * textColor文本色，可选，默认var(--textColor)\n\n下面再来看另外一个示例：\n\n输入\n\n::: cardList 2\n```yaml\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgColor: '#F0DFB1'\n  textColor: '#242A38'\n- name: Vdoing\n  desc: 🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgColor: '#DFEEE7'\n  textColor: '#2A3344'\n```\n:::\n\n\n输出\n\n《静夜思》\n\n床前明月光，疑是地上霜。举头望明月，低头思故乡。\n\nVdoing\n\n🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgColor: '#F0DFB1'\n  textColor: '#242A38'\n- name: Vdoing\n  desc: 🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgColor: '#DFEEE7'\n  textColor: '#2A3344'\n\n\n\n# 图文卡片列表\n\n图文卡片列表容器，可用于项目展示、产品展示等。\n\n先看效果：\n\n输出\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nEvan Xu\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nEvan Xu\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nEvan Xu\n\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: Evan Xu # 作者，可选\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像，可选\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Evan Xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Evan Xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n\n\n输入\n\n::: cardImgList\n```yaml\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: Evan Xu # 作者，可选\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像，可选\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Evan Xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Evan Xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n```\n:::\n\n\n\n# 语法\n\n::: cardImgList <每行显示数量>\n``` yaml\n- img: https://xxx.jpg # 图片地址\n  link: https://xxx.com # 链接地址\n  name: 标题\n  desc: 描述 # 可选\n  author: 作者名称 # 可选\n  avatar: https://xxx.jpg # 作者头像，可选\n```\n:::\n\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为yaml\n * 代码块内是一个yaml格式的数组列表\n * 数组成员的属性有：\n   * img图片地址\n   * link链接地址\n   * name标题\n   * desc描述，可选\n   * author作者名称，可选\n   * avatar作者头像，可选\n\n\n# 增强配置\n\n为了适应更多需求场景，v1.9.0+版本的普通卡片和图文卡片容器添加了一些新的配置：\n\n\n# 1. 普通卡片和图文卡片容器\n\n# target\n\n * 链接的打开方式，默认_blank\n   \n   * _self 当前页面\n   \n   * _blank 新窗口打开\n\n\n# 2. 图文卡片容器\n\n# imgHeight\n\n * 设置图片高度，默认 auto\n   \n   * 带单位\n\n# objectFit\n\n * 设置图片的填充方式(object-fit)，默认 cover\n   \n   * fill 拉伸 (会改变宽高比)\n   * contain 缩放 (保持宽高比，会留空)\n   * cover 填充 (会裁剪)\n   * none 保持原有尺寸 (会留空或裁剪)\n   * scale-down 保证显示完整图片 (保持宽高比，会留空)\n\n# lineClamp\n\n * 描述文本超出多少行显示省略号，默认1\n\n\n\n\n# 3. 配置示例：\n\n::: cardImgList\n``` yaml\nconfig:\n    target: _blank\n    imgHeight: auto\n    objectFit: cover\n    lineClamp: 1\n\ndata:\n  - img: https://xxx.jpg\n    link: https://xugaoyi.com/\n    name: 标题\n    desc: 描述内容\n    author: Evan Xu\n    avatar: https://xxx.jpg\n```\n:::\n",
      "normalizedContent": "markdown 容器是对 markdown 语法的一个扩展，使用简单的语法就可以在页面中呈现丰富的效果。\n\n除了原默认主题自带的容器外，本主题还新增了一些好用的自定义容器。\n\n\n# 信息框容器\n\n输入\n\n::: tip\n这是一条提示\n:::\n\n::: warning\n这是一条注意\n:::\n\n::: danger\n这是一条警告\n:::\n\n::: note\n这是笔记容器，在 <badge text=\"v1.5.0 +\" /> 版本才支持哦~\n:::\n\n\n输出\n\n提示\n\n这是一条提示\n\n注意\n\n这是一条注意\n\n警告\n\n这是一条警告\n\n笔记\n\n这是笔记容器，在 以上版本才支持哦~\n\n以上容器均可自定义标题，如：\n\n::: tip 我的提示\n自定义标题的提示框\n:::\n\n\n我的提示\n\n自定义标题的提示框\n\n\n# 布局容器\n\n输入\n\n::: center\n  ### 我是居中的内容\n  （可用于标题、图片等的居中）\n:::\n\n::: right\n  [我是右浮动的内容](https://zh.wikipedia.org/wiki/%e7%89%9b%e9%a1%bf%e8%bf%90%e5%8a%a8%e5%ae%9a%e5%be%8b)\n:::\n\n::: details\n这是一个详情块，在 ie / edge 中不生效\n```js\nconsole.log('这是一个详情块')\n```\n:::\n\n::: theorem 牛顿第一定律\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n::: right\n来自 [维基百科](https://zh.wikipedia.org/wiki/%e7%89%9b%e9%a1%bf%e8%bf%90%e5%8a%a8%e5%ae%9a%e5%be%8b)\n:::\n\n\n输出\n\n\n# 我是居中的内容\n\n（可用于标题、图片等的居中）\n\n我是右浮动的内容\n\n点击查看\n\n这是一个详情块，在 ie / edge 中不生效\n\nconsole.log('这是一个详情块')\n\n\n牛顿第一定律\n\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n\n来自 维基百科\n\n> 注意：right、details、theorem这三个容器在v1.3.0 +版本才支持。center容器在v1.3.3 +版本才支持。\n\n\n# 普通卡片列表\n\n普通卡片列表容器，可用于友情链接、项目推荐、诗词展示等。\n\n先来看看效果：\n\n输出\n\n麋鹿鲁哟\n\n大道至简，知易行难\n\nxaoxuu\n\n#ios #volantis主题作者\n\n平凡的你我\n\n理想成为大牛的小陈同学\n\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgcolor: '#cbeafa' # 可选，默认var(--bodybg)。颜色值有#号时请添加单引号\n  textcolor: '#6854a1' # 可选，默认var(--textcolor)\n- name: xaoxuu\n  desc: '#ios #volantis主题作者'\n  avatar: https://jsd.cdn.zzko.cn/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgcolor: '#718971'\n  textcolor: '#fff'\n- name: 平凡的你我\n  desc: 理想成为大牛的小陈同学\n  avatar: https://reinness.com/avatar.png\n  link: https://reinness.com\n  bgcolor: '#fcdba0'\n  textcolor: '#a05f2c'\n\n\n上面效果在markdown中的代码是这样的：\n\n输入\n\n::: cardlist\n```yaml\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgcolor: '#cbeafa' # 可选，默认var(--bodybg)。颜色值有#号时请添加单引号\n  textcolor: '#6854a1' # 可选，默认var(--textcolor)\n- name: xaoxuu\n  desc: '#ios #volantis主题作者'\n  avatar: https://jsd.cdn.zzko.cn/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgcolor: '#718971'\n  textcolor: '#fff'\n- name: 平凡的你我\n  desc: 理想成为大牛的小陈同学\n  avatar: https://reinness.com/avatar.png\n  link: https://reinness.com\n  bgcolor: '#fcdba0'\n  textcolor: '#a05f2c'\n```\n:::\n\n\n\n# 语法\n\n::: cardlist <每行显示数量>\n``` yaml\n- name: 名称\n  desc: 描述\n  avatar: https://xxx.jpg # 头像，可选\n  link: https://xxx/ # 链接，可选\n  bgcolor: '#cbeafa' # 背景色，可选，默认var(--bodybg)。颜色值有#号时请添加引号\n  textcolor: '#6854a1' # 文本色，可选，默认var(--textcolor)\n```\n:::\n\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为yaml\n * 代码块内是一个yaml格式的数组列表\n * 数组成员的属性有：\n   * name名称\n   * desc描述\n   * avatar头像，可选\n   * link链接，可选\n   * bgcolor背景色，可选，默认var(--bodybg)。颜色值有#号时请添加引号\n   * textcolor文本色，可选，默认var(--textcolor)\n\n下面再来看另外一个示例：\n\n输入\n\n::: cardlist 2\n```yaml\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgcolor: '#f0dfb1'\n  textcolor: '#242a38'\n- name: vdoing\n  desc: 🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgcolor: '#dfeee7'\n  textcolor: '#2a3344'\n```\n:::\n\n\n输出\n\n《静夜思》\n\n床前明月光，疑是地上霜。举头望明月，低头思故乡。\n\nvdoing\n\n🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgcolor: '#f0dfb1'\n  textcolor: '#242a38'\n- name: vdoing\n  desc: 🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgcolor: '#dfeee7'\n  textcolor: '#2a3344'\n\n\n\n# 图文卡片列表\n\n图文卡片列表容器，可用于项目展示、产品展示等。\n\n先看效果：\n\n输出\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nevan xu\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nevan xu\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nevan xu\n\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: evan xu # 作者，可选\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像，可选\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: evan xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: evan xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n\n\n输入\n\n::: cardimglist\n```yaml\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: evan xu # 作者，可选\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像，可选\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: evan xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: evan xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n```\n:::\n\n\n\n# 语法\n\n::: cardimglist <每行显示数量>\n``` yaml\n- img: https://xxx.jpg # 图片地址\n  link: https://xxx.com # 链接地址\n  name: 标题\n  desc: 描述 # 可选\n  author: 作者名称 # 可选\n  avatar: https://xxx.jpg # 作者头像，可选\n```\n:::\n\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为yaml\n * 代码块内是一个yaml格式的数组列表\n * 数组成员的属性有：\n   * img图片地址\n   * link链接地址\n   * name标题\n   * desc描述，可选\n   * author作者名称，可选\n   * avatar作者头像，可选\n\n\n# 增强配置\n\n为了适应更多需求场景，v1.9.0+版本的普通卡片和图文卡片容器添加了一些新的配置：\n\n\n# 1. 普通卡片和图文卡片容器\n\n# target\n\n * 链接的打开方式，默认_blank\n   \n   * _self 当前页面\n   \n   * _blank 新窗口打开\n\n\n# 2. 图文卡片容器\n\n# imgheight\n\n * 设置图片高度，默认 auto\n   \n   * 带单位\n\n# objectfit\n\n * 设置图片的填充方式(object-fit)，默认 cover\n   \n   * fill 拉伸 (会改变宽高比)\n   * contain 缩放 (保持宽高比，会留空)\n   * cover 填充 (会裁剪)\n   * none 保持原有尺寸 (会留空或裁剪)\n   * scale-down 保证显示完整图片 (保持宽高比，会留空)\n\n# lineclamp\n\n * 描述文本超出多少行显示省略号，默认1\n\n\n\n\n# 3. 配置示例：\n\n::: cardimglist\n``` yaml\nconfig:\n    target: _blank\n    imgheight: auto\n    objectfit: cover\n    lineclamp: 1\n\ndata:\n  - img: https://xxx.jpg\n    link: https://xugaoyi.com/\n    name: 标题\n    desc: 描述内容\n    author: evan xu\n    avatar: https://xxx.jpg\n```\n:::\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "个人信息",
      "frontmatter": {
        "title": "个人信息",
        "date": "2020-11-10T18:56:22.000Z",
        "permalink": "/doc/pages/personalCenter/personal-information",
        "article": false
      },
      "regularPath": "/01.%E6%96%87%E6%A1%A3/08.%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83/01.%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83.html",
      "relativePath": "01.文档/08.个人中心/01.个人中心.md",
      "key": "v-6a73d8f2",
      "path": "/doc/pages/personalCenter/personal-information/",
      "headers": [
        {
          "level": 2,
          "title": "标记",
          "slug": "标记",
          "normalizedTitle": "标记",
          "charIndex": 43
        },
        {
          "level": 4,
          "title": "《沁园春·雪》",
          "slug": "《沁园春·雪》",
          "normalizedTitle": "《沁园春·雪》",
          "charIndex": 220
        },
        {
          "level": 2,
          "title": "代码块选项卡",
          "slug": "代码块选项卡",
          "normalizedTitle": "代码块选项卡",
          "charIndex": 406
        }
      ],
      "headersStr": "标记 《沁园春·雪》 代码块选项卡",
      "content": "主题的内置组件可以直接在Markdown文件中以类似html标签的方式使用。\n\n\n# 标记\n\n * Props:\n   \n   * text- string\n   * type - string, 可选值： tip | warning | error，默认： tip\n   * vertical - string, 可选值： top | middle，默认： top\n\n * Usage:\n\n你可以在标题或其他内容中使用标记：\n\n#### 《沁园春·雪》 <Badge text=\"摘\"/>\n北国风光<Badge text=\"注释\" type=\"warning\"/>，千里冰封，万里雪飘。\n\n> <Badge text=\"译文\" type=\"error\" vertical=\"middle\"/>: 北方的风光。\n\n\n效果：\n\n# 《沁园春·雪》\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 代码块选项卡\n\n在<code-group>中嵌套<code-block>来配合使用。在<code-block>标签添加title来指定tab标题，active指定当前tab：\n\n<code-group>\n  <code-block title=\"YARN\" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -D\n  ```\n  </code-block>\n\n  <code-block title=\"NPM\">\n  ```bash\n  npm install vuepress-theme-vdoing -D\n  ```\n  </code-block>\n</code-group>\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -D\n\n\nnpm install vuepress-theme-vdoing -D\n\n\n注意\n\n * 请在<code-group>标签与markdown内容之间使用空行隔开，否则可能会解析不出来。\n * 该组件只适用于放置代码块，放其他内容在体验上并不友好。如您确实需要放置其他内容的选项卡，推荐使用vuepress-plugin-tabs插件。",
      "normalizedContent": "主题的内置组件可以直接在markdown文件中以类似html标签的方式使用。\n\n\n# 标记\n\n * props:\n   \n   * text- string\n   * type - string, 可选值： tip | warning | error，默认： tip\n   * vertical - string, 可选值： top | middle，默认： top\n\n * usage:\n\n你可以在标题或其他内容中使用标记：\n\n#### 《沁园春·雪》 <badge text=\"摘\"/>\n北国风光<badge text=\"注释\" type=\"warning\"/>，千里冰封，万里雪飘。\n\n> <badge text=\"译文\" type=\"error\" vertical=\"middle\"/>: 北方的风光。\n\n\n效果：\n\n# 《沁园春·雪》\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 代码块选项卡\n\n在<code-group>中嵌套<code-block>来配合使用。在<code-block>标签添加title来指定tab标题，active指定当前tab：\n\n<code-group>\n  <code-block title=\"yarn\" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -d\n  ```\n  </code-block>\n\n  <code-block title=\"npm\">\n  ```bash\n  npm install vuepress-theme-vdoing -d\n  ```\n  </code-block>\n</code-group>\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -d\n\n\nnpm install vuepress-theme-vdoing -d\n\n\n注意\n\n * 请在<code-group>标签与markdown内容之间使用空行隔开，否则可能会解析不出来。\n * 该组件只适用于放置代码块，放其他内容在体验上并不友好。如您确实需要放置其他内容的选项卡，推荐使用vuepress-plugin-tabs插件。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "案例",
      "frontmatter": {
        "title": "案例",
        "date": "2020-05-14T11:39:45.000Z",
        "permalink": "/pages/5d571c",
        "article": false
      },
      "regularPath": "/02.%E6%A1%88%E4%BE%8B/01.%E6%A1%88%E4%BE%8B.html",
      "relativePath": "02.案例/01.案例.md",
      "key": "v-5af8c6c8",
      "path": "/pages/5d571c/",
      "headers": [
        {
          "level": 2,
          "title": "特别用户",
          "slug": "特别用户",
          "normalizedTitle": "特别用户",
          "charIndex": 2
        },
        {
          "level": 2,
          "title": "知识库兼博客",
          "slug": "知识库兼博客",
          "normalizedTitle": "知识库兼博客",
          "charIndex": 2214
        },
        {
          "level": 2,
          "title": "知识库",
          "slug": "知识库",
          "normalizedTitle": "知识库",
          "charIndex": 2214
        },
        {
          "level": 2,
          "title": "社区类",
          "slug": "社区类",
          "normalizedTitle": "社区类",
          "charIndex": 14909
        },
        {
          "level": 2,
          "title": "博客类",
          "slug": "博客类",
          "normalizedTitle": "博客类",
          "charIndex": 15186
        },
        {
          "level": 2,
          "title": "文档类",
          "slug": "文档类",
          "normalizedTitle": "文档类",
          "charIndex": 16091
        },
        {
          "level": 2,
          "title": "申请加入案例",
          "slug": "申请加入案例",
          "normalizedTitle": "申请加入案例",
          "charIndex": 20751
        }
      ],
      "headersStr": "特别用户 知识库兼博客 知识库 社区类 博客类 文档类 申请加入案例",
      "content": "# 特别用户\n\nMyBatis-Plus官网\n\n🚀为简化开发而生\n\n青苗\n\nLiteFlow官网\n\n轻量，快速，稳定可编排的组件式规则引擎\n\n铂赛东\n\nEasy-Es官网\n\n傻瓜级ElasticSearch搜索引擎ORM框架\n\n老汉\n\nEasy-DotNET\n\n.Net 全栈知识体系。完全开源,欢迎pr共建生态\n\n一个大西瓜\n\nconfig:\n  imgHeight: 140px\n\ndata:\n  # - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210729-233554@2x.22bdqeiem2sg.png\n  #   link: https://docs.openharmony.cn/pages/000000/\n  #   name: OpenHarmony\n  #   desc: 开放原子开源基金会\n  #   author: OpenHarmony\n  #   avatar: https://www.openharmony.cn/static/img/core-card-item2.a72a0d10.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20211215-144040.hgt2875r2zc.webp\n    link: https://baomidou.com/\n    name: MyBatis-Plus官网\n    desc: 🚀为简化开发而生\n    author: 青苗\n    avatar: https://baomidou.com/img/logo.svg\n  # - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210729-235804@2x.75e9lfd65t40.png\n  #   link: https://docs.deepin.org\n  #   name: Deepin 社区文档\n  #   desc: Deepin 应用开发技术分享、DTK开发经验等\n  #   author: Deepin\n  #   avatar: https://jsd.cdn.zzko.cn/gh/xmuli/xmuliPic@pic/2021/deepin.png\n  # - img: https://ks3-cn-beijing.ksyuncs.com/vform-static/img/vform_website.png\n  #   link: http://www.vform666.com\n  #   name: VForm官网\n  #   desc: 低代码表单优选方案，拖拽式设计，一键生成源码\n  #   author: vformAdmin\n  #   avatar: https://www.vform666.com/vform-logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/xxx.7feub7n1y0g0.png\n    link: https://liteflow.yomahub.com\n    name: LiteFlow官网\n    desc: 轻量，快速，稳定可编排的组件式规则引擎\n    author: 铂赛东\n    avatar: https://portrait.gitee.com/uploads/avatars/user/367/1102362_bryan31_1578940308.png!avatar60\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/176866696-743faf44-4afd-4c12-9728-f982ea885836.2205nb3vf5mo.webp\n    link: https://easy-es.cn/\n    name: Easy-Es官网\n    desc: 傻瓜级ElasticSearch搜索引擎ORM框架\n    author: 老汉\n    avatar: https://iknow.hs.net/9fa0407f-30ff-4d8b-82da-a4990e41a04b.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230903/WX20230903-160123@2x.2urwej0micw0.webp\n    link: https://easy-dotnet.com/\n    name: Easy-DotNET\n    desc: .Net 全栈知识体系。完全开源,欢迎pr共建生态\n    author: 一个大西瓜\n    avatar: https://easy-dotnet.com/img/logo.png\n\n\n\n# 知识库兼博客\n\nEvan's blog\n\nWeb前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n\nEvan Xu\n\n麋鹿鲁哟\n\n运气交给锦鲤，\n你只管努力就好。 (●ˇ∀ˇ●)\n\n麋鹿鲁哟\n\nLingze's blog\n\n少侠, 别来无恙?\n\n令则\n\nsummer's blog\n\nDevops运维技术博客，分享运维技术\n\n夏苏文\n\nGocifer's DB & Blog\n\n一个中二少年，专注于计算机基础架构、云原生、网络、云计算的所学、所思、所行、所想。\n\ngocifer.jay\n\nDra-M\n\nJAVA后端\n\n莫小龙\n\n跟着老侯玩编程\n\n一个乐于编程知识分享的站点\n\n舞动的代码\n\n学习笔记\n\n平时的技术积累|分享交流技术心得|温故而知新\n\n爱做梦的奋斗青年\n\n研究院\n\n一万年太久，只争朝夕\n\nxwyang\n\nKimen's Blog\n\n全沾攻城狮\n\nKimen\n\nXLONG's blog\n\n蒸汽波、咖啡\n\nlixianglong3210\n\n偷吃了鸡蛋的梨\n\n捣鼓这,捣鼓那。\n\nAwrtiger\n\nXinghai's Blog\n\nWeb Security | Java Security\n\nXinghai\n\n二丫讲梵\n\n学习，记录，分享。(运维生活编程)\n\n二丫讲梵\n\n松松的一尺三分地\n\n记录工作和学习中的所得\n\nmasongsong\n\nYoung Kbt Blog\n\n记录学习Java, Web, 框架, 工具, 前端等相关知识, 记录生活和技术路程, 分享编程技巧。\n\nShip Liu\n\n梵一的博客\n\n个人博客和知识分享\n\n梵一\n\n未读代码\n\nJava 开发知识库，分享原创文章\n\n程序猿阿朗\n\n松本松的博客儿\n\nWeb前端技术博客，积跬步以至千里。\n\nsimonzhangs\n\n远方的灯塔\n\n专注于服务端技术分享\n\nterwer\n\nSuya's blog\n\n个人博客，分享技术文章，学习笔记，植物相关知识等。\n\nSuya\n\nColorPanda\n\n日语中文英文学习网站\n\nColorPanda\n\nZihanio\n\nZihan的学习博客\n\nZihan\n\n不器小窝\n\n但知行好事,莫要问前程\n\n不器\n\nVdoing主题博客模板\n\nVdoing主题博客模板\n\neryajf\n\nJava essay\n\nJava散文知识库，Spring全家桶，SpringCloud全家桶，高可用高并发架构，面试等\n\nMr.Fire\n\n行百里er\n\nJava,个人技术博客,后端开发,技术架构,分布式技术,Spring Cloud Alibaba,Elasticsearch,Redis,算法,数据结构,Git\n\n行百里er\n\nCaptain\n\n学习技术，Java基础、面试知识点、项目经验总结和一些学习笔记\n\nCaptain\n\n小薛博客\n\n小薛博客，专注IT技术分享，助力人人成为架构师\n\nxueqimiao\n\n呆呆的博客\n\n个人博客\n\n呆呆\n\nJorgen's blog\n\n🚀个人知识库兼博客🚀\n\njorgen\n\nKronos‘ blog\n\n内心丰盈者，独行也如众\n\n忘忧\n\najay\n\nCTF学习记录\n\najay\n\nconfig:\n  imgHeight: 140px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114033.png\n    link: https://xugaoyi.com/\n    name: Evan's blog\n    desc: Web前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n    author: Evan Xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200727170555.jpg\n    link: https://miluluyo.github.io/vdoingBlog/\n    name: 麋鹿鲁哟\n    desc: 运气交给锦鲤，</br>你只管努力就好。  (●ˇ∀ˇ●)\n    author: 麋鹿鲁哟\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg\n  - img: https://i.loli.net/2020/07/26/BUCplirGIq9YTNA.png\n    link: https://lingze.xyz/\n    name: Lingze's blog\n    desc: 少侠, 别来无恙?\n    author: 令则\n    avatar: https://i.loli.net/2020/07/11/XhqR7Idnk5LD8bC.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210730-000829@2x.6pjgy10flk00.png\n    link: https://www.xswsym.online/\n    name: summer's blog\n    desc: Devops运维技术博客，分享运维技术\n    author: 夏苏文\n    avatar: https://jsd.cdn.zzko.cn/gh/summerking1/image@main/tx.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201110221457.png\n    link: https://gocifer.github.io\n    name: Gocifer's DB & Blog\n    desc: 一个中二少年，专注于计算机基础架构、云原生、网络、云计算的所学、所思、所行、所想。\n    author: gocifer.jay\n    avatar: https://gocifer.github.io/img/avatar/gocifer.png\n  - img: https://dra-m.com/images/thumbnail.png\n    link: https://dra-m.com/\n    name: Dra-M\n    desc: JAVA后端\n    author: 莫小龙\n    avatar: https://q1.qlogo.cn/g?b=qq&nk=975425198&s=640\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200905142134.png\n    link: https://www.coder163.com/\n    name: 跟着老侯玩编程\n    desc: 一个乐于编程知识分享的站点\n    author: 舞动的代码\n    avatar: https://www.coder163.com/img/qun.png\n\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20210119213748.jpg\n    link: https://haijunit.top/\n    name: 学习笔记\n    desc: 平时的技术积累|分享交流技术心得|温故而知新\n    author: 爱做梦的奋斗青年\n    avatar: https://haijunit.top/images/avatar.png\n  - img: https://jsd.cdn.zzko.cn/gh/yxw839841231/images/studying-icu/20210120110320.png\n    link: https://www.studying.icu/\n    name: 研究院\n    desc: 一万年太久，只争朝夕\n    author: xwyang\n    avatar: https://avatars1.githubusercontent.com/u/13757119?s=80&v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210704-230751@2x.3pw80u1fo6u0.png\n    link: https://blog.kimen.com.cn/\n    name: Kimen's Blog\n    desc: 全沾攻城狮\n    author: Kimen\n    avatar: https://avatars.githubusercontent.com/u/25970284?s=460&u=69b419ad6de33eaa1d6b73d7f065f710076d6c55&v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20211101-165045-(1).4b4axinii160.png\n    link: https://lixianglong3210.gitee.io/xlong-vdoing/\n    name: XLONG's blog\n    desc: 蒸汽波、咖啡\n    author: lixianglong3210\n    avatar: http://www.lixianglong.cn/bg_store/img/avatar/default.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/Awrtiger/mirrorfile/img/web.png\n    link: https://www.ool.cool/\n    name: 偷吃了鸡蛋的梨\n    desc: 捣鼓这,捣鼓那。\n    author: Awrtiger\n    avatar: https://jsd.cdn.zzko.cn/gh/Awrtiger/mirrorfile/img/avatar.jpg\n  - img: https://image-1302577725.cos.ap-beijing.myqcloud.com/img/20210402183053.png\n    link: https://f4de-bak.github.io/\n    name: Xinghai's Blog\n    desc: Web Security | Java Security\n    author: Xinghai\n    avatar: https://image-1302577725.cos.ap-beijing.myqcloud.com/img/20210328234543.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/eyjf.png\n    link: https://wiki.eryajf.net\n    name: 二丫讲梵\n    desc: 学习，记录，分享。(运维生活编程)\n    author: 二丫讲梵\n    avatar: https://wiki.eryajf.net/img/logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/ss.2tev477ruza0.png\n    link: https://masongsong.cn\n    name: 松松的一尺三分地\n    desc: 记录工作和学习中的所得\n    author: masongsong\n    avatar: https://jsd.cdn.zzko.cn/gh/MssText/learn@master/images/49203535.35emn5vryma0.png\n  - img: https://jsd.cdn.zzko.cn/gh/Kele-Bingtang/static/user/20211218235045.png\n    link: https://notes.youngkbt.cn/\n    name: Young Kbt Blog\n    desc: 记录学习Java, Web, 框架, 工具, 前端等相关知识, 记录生活和技术路程, 分享编程技巧。\n    author: Ship Liu\n    avatar: https://jsd.cdn.zzko.cn/gh/Kele-Bingtang/static/user/avatar2.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/20220210094650.3q09d26tigc0.webp\n    link: https://chuck6.github.io/blog/\n    name: 梵一的博客\n    desc: 个人博客和知识分享\n    author: 梵一\n    avatar: https://chuck6.github.io/blog/img/paizhao.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/niumoo/cdn-assets/2021/20220316145528.png\n    link: https://www.wdbyte.com\n    name: 未读代码\n    desc: Java 开发知识库，分享原创文章\n    author: 程序猿阿朗\n    avatar: https://avatars.githubusercontent.com/u/26371673?v=4\n  - img: https://jsd.cdn.zzko.cn/gh/simonzhangs/image-hosting@master/vue-plugin-example/blog.qg2buhe5h4g.webp\n    link: https://simonzhangs.github.io/\n    name: 松本松的博客儿\n    desc: Web前端技术博客，积跬步以至千里。\n    author: simonzhangs\n    avatar: https://jsd.cdn.zzko.cn/gh/simonzhangs/image-hosting@master/20220319/image.4x708q9wzse0.webp\n  - img: https://jsd.cdn.zzko.cn/gh/terwer/upload/img/image-20220422000045653.png\n    link: http://terwergreen.com\n    name: 远方的灯塔\n    desc: 专注于服务端技术分享\n    author: terwer\n    avatar: https://jsd.cdn.zzko.cn/gh/terwer/upload/img/photo.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/nksuya/image_store@main/suyablog_home.5iou2ogjrm80.webp\n    link: https://suyaspace.com/\n    name: Suya's blog\n    desc: 个人博客，分享技术文章，学习笔记，植物相关知识等。\n    author: Suya\n    avatar: https://jsd.cdn.zzko.cn/gh/nksuya/image_store@master/tech/avatar.2tycyyc1ebr4.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store2@master/img/QQ20220526-224620@2x.44o82ibj9qq0.png\n    link: https://colorpanda.aifan.jp/\n    name: ColorPanda\n    desc: 日语中文英文学习网站\n    author: ColorPanda\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store2@master/img/image.3qr8m501tl20.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/asdf.23jsekfejla8.jpeg\n    link: https://inannan423.github.io/\n    name: Zihanio\n    desc: Zihan的学习博客\n    author: Zihan\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/xxx.67b3ygadagk0.jpeg\n  - img: https://user-images.githubusercontent.com/866409/175853573-28ded198-2348-4a82-8ddd-05088161e3fe.png\n    link: https://xingcxb.com\n    name: 不器小窝\n    desc: 但知行好事,莫要问前程\n    author: 不器\n    avatar: https://avatars.githubusercontent.com/u/866409?v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/QQ20220722-141037.22uk9ow7ary.png\n    link: https://eryajf.github.io/vdoing-template/\n    name: Vdoing主题博客模板\n    desc: Vdoing主题博客模板\n    author: eryajf\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/33259379.277tur21ir40.jpeg\n  - img: https://jsd.cdn.zzko.cn/gh/FireHH/github_img_repository/logo/微信截图_20220810164903.png\n    link: https://javaessay.cn/\n    name: Java essay\n    desc: Java散文知识库，Spring全家桶，SpringCloud全家桶，高可用高并发架构，面试等\n    author: Mr.Fire\n    avatar: https://jsd.cdn.zzko.cn/gh/FireHH/github_img_repository/logo/huge.jpg\n  - img: https://chendapeng.cn/images/about/blog_image.png\n    link: https://chendapeng.cn\n    name: 行百里er\n    desc: Java,个人技术博客,后端开发,技术架构,分布式技术,Spring Cloud Alibaba,Elasticsearch,Redis,算法,数据结构,Git\n    author: 行百里er\n    avatar: https://chendapeng.cn/images/about/avatar.png\n  - img: http://xyhwh-nav.cn/img/index.png\n    link: http://xyhwh-nav.cn\n    name: Captain\n    desc: 学习技术，Java基础、面试知识点、项目经验总结和一些学习笔记\n    author: Captain\n    avatar: http://xyhwh-nav.cn/img/logo.png\n  - img: https://xiaoxue-images.oss-cn-shenzhen.aliyuncs.com/blog/202212271108541.jpg\n    link: https://blog.xueqimiao.com/\n    name: 小薛博客\n    desc: 小薛博客，专注IT技术分享，助力人人成为架构师\n    author: xueqimiao\n    avatar: https://xiaoxue-images.oss-cn-shenzhen.aliyuncs.com/blog/202212271110209.png\n  - img: https://jsd.cdn.zzko.cn/gh/su-dd/cdn/博客/202301311644669.png\n    link: https://blog.addai.cn/\n    name: 呆呆的博客\n    desc: 个人博客\n    author: 呆呆\n    avatar: https://cdn.addai.cn/博客/网站使用/呆呆.webp\n  - img: https://jsd.cdn.zzko.cn/jorgen-zhao/blog/master/images/snapshot.png\n    link: https://jorgen.website\n    name: Jorgen's blog\n    desc: 🚀个人知识库兼博客🚀\n    author: jorgen\n    avatar: https://jorgen.website/img/avatar.jpg\n  - img: https://cdn.jsdelivr.net/gh/jywangyou/Images@master/img/index.20ce120yilgg.png\n    link: https://blog.wangyou.ink/\n    name: Kronos‘ blog\n    desc: 内心丰盈者，独行也如众\n    author: 忘忧\n    avatar: https://cdn.jsdelivr.net/gh/jywangyou/Images@master/img/okhead.5l9l7bclm5o0.png\n  - img: https://the0n3.top/medias/friends/siteimage.png\n    link: https://the0n3.top/\n    name: ajay\n    desc: CTF学习记录\n    author: ajay\n    avatar: https://the0n3.top/medias/friends/syz.png\n\n\n\n# 知识库\n\n知识库演示\n\nVdoing主题演示-知识库\n\nEvan Xu\n\nX86软路由和NAS\n\n记录X86软路由和NAS的一些知识\n\nMonoLogueChi\n\n计算模拟学习笔记\n\n《能源环境材料计算模拟方法》学习笔记，涉及密度泛函理论、第一性原理等和Materials Studio、VASP等的使用。\n\nNorthword\n\nSingerw's Repository\n\n技术的风花雪月之事，有个存档的地方，对于复盘，回忆，都是一个极好的方谭。\n\nSingerw\n\nhippo4j\n\n🔥 动态线程池框架，附带监控报警功能，轻量级的运维监控平台\n\nAcmenlt\n\n地信遥感数据汇\n\n解决目前地信遥感方向数据混杂，资源难以寻找的问题，构建一个地信遥感学习、讨论、交流的平台。\n\n锐多宝\n\nDe7v\n\n专注于安卓领域的技术传播\n\nwresource\n\nHowToStartOpenSource\n\nGitHub开源项目维护协作指南\n\neryajf\n\nconfig:\n  imgHeight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114035.png\n    link: https://xugaoyi.github.io/vdoing-demo-repository/\n    name: 知识库演示\n    desc: Vdoing主题演示-知识库\n    author: Evan Xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201219205536.jpg\n    link: https://wiki.router86.com/\n    name: X86软路由和NAS\n    desc: 记录X86软路由和NAS的一些知识\n    author: MonoLogueChi\n    avatar: https://blog.xxwhite.com/assets/img/avatar.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201219205318.jpg\n    link: https://blog.northword.cn/dft-learning\n    name: 计算模拟学习笔记\n    desc: 《能源环境材料计算模拟方法》学习笔记，涉及密度泛函理论、第一性原理等和Materials Studio、VASP等的使用。\n    author: Northword\n    avatar: https://storage.live.com/items/28C1032A24A9C53B!25785?authkey=AHAx3GOYEKGqm8I\n  - img: https://singerwimg-1300001977.cos.accelerate.myqcloud.com/20211008/WccSrJ0s.png\n    link: https://repository.singerw.com\n    name: Singerw's Repository\n    desc: 技术的风花雪月之事，有个存档的地方，对于复盘，回忆，都是一个极好的方谭。\n    author: Singerw\n    avatar: https://singerwimg-1300001977.cos.accelerate.myqcloud.com/2021/09/20/76f29482ffc9b.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/QQ20220113-114927.5oha7j06c580.webp\n    link: https://hippox.cn\n    name: hippo4j\n    desc: 🔥 动态线程池框架，附带监控报警功能，轻量级的运维监控平台\n    author: Acmenlt\n    avatar: https://hippox.cn/img/web.png\n  - img: https://pics.landcover100.com/pics/624e63f4c82b8.png\n    link: https://www.gisrsdata.com\n    name: 地信遥感数据汇\n    desc: 解决目前地信遥感方向数据混杂，资源难以寻找的问题，构建一个地信遥感学习、讨论、交流的平台。\n    author: 锐多宝\n    avatar: https://pics.landcover100.com/pics/624e6469cbb8a.jpg\n  - img: https://img.de7v.com/img/site-pic.jpg\n    link: https://www.de7v.com\n    name: De7v\n    desc: 专注于安卓领域的技术传播\n    author: wresource\n    avatar: https://img.de7v.com/img/wresource.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/11123.1aljpnjyr074.png\n    link: https://eryajf.github.io/HowToStartOpenSource/\n    name: HowToStartOpenSource\n    desc: GitHub开源项目维护协作指南\n    author: eryajf\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/33259379.277tur21ir40.jpeg\n\n\n\n# 社区类\n\n奕维投资教程站\n\n股票投资\n\n奕维\n\nconfig:\n  imgHeight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200921220111.png\n    link: https://course.yiwiz.com/\n    name: 奕维投资教程站\n    desc: 股票投资\n    author: 奕维\n    avatar: https://course.yiwiz.com/img/logo.png\n\n\n\n# 博客类\n\nVdoing's blog\n\nVdoing主题演示-博客\n\nEvan Xu\n\nTeler的日常\n\n好好学习，天天向上\n\nTeler\n\nxustudyxu's Blog\n\n一起学习编程!\n\nxustudyxu\n\nconfig:\n  imgHeight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114034.png\n    link: https://xugaoyi.github.io/vdoing-demo-blog/\n    name: Vdoing's blog\n    desc: Vdoing主题演示-博客\n    author: Evan Xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://s4.ax1x.com/2022/02/25/bAjINF.png\n    link: https://fangweilong.github.io/\n    name: Teler的日常\n    desc: 好好学习，天天向上\n    author: Teler\n    avatar: https://s4.ax1x.com/2022/02/25/bAva8J.jpg\n  - img: https://user-images.githubusercontent.com/53399655/163007243-1b99b96b-cac3-49ca-9950-03a1e877a6d8.png\n    link: https://xustudyxu.github.io/\n    name: xustudyxu's Blog\n    desc: 一起学习编程!\n    author: xustudyxu\n    avatar: https://xustudyxu.github.io/img/01.png\n\n\n\n# 文档类\n\nvdoing(本站)\n\n🚀一款简洁高效的VuePress 知识管理&博客 主题\n\nEvan Xu\n\nJA Plus 开发者文档\n\n一款开源的登录认证中间件\n\nyadong,zhang\n\nDokiMod 开发文档\n\n为 DDLC Mod 开发提供的完善文档\n\nimgradeone\n\nJeeSite 在线文档\n\nJeeSite 快速开发平台 - 在线文档\n\nThinkGem\n\nCleanPHP\n\nCleanPHP开发者文档\n\nankio\n\nJpom\n\n简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n\n不忘初心\n\n物美智能\n\n物美智能开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。\n\n随遇而安 / kerwincui\n\ntrace-recorder官网\n\n简单的， 可伸缩的， 高性能的跟踪记录仪\n\n蔡旺\n\n米饭文档\n\n米饭Minecraft插件文档\n\nhandy\n\nElectron-Egg\n\n一个入门简单、跨平台、企业级桌面软件开发框架\n\n哆啦好梦\n\nkhl.py.docs\n\nkook python sdk khl.py 文档\n\nmusnows\n\nSimplest Admin V2 文档\n\n本站用于Simplest Admin 通用后台管理系统的文档系统\n\nTenyears\n\nRuleGo 官网\n\n基于Go语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎\n\n玉米投手\n\nconfig:\n  imgHeight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114036.png\n    link: https://xugaoyi.github.io/vuepress-theme-vdoing-doc/\n    name: vdoing(本站)\n    desc: 🚀一款简洁高效的VuePress 知识管理&博客 主题\n    author: Evan Xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210925-124836@2x (1).6ogvf85maog0.png\n    link: https://justauth.plus/\n    name: JA Plus 开发者文档\n    desc: 一款开源的登录认证中间件\n    author: yadong,zhang\n    avatar: https://portrait.gitee.com/uploads/avatars/user/261/784199_yadong.zhang_1578932767.png!avatar200\n  - img: https://assets.imgradeone.com/docsdokimod-pv.png\n    link: https://docs.dokimod.cn\n    name: DokiMod 开发文档\n    desc: 为 DDLC Mod 开发提供的完善文档\n    author: imgradeone\n    avatar: https://docs.dokimod.cn/logo_128x128.png\n  # - img: http://yogoyun.oss-cn-beijing.aliyuncs.com/help/public/other/20200630125515.png\n  #   link: http://help.yogoyun.com/\n  #   name: 柚果云服务\n  #   desc: 智能商业应用程序服务商。\n  #   author: 柚果云服务\n  #   avatar: http://yogoyun.oss-cn-beijing.aliyuncs.com/admin/console/logo.png\n  - img: https://jeesite.com/docs/img/docs.png\n    link: http://docs.jeesite.com\n    name: JeeSite 在线文档\n    desc: JeeSite 快速开发平台 - 在线文档\n    author: ThinkGem\n    avatar: https://jeesite.com/docs/img/logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/dreamncn/picBed@master/uPic/2022_05_12_20_40_04_1652359204_1652359204449_9mVkaR.png\n    link: https://cleanphp.ankio.net/\n    name: CleanPHP\n    desc: CleanPHP开发者文档\n    author: ankio\n    avatar: https://jsd.cdn.zzko.cn/gh/dreamncn/picBed@master/uPic/2022_04_04_19_48_51_1649072931_1649072931346_h4BGpQ.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/28284d.56bkx9qvhc00.webp\n    link: https://jpom-docs.keepbx.cn/\n    name: Jpom\n    desc: 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n    author: 不忘初心\n    avatar: https://jpom-docs.keepbx.cn/images/jpom_logo.png\n  - img: https://wumei.live/kerwincui/document/raw/branch/master/images/img.png\n    link: https://wumei.live/doc/\n    name: 物美智能\n    desc: 物美智能开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。\n    author: 随遇而安 / kerwincui\n    avatar: https://portrait.gitee.com/uploads/avatars/user/611/1834441_kerwincui_1581523162.png!avatar200\n  - img: https://pic.imgdb.cn/item/637c92ef16f2c2beb11293c7.jpg\n    link: https://trace-recorder.xusc.cn\n    name: trace-recorder官网\n    desc: 简单的， 可伸缩的， 高性能的跟踪记录仪\n    author: 蔡旺\n    avatar: https://pic.imgdb.cn/item/637c933516f2c2beb112ed43.jpg\n  - img: https://img.fastmirror.net/s/2023/04/07/64303c0e67329.png\n    link: https://ricedoc.handyplus.cn/\n    name: 米饭文档\n    desc: 米饭Minecraft插件文档\n    author: handy\n    avatar: https://img.fastmirror.net/s/2023/04/07/64303c1d551a1.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230506/68747470733a2f2f696d6730312e6b616b613939362e636f6d2f65652f65652d7765622e706e67.ok4htvc6vmo.webp\n    link: https://www.kaka996.com/\n    name: Electron-Egg\n    desc: 一个入门简单、跨平台、企业级桌面软件开发框架\n    author: 哆啦好梦\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230506/68747470733a2f2f696d6730312e6b616b613939362e636f6d2f65652f6c6f676f5f3230302e706e67.6agfx6e7l280.webp\n  - img: https://khl-py.eu.org/screenshots.png\n    link: https://khl-py.eu.org/\n    name: khl.py.docs\n    desc: kook python sdk khl.py 文档\n    author: musnows\n    avatar: https://khl-py.eu.org/favicon.ico\n  - img: http://rds-share.oss-cn-hangzhou.aliyuncs.com/admin/202309/202309090944430148132.png\n    link: https://doc.simplest.net.cn\n    name: Simplest Admin V2 文档\n    desc: 本站用于Simplest Admin 通用后台管理系统的文档系统\n    author: Tenyears\n    avatar: http://rds-share.oss-cn-hangzhou.aliyuncs.com/admin/202306/202306130908010175689.png\n  - img: https://rulego.cc/img/snapshot.png\n    link: https://rulego.cc/\n    name: RuleGo 官网\n    desc: 基于Go语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎\n    author: 玉米投手\n    avatar: https://rulego.cc/img/author_logo.jpg\n\n\n\n\n\n\n\n# 申请加入案例\n\n你想在这个页面展示你的站点吗？\n\n欢迎使用 Vdoing 主题的小伙伴到 这里 留下你的站点信息，你的站点将有机会出现在这个页面里~",
      "normalizedContent": "# 特别用户\n\nmybatis-plus官网\n\n🚀为简化开发而生\n\n青苗\n\nliteflow官网\n\n轻量，快速，稳定可编排的组件式规则引擎\n\n铂赛东\n\neasy-es官网\n\n傻瓜级elasticsearch搜索引擎orm框架\n\n老汉\n\neasy-dotnet\n\n.net 全栈知识体系。完全开源,欢迎pr共建生态\n\n一个大西瓜\n\nconfig:\n  imgheight: 140px\n\ndata:\n  # - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210729-233554@2x.22bdqeiem2sg.png\n  #   link: https://docs.openharmony.cn/pages/000000/\n  #   name: openharmony\n  #   desc: 开放原子开源基金会\n  #   author: openharmony\n  #   avatar: https://www.openharmony.cn/static/img/core-card-item2.a72a0d10.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20211215-144040.hgt2875r2zc.webp\n    link: https://baomidou.com/\n    name: mybatis-plus官网\n    desc: 🚀为简化开发而生\n    author: 青苗\n    avatar: https://baomidou.com/img/logo.svg\n  # - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210729-235804@2x.75e9lfd65t40.png\n  #   link: https://docs.deepin.org\n  #   name: deepin 社区文档\n  #   desc: deepin 应用开发技术分享、dtk开发经验等\n  #   author: deepin\n  #   avatar: https://jsd.cdn.zzko.cn/gh/xmuli/xmulipic@pic/2021/deepin.png\n  # - img: https://ks3-cn-beijing.ksyuncs.com/vform-static/img/vform_website.png\n  #   link: http://www.vform666.com\n  #   name: vform官网\n  #   desc: 低代码表单优选方案，拖拽式设计，一键生成源码\n  #   author: vformadmin\n  #   avatar: https://www.vform666.com/vform-logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/xxx.7feub7n1y0g0.png\n    link: https://liteflow.yomahub.com\n    name: liteflow官网\n    desc: 轻量，快速，稳定可编排的组件式规则引擎\n    author: 铂赛东\n    avatar: https://portrait.gitee.com/uploads/avatars/user/367/1102362_bryan31_1578940308.png!avatar60\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/176866696-743faf44-4afd-4c12-9728-f982ea885836.2205nb3vf5mo.webp\n    link: https://easy-es.cn/\n    name: easy-es官网\n    desc: 傻瓜级elasticsearch搜索引擎orm框架\n    author: 老汉\n    avatar: https://iknow.hs.net/9fa0407f-30ff-4d8b-82da-a4990e41a04b.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230903/wx20230903-160123@2x.2urwej0micw0.webp\n    link: https://easy-dotnet.com/\n    name: easy-dotnet\n    desc: .net 全栈知识体系。完全开源,欢迎pr共建生态\n    author: 一个大西瓜\n    avatar: https://easy-dotnet.com/img/logo.png\n\n\n\n# 知识库兼博客\n\nevan's blog\n\nweb前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n\nevan xu\n\n麋鹿鲁哟\n\n运气交给锦鲤，\n你只管努力就好。 (●ˇ∀ˇ●)\n\n麋鹿鲁哟\n\nlingze's blog\n\n少侠, 别来无恙?\n\n令则\n\nsummer's blog\n\ndevops运维技术博客，分享运维技术\n\n夏苏文\n\ngocifer's db & blog\n\n一个中二少年，专注于计算机基础架构、云原生、网络、云计算的所学、所思、所行、所想。\n\ngocifer.jay\n\ndra-m\n\njava后端\n\n莫小龙\n\n跟着老侯玩编程\n\n一个乐于编程知识分享的站点\n\n舞动的代码\n\n学习笔记\n\n平时的技术积累|分享交流技术心得|温故而知新\n\n爱做梦的奋斗青年\n\n研究院\n\n一万年太久，只争朝夕\n\nxwyang\n\nkimen's blog\n\n全沾攻城狮\n\nkimen\n\nxlong's blog\n\n蒸汽波、咖啡\n\nlixianglong3210\n\n偷吃了鸡蛋的梨\n\n捣鼓这,捣鼓那。\n\nawrtiger\n\nxinghai's blog\n\nweb security | java security\n\nxinghai\n\n二丫讲梵\n\n学习，记录，分享。(运维生活编程)\n\n二丫讲梵\n\n松松的一尺三分地\n\n记录工作和学习中的所得\n\nmasongsong\n\nyoung kbt blog\n\n记录学习java, web, 框架, 工具, 前端等相关知识, 记录生活和技术路程, 分享编程技巧。\n\nship liu\n\n梵一的博客\n\n个人博客和知识分享\n\n梵一\n\n未读代码\n\njava 开发知识库，分享原创文章\n\n程序猿阿朗\n\n松本松的博客儿\n\nweb前端技术博客，积跬步以至千里。\n\nsimonzhangs\n\n远方的灯塔\n\n专注于服务端技术分享\n\nterwer\n\nsuya's blog\n\n个人博客，分享技术文章，学习笔记，植物相关知识等。\n\nsuya\n\ncolorpanda\n\n日语中文英文学习网站\n\ncolorpanda\n\nzihanio\n\nzihan的学习博客\n\nzihan\n\n不器小窝\n\n但知行好事,莫要问前程\n\n不器\n\nvdoing主题博客模板\n\nvdoing主题博客模板\n\neryajf\n\njava essay\n\njava散文知识库，spring全家桶，springcloud全家桶，高可用高并发架构，面试等\n\nmr.fire\n\n行百里er\n\njava,个人技术博客,后端开发,技术架构,分布式技术,spring cloud alibaba,elasticsearch,redis,算法,数据结构,git\n\n行百里er\n\ncaptain\n\n学习技术，java基础、面试知识点、项目经验总结和一些学习笔记\n\ncaptain\n\n小薛博客\n\n小薛博客，专注it技术分享，助力人人成为架构师\n\nxueqimiao\n\n呆呆的博客\n\n个人博客\n\n呆呆\n\njorgen's blog\n\n🚀个人知识库兼博客🚀\n\njorgen\n\nkronos‘ blog\n\n内心丰盈者，独行也如众\n\n忘忧\n\najay\n\nctf学习记录\n\najay\n\nconfig:\n  imgheight: 140px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114033.png\n    link: https://xugaoyi.com/\n    name: evan's blog\n    desc: web前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n    author: evan xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200727170555.jpg\n    link: https://miluluyo.github.io/vdoingblog/\n    name: 麋鹿鲁哟\n    desc: 运气交给锦鲤，</br>你只管努力就好。  (●ˇ∀ˇ●)\n    author: 麋鹿鲁哟\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg\n  - img: https://i.loli.net/2020/07/26/bucplirgiq9ytna.png\n    link: https://lingze.xyz/\n    name: lingze's blog\n    desc: 少侠, 别来无恙?\n    author: 令则\n    avatar: https://i.loli.net/2020/07/11/xhqr7idnk5ld8bc.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210730-000829@2x.6pjgy10flk00.png\n    link: https://www.xswsym.online/\n    name: summer's blog\n    desc: devops运维技术博客，分享运维技术\n    author: 夏苏文\n    avatar: https://jsd.cdn.zzko.cn/gh/summerking1/image@main/tx.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201110221457.png\n    link: https://gocifer.github.io\n    name: gocifer's db & blog\n    desc: 一个中二少年，专注于计算机基础架构、云原生、网络、云计算的所学、所思、所行、所想。\n    author: gocifer.jay\n    avatar: https://gocifer.github.io/img/avatar/gocifer.png\n  - img: https://dra-m.com/images/thumbnail.png\n    link: https://dra-m.com/\n    name: dra-m\n    desc: java后端\n    author: 莫小龙\n    avatar: https://q1.qlogo.cn/g?b=qq&nk=975425198&s=640\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200905142134.png\n    link: https://www.coder163.com/\n    name: 跟着老侯玩编程\n    desc: 一个乐于编程知识分享的站点\n    author: 舞动的代码\n    avatar: https://www.coder163.com/img/qun.png\n\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20210119213748.jpg\n    link: https://haijunit.top/\n    name: 学习笔记\n    desc: 平时的技术积累|分享交流技术心得|温故而知新\n    author: 爱做梦的奋斗青年\n    avatar: https://haijunit.top/images/avatar.png\n  - img: https://jsd.cdn.zzko.cn/gh/yxw839841231/images/studying-icu/20210120110320.png\n    link: https://www.studying.icu/\n    name: 研究院\n    desc: 一万年太久，只争朝夕\n    author: xwyang\n    avatar: https://avatars1.githubusercontent.com/u/13757119?s=80&v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210704-230751@2x.3pw80u1fo6u0.png\n    link: https://blog.kimen.com.cn/\n    name: kimen's blog\n    desc: 全沾攻城狮\n    author: kimen\n    avatar: https://avatars.githubusercontent.com/u/25970284?s=460&u=69b419ad6de33eaa1d6b73d7f065f710076d6c55&v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20211101-165045-(1).4b4axinii160.png\n    link: https://lixianglong3210.gitee.io/xlong-vdoing/\n    name: xlong's blog\n    desc: 蒸汽波、咖啡\n    author: lixianglong3210\n    avatar: http://www.lixianglong.cn/bg_store/img/avatar/default.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/awrtiger/mirrorfile/img/web.png\n    link: https://www.ool.cool/\n    name: 偷吃了鸡蛋的梨\n    desc: 捣鼓这,捣鼓那。\n    author: awrtiger\n    avatar: https://jsd.cdn.zzko.cn/gh/awrtiger/mirrorfile/img/avatar.jpg\n  - img: https://image-1302577725.cos.ap-beijing.myqcloud.com/img/20210402183053.png\n    link: https://f4de-bak.github.io/\n    name: xinghai's blog\n    desc: web security | java security\n    author: xinghai\n    avatar: https://image-1302577725.cos.ap-beijing.myqcloud.com/img/20210328234543.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/eyjf.png\n    link: https://wiki.eryajf.net\n    name: 二丫讲梵\n    desc: 学习，记录，分享。(运维生活编程)\n    author: 二丫讲梵\n    avatar: https://wiki.eryajf.net/img/logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/ss.2tev477ruza0.png\n    link: https://masongsong.cn\n    name: 松松的一尺三分地\n    desc: 记录工作和学习中的所得\n    author: masongsong\n    avatar: https://jsd.cdn.zzko.cn/gh/msstext/learn@master/images/49203535.35emn5vryma0.png\n  - img: https://jsd.cdn.zzko.cn/gh/kele-bingtang/static/user/20211218235045.png\n    link: https://notes.youngkbt.cn/\n    name: young kbt blog\n    desc: 记录学习java, web, 框架, 工具, 前端等相关知识, 记录生活和技术路程, 分享编程技巧。\n    author: ship liu\n    avatar: https://jsd.cdn.zzko.cn/gh/kele-bingtang/static/user/avatar2.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/20220210094650.3q09d26tigc0.webp\n    link: https://chuck6.github.io/blog/\n    name: 梵一的博客\n    desc: 个人博客和知识分享\n    author: 梵一\n    avatar: https://chuck6.github.io/blog/img/paizhao.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/niumoo/cdn-assets/2021/20220316145528.png\n    link: https://www.wdbyte.com\n    name: 未读代码\n    desc: java 开发知识库，分享原创文章\n    author: 程序猿阿朗\n    avatar: https://avatars.githubusercontent.com/u/26371673?v=4\n  - img: https://jsd.cdn.zzko.cn/gh/simonzhangs/image-hosting@master/vue-plugin-example/blog.qg2buhe5h4g.webp\n    link: https://simonzhangs.github.io/\n    name: 松本松的博客儿\n    desc: web前端技术博客，积跬步以至千里。\n    author: simonzhangs\n    avatar: https://jsd.cdn.zzko.cn/gh/simonzhangs/image-hosting@master/20220319/image.4x708q9wzse0.webp\n  - img: https://jsd.cdn.zzko.cn/gh/terwer/upload/img/image-20220422000045653.png\n    link: http://terwergreen.com\n    name: 远方的灯塔\n    desc: 专注于服务端技术分享\n    author: terwer\n    avatar: https://jsd.cdn.zzko.cn/gh/terwer/upload/img/photo.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/nksuya/image_store@main/suyablog_home.5iou2ogjrm80.webp\n    link: https://suyaspace.com/\n    name: suya's blog\n    desc: 个人博客，分享技术文章，学习笔记，植物相关知识等。\n    author: suya\n    avatar: https://jsd.cdn.zzko.cn/gh/nksuya/image_store@master/tech/avatar.2tycyyc1ebr4.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store2@master/img/qq20220526-224620@2x.44o82ibj9qq0.png\n    link: https://colorpanda.aifan.jp/\n    name: colorpanda\n    desc: 日语中文英文学习网站\n    author: colorpanda\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store2@master/img/image.3qr8m501tl20.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/asdf.23jsekfejla8.jpeg\n    link: https://inannan423.github.io/\n    name: zihanio\n    desc: zihan的学习博客\n    author: zihan\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/xxx.67b3ygadagk0.jpeg\n  - img: https://user-images.githubusercontent.com/866409/175853573-28ded198-2348-4a82-8ddd-05088161e3fe.png\n    link: https://xingcxb.com\n    name: 不器小窝\n    desc: 但知行好事,莫要问前程\n    author: 不器\n    avatar: https://avatars.githubusercontent.com/u/866409?v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/qq20220722-141037.22uk9ow7ary.png\n    link: https://eryajf.github.io/vdoing-template/\n    name: vdoing主题博客模板\n    desc: vdoing主题博客模板\n    author: eryajf\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/33259379.277tur21ir40.jpeg\n  - img: https://jsd.cdn.zzko.cn/gh/firehh/github_img_repository/logo/微信截图_20220810164903.png\n    link: https://javaessay.cn/\n    name: java essay\n    desc: java散文知识库，spring全家桶，springcloud全家桶，高可用高并发架构，面试等\n    author: mr.fire\n    avatar: https://jsd.cdn.zzko.cn/gh/firehh/github_img_repository/logo/huge.jpg\n  - img: https://chendapeng.cn/images/about/blog_image.png\n    link: https://chendapeng.cn\n    name: 行百里er\n    desc: java,个人技术博客,后端开发,技术架构,分布式技术,spring cloud alibaba,elasticsearch,redis,算法,数据结构,git\n    author: 行百里er\n    avatar: https://chendapeng.cn/images/about/avatar.png\n  - img: http://xyhwh-nav.cn/img/index.png\n    link: http://xyhwh-nav.cn\n    name: captain\n    desc: 学习技术，java基础、面试知识点、项目经验总结和一些学习笔记\n    author: captain\n    avatar: http://xyhwh-nav.cn/img/logo.png\n  - img: https://xiaoxue-images.oss-cn-shenzhen.aliyuncs.com/blog/202212271108541.jpg\n    link: https://blog.xueqimiao.com/\n    name: 小薛博客\n    desc: 小薛博客，专注it技术分享，助力人人成为架构师\n    author: xueqimiao\n    avatar: https://xiaoxue-images.oss-cn-shenzhen.aliyuncs.com/blog/202212271110209.png\n  - img: https://jsd.cdn.zzko.cn/gh/su-dd/cdn/博客/202301311644669.png\n    link: https://blog.addai.cn/\n    name: 呆呆的博客\n    desc: 个人博客\n    author: 呆呆\n    avatar: https://cdn.addai.cn/博客/网站使用/呆呆.webp\n  - img: https://jsd.cdn.zzko.cn/jorgen-zhao/blog/master/images/snapshot.png\n    link: https://jorgen.website\n    name: jorgen's blog\n    desc: 🚀个人知识库兼博客🚀\n    author: jorgen\n    avatar: https://jorgen.website/img/avatar.jpg\n  - img: https://cdn.jsdelivr.net/gh/jywangyou/images@master/img/index.20ce120yilgg.png\n    link: https://blog.wangyou.ink/\n    name: kronos‘ blog\n    desc: 内心丰盈者，独行也如众\n    author: 忘忧\n    avatar: https://cdn.jsdelivr.net/gh/jywangyou/images@master/img/okhead.5l9l7bclm5o0.png\n  - img: https://the0n3.top/medias/friends/siteimage.png\n    link: https://the0n3.top/\n    name: ajay\n    desc: ctf学习记录\n    author: ajay\n    avatar: https://the0n3.top/medias/friends/syz.png\n\n\n\n# 知识库\n\n知识库演示\n\nvdoing主题演示-知识库\n\nevan xu\n\nx86软路由和nas\n\n记录x86软路由和nas的一些知识\n\nmonologuechi\n\n计算模拟学习笔记\n\n《能源环境材料计算模拟方法》学习笔记，涉及密度泛函理论、第一性原理等和materials studio、vasp等的使用。\n\nnorthword\n\nsingerw's repository\n\n技术的风花雪月之事，有个存档的地方，对于复盘，回忆，都是一个极好的方谭。\n\nsingerw\n\nhippo4j\n\n🔥 动态线程池框架，附带监控报警功能，轻量级的运维监控平台\n\nacmenlt\n\n地信遥感数据汇\n\n解决目前地信遥感方向数据混杂，资源难以寻找的问题，构建一个地信遥感学习、讨论、交流的平台。\n\n锐多宝\n\nde7v\n\n专注于安卓领域的技术传播\n\nwresource\n\nhowtostartopensource\n\ngithub开源项目维护协作指南\n\neryajf\n\nconfig:\n  imgheight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114035.png\n    link: https://xugaoyi.github.io/vdoing-demo-repository/\n    name: 知识库演示\n    desc: vdoing主题演示-知识库\n    author: evan xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201219205536.jpg\n    link: https://wiki.router86.com/\n    name: x86软路由和nas\n    desc: 记录x86软路由和nas的一些知识\n    author: monologuechi\n    avatar: https://blog.xxwhite.com/assets/img/avatar.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201219205318.jpg\n    link: https://blog.northword.cn/dft-learning\n    name: 计算模拟学习笔记\n    desc: 《能源环境材料计算模拟方法》学习笔记，涉及密度泛函理论、第一性原理等和materials studio、vasp等的使用。\n    author: northword\n    avatar: https://storage.live.com/items/28c1032a24a9c53b!25785?authkey=ahax3goyekgqm8i\n  - img: https://singerwimg-1300001977.cos.accelerate.myqcloud.com/20211008/wccsrj0s.png\n    link: https://repository.singerw.com\n    name: singerw's repository\n    desc: 技术的风花雪月之事，有个存档的地方，对于复盘，回忆，都是一个极好的方谭。\n    author: singerw\n    avatar: https://singerwimg-1300001977.cos.accelerate.myqcloud.com/2021/09/20/76f29482ffc9b.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/qq20220113-114927.5oha7j06c580.webp\n    link: https://hippox.cn\n    name: hippo4j\n    desc: 🔥 动态线程池框架，附带监控报警功能，轻量级的运维监控平台\n    author: acmenlt\n    avatar: https://hippox.cn/img/web.png\n  - img: https://pics.landcover100.com/pics/624e63f4c82b8.png\n    link: https://www.gisrsdata.com\n    name: 地信遥感数据汇\n    desc: 解决目前地信遥感方向数据混杂，资源难以寻找的问题，构建一个地信遥感学习、讨论、交流的平台。\n    author: 锐多宝\n    avatar: https://pics.landcover100.com/pics/624e6469cbb8a.jpg\n  - img: https://img.de7v.com/img/site-pic.jpg\n    link: https://www.de7v.com\n    name: de7v\n    desc: 专注于安卓领域的技术传播\n    author: wresource\n    avatar: https://img.de7v.com/img/wresource.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/11123.1aljpnjyr074.png\n    link: https://eryajf.github.io/howtostartopensource/\n    name: howtostartopensource\n    desc: github开源项目维护协作指南\n    author: eryajf\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/33259379.277tur21ir40.jpeg\n\n\n\n# 社区类\n\n奕维投资教程站\n\n股票投资\n\n奕维\n\nconfig:\n  imgheight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200921220111.png\n    link: https://course.yiwiz.com/\n    name: 奕维投资教程站\n    desc: 股票投资\n    author: 奕维\n    avatar: https://course.yiwiz.com/img/logo.png\n\n\n\n# 博客类\n\nvdoing's blog\n\nvdoing主题演示-博客\n\nevan xu\n\nteler的日常\n\n好好学习，天天向上\n\nteler\n\nxustudyxu's blog\n\n一起学习编程!\n\nxustudyxu\n\nconfig:\n  imgheight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114034.png\n    link: https://xugaoyi.github.io/vdoing-demo-blog/\n    name: vdoing's blog\n    desc: vdoing主题演示-博客\n    author: evan xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://s4.ax1x.com/2022/02/25/bajinf.png\n    link: https://fangweilong.github.io/\n    name: teler的日常\n    desc: 好好学习，天天向上\n    author: teler\n    avatar: https://s4.ax1x.com/2022/02/25/bava8j.jpg\n  - img: https://user-images.githubusercontent.com/53399655/163007243-1b99b96b-cac3-49ca-9950-03a1e877a6d8.png\n    link: https://xustudyxu.github.io/\n    name: xustudyxu's blog\n    desc: 一起学习编程!\n    author: xustudyxu\n    avatar: https://xustudyxu.github.io/img/01.png\n\n\n\n# 文档类\n\nvdoing(本站)\n\n🚀一款简洁高效的vuepress 知识管理&博客 主题\n\nevan xu\n\nja plus 开发者文档\n\n一款开源的登录认证中间件\n\nyadong,zhang\n\ndokimod 开发文档\n\n为 ddlc mod 开发提供的完善文档\n\nimgradeone\n\njeesite 在线文档\n\njeesite 快速开发平台 - 在线文档\n\nthinkgem\n\ncleanphp\n\ncleanphp开发者文档\n\nankio\n\njpom\n\n简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n\n不忘初心\n\n物美智能\n\n物美智能开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。\n\n随遇而安 / kerwincui\n\ntrace-recorder官网\n\n简单的， 可伸缩的， 高性能的跟踪记录仪\n\n蔡旺\n\n米饭文档\n\n米饭minecraft插件文档\n\nhandy\n\nelectron-egg\n\n一个入门简单、跨平台、企业级桌面软件开发框架\n\n哆啦好梦\n\nkhl.py.docs\n\nkook python sdk khl.py 文档\n\nmusnows\n\nsimplest admin v2 文档\n\n本站用于simplest admin 通用后台管理系统的文档系统\n\ntenyears\n\nrulego 官网\n\n基于go语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎\n\n玉米投手\n\nconfig:\n  imgheight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114036.png\n    link: https://xugaoyi.github.io/vuepress-theme-vdoing-doc/\n    name: vdoing(本站)\n    desc: 🚀一款简洁高效的vuepress 知识管理&博客 主题\n    author: evan xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210925-124836@2x (1).6ogvf85maog0.png\n    link: https://justauth.plus/\n    name: ja plus 开发者文档\n    desc: 一款开源的登录认证中间件\n    author: yadong,zhang\n    avatar: https://portrait.gitee.com/uploads/avatars/user/261/784199_yadong.zhang_1578932767.png!avatar200\n  - img: https://assets.imgradeone.com/docsdokimod-pv.png\n    link: https://docs.dokimod.cn\n    name: dokimod 开发文档\n    desc: 为 ddlc mod 开发提供的完善文档\n    author: imgradeone\n    avatar: https://docs.dokimod.cn/logo_128x128.png\n  # - img: http://yogoyun.oss-cn-beijing.aliyuncs.com/help/public/other/20200630125515.png\n  #   link: http://help.yogoyun.com/\n  #   name: 柚果云服务\n  #   desc: 智能商业应用程序服务商。\n  #   author: 柚果云服务\n  #   avatar: http://yogoyun.oss-cn-beijing.aliyuncs.com/admin/console/logo.png\n  - img: https://jeesite.com/docs/img/docs.png\n    link: http://docs.jeesite.com\n    name: jeesite 在线文档\n    desc: jeesite 快速开发平台 - 在线文档\n    author: thinkgem\n    avatar: https://jeesite.com/docs/img/logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/dreamncn/picbed@master/upic/2022_05_12_20_40_04_1652359204_1652359204449_9mvkar.png\n    link: https://cleanphp.ankio.net/\n    name: cleanphp\n    desc: cleanphp开发者文档\n    author: ankio\n    avatar: https://jsd.cdn.zzko.cn/gh/dreamncn/picbed@master/upic/2022_04_04_19_48_51_1649072931_1649072931346_h4bgpq.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/28284d.56bkx9qvhc00.webp\n    link: https://jpom-docs.keepbx.cn/\n    name: jpom\n    desc: 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n    author: 不忘初心\n    avatar: https://jpom-docs.keepbx.cn/images/jpom_logo.png\n  - img: https://wumei.live/kerwincui/document/raw/branch/master/images/img.png\n    link: https://wumei.live/doc/\n    name: 物美智能\n    desc: 物美智能开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。\n    author: 随遇而安 / kerwincui\n    avatar: https://portrait.gitee.com/uploads/avatars/user/611/1834441_kerwincui_1581523162.png!avatar200\n  - img: https://pic.imgdb.cn/item/637c92ef16f2c2beb11293c7.jpg\n    link: https://trace-recorder.xusc.cn\n    name: trace-recorder官网\n    desc: 简单的， 可伸缩的， 高性能的跟踪记录仪\n    author: 蔡旺\n    avatar: https://pic.imgdb.cn/item/637c933516f2c2beb112ed43.jpg\n  - img: https://img.fastmirror.net/s/2023/04/07/64303c0e67329.png\n    link: https://ricedoc.handyplus.cn/\n    name: 米饭文档\n    desc: 米饭minecraft插件文档\n    author: handy\n    avatar: https://img.fastmirror.net/s/2023/04/07/64303c1d551a1.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230506/68747470733a2f2f696d6730312e6b616b613939362e636f6d2f65652f65652d7765622e706e67.ok4htvc6vmo.webp\n    link: https://www.kaka996.com/\n    name: electron-egg\n    desc: 一个入门简单、跨平台、企业级桌面软件开发框架\n    author: 哆啦好梦\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230506/68747470733a2f2f696d6730312e6b616b613939362e636f6d2f65652f6c6f676f5f3230302e706e67.6agfx6e7l280.webp\n  - img: https://khl-py.eu.org/screenshots.png\n    link: https://khl-py.eu.org/\n    name: khl.py.docs\n    desc: kook python sdk khl.py 文档\n    author: musnows\n    avatar: https://khl-py.eu.org/favicon.ico\n  - img: http://rds-share.oss-cn-hangzhou.aliyuncs.com/admin/202309/202309090944430148132.png\n    link: https://doc.simplest.net.cn\n    name: simplest admin v2 文档\n    desc: 本站用于simplest admin 通用后台管理系统的文档系统\n    author: tenyears\n    avatar: http://rds-share.oss-cn-hangzhou.aliyuncs.com/admin/202306/202306130908010175689.png\n  - img: https://rulego.cc/img/snapshot.png\n    link: https://rulego.cc/\n    name: rulego 官网\n    desc: 基于go语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎\n    author: 玉米投手\n    avatar: https://rulego.cc/img/author_logo.jpg\n\n\n\n\n\n\n\n# 申请加入案例\n\n你想在这个页面展示你的站点吗？\n\n欢迎使用 vdoing 主题的小伙伴到 这里 留下你的站点信息，你的站点将有机会出现在这个页面里~",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/img/logo.png",
        "heroText": "vuepress-theme-vdoing",
        "tagline": "🚀一款简洁高效的VuePress 知识管理&博客 主题",
        "actionText": "开始使用 →",
        "actionLink": "/doc/pages/fast-start/",
        "bannerBg": "none",
        "features": [
          {
            "title": "知识管理",
            "details": "包含三种典型的知识管理形态：结构化、碎片化、体系化。轻松打造属于你自己的知识管理平台"
          },
          {
            "title": "简洁高效",
            "details": "以 Markdown 为中心的项目结构，内置自动化工具，以更少的配置完成更多的事。配合多维索引快速定位每个知识点"
          },
          {
            "title": "沉浸式阅读",
            "details": "专为阅读设计的UI，配合多种颜色模式、可关闭的侧边栏和导航栏，带给你一种沉浸式阅读体验"
          }
        ],
        "postList": "none"
      },
      "regularPath": "/",
      "relativePath": "index.md",
      "key": "v-197a1f36",
      "path": "/",
      "headers": [
        {
          "level": 2,
          "title": "🎖特别用户",
          "slug": "🎖特别用户",
          "normalizedTitle": "🎖特别用户",
          "charIndex": 36
        },
        {
          "level": 2,
          "title": "🎉上新推荐",
          "slug": "🎉上新推荐",
          "normalizedTitle": "🎉上新推荐",
          "charIndex": 604
        },
        {
          "level": 2,
          "title": "⚡ 反馈与交流",
          "slug": "⚡-反馈与交流",
          "normalizedTitle": "⚡ 反馈与交流",
          "charIndex": 1202
        }
      ],
      "headersStr": "🎖特别用户 🎉上新推荐 ⚡ 反馈与交流",
      "content": "支持这个项目\n\n\n\n\n\n欢迎使用DI-Link IoT平台\n\n\n\n\n# 🎖特别用户\n\nMyBatis-Plus官网\n\n🚀为简化开发而生\n\n# - name: OpenHarmony\n#   desc: 开放原子开源基金会\n#   link: https://docs.openharmony.cn/pages/000000/\n#   bgColor: '#f1f1f1'\n#   textColor: '#2A3344'\n- name: MyBatis-Plus官网\n  desc: 🚀为简化开发而生\n  link: https://baomidou.com/\n  bgColor: '#f1f1f1'\n  textColor: '#2A3344'\n# - name: Deepin 社区\n#   desc: Deepin 应用开发技术分享、DTK开发经验等\n#   link: https://docs.deepin.org\n#   bgColor: '#f1f1f1'\n#   textColor: '#2A3344'\n# - name: VForm官网\n#   desc: 低代码表单优选方案，拖拽式设计，一键生成源码\n#   link: http://www.vform666.com\n#   bgColor: '#f1f1f1'\n#   textColor: '#2A3344'\n\n\n\n\n# 🎉上新推荐\n\n * v1.12.x\n   * 新增配置项pageStyle，用于切换页面的风格样式，可选卡片、 线条风格。详情\n   * 新增配置项bodyBgImgInterval，用于在设置了多张背景大图时修改大图切换的时间间隔。详情\n   * 新增配置项defaultMode，用于修改默认外观模式(v1.12.3)。详情\n * v1.11.x：新增配置项extendFrontmatter，用于扩展自动生成front matter。详情\n * v1.10.x：新增右侧目录栏对h2~h6标题的适配，并优化了UI，详情。\n * v1.9.x：新增配置文件对TypeScript的支持，参考config.ts。新增标题标记。\n * v1.8.x：新增 Markdown中使用的组件：代码块选项卡 。\n * v1.7.x：新增 自定义html模块 配置，可用于插入广告模块。\n * v1.6.x：支持四级目录，提高站点结构可塑性。\n * v1.5.x：新增笔记容器，轻松插入笔记框。\n * v1.4.x：新增了文章内容区块的 背景底纹配置，让你的文章看起来像笔记本的风格~\n * v1.2.x：这个版本对整体的UI细节做了很多优化，比如标签栏和分类栏等\n * v1.1.x：从这个版本开始主题新增超好用、高颜值的Markdown容器，快去 体验 吧~\n\n更多上新请查阅：更新日志\n\n\n\n\n# ⚡ 反馈与交流\n\n在使用过程中有任何问题和想法，请给我提 Issue。 你也可以在Issue查看别人提的问题和给出解决方案。\n\n或者加入我们的交流群：\n\nvdoing微信群(添加我微信备注\"进群\")   vdoing QQ群: 694387113\n\n",
      "normalizedContent": "支持这个项目\n\n\n\n\n\n欢迎使用di-link iot平台\n\n\n\n\n# 🎖特别用户\n\nmybatis-plus官网\n\n🚀为简化开发而生\n\n# - name: openharmony\n#   desc: 开放原子开源基金会\n#   link: https://docs.openharmony.cn/pages/000000/\n#   bgcolor: '#f1f1f1'\n#   textcolor: '#2a3344'\n- name: mybatis-plus官网\n  desc: 🚀为简化开发而生\n  link: https://baomidou.com/\n  bgcolor: '#f1f1f1'\n  textcolor: '#2a3344'\n# - name: deepin 社区\n#   desc: deepin 应用开发技术分享、dtk开发经验等\n#   link: https://docs.deepin.org\n#   bgcolor: '#f1f1f1'\n#   textcolor: '#2a3344'\n# - name: vform官网\n#   desc: 低代码表单优选方案，拖拽式设计，一键生成源码\n#   link: http://www.vform666.com\n#   bgcolor: '#f1f1f1'\n#   textcolor: '#2a3344'\n\n\n\n\n# 🎉上新推荐\n\n * v1.12.x\n   * 新增配置项pagestyle，用于切换页面的风格样式，可选卡片、 线条风格。详情\n   * 新增配置项bodybgimginterval，用于在设置了多张背景大图时修改大图切换的时间间隔。详情\n   * 新增配置项defaultmode，用于修改默认外观模式(v1.12.3)。详情\n * v1.11.x：新增配置项extendfrontmatter，用于扩展自动生成front matter。详情\n * v1.10.x：新增右侧目录栏对h2~h6标题的适配，并优化了ui，详情。\n * v1.9.x：新增配置文件对typescript的支持，参考config.ts。新增标题标记。\n * v1.8.x：新增 markdown中使用的组件：代码块选项卡 。\n * v1.7.x：新增 自定义html模块 配置，可用于插入广告模块。\n * v1.6.x：支持四级目录，提高站点结构可塑性。\n * v1.5.x：新增笔记容器，轻松插入笔记框。\n * v1.4.x：新增了文章内容区块的 背景底纹配置，让你的文章看起来像笔记本的风格~\n * v1.2.x：这个版本对整体的ui细节做了很多优化，比如标签栏和分类栏等\n * v1.1.x：从这个版本开始主题新增超好用、高颜值的markdown容器，快去 体验 吧~\n\n更多上新请查阅：更新日志\n\n\n\n\n# ⚡ 反馈与交流\n\n在使用过程中有任何问题和想法，请给我提 issue。 你也可以在issue查看别人提的问题和给出解决方案。\n\n或者加入我们的交流群：\n\nvdoing微信群(添加我微信备注\"进群\")   vdoing qq群: 694387113\n\n",
      "charsets": {
        "cjk": true
      },
      "lastUpdated": "2024/06/25, 16:45:34",
      "lastUpdatedTimestamp": 1719305134000
    },
    {
      "title": "博客文章",
      "frontmatter": {
        "archivesPage": true,
        "title": "博客文章",
        "permalink": "/blog/",
        "article": false
      },
      "regularPath": "/@pages/archivesPage.html",
      "relativePath": "@pages/archivesPage.md",
      "key": "v-0b57a5e8",
      "path": "/blog/",
      "headersStr": null,
      "content": "",
      "normalizedContent": "",
      "charsets": {},
      "lastUpdated": "2024/06/25, 16:45:34",
      "lastUpdatedTimestamp": 1719305134000
    }
  ],
  "themeConfig": {
    "nav": [
      {
        "text": "文档",
        "items": [
          {
            "text": "速览",
            "items": [
              {
                "text": "快速开始",
                "link": "/doc/pages/fast-start/"
              },
              {
                "text": "功能概览",
                "link": "/doc/pages/web-guide/"
              }
            ]
          },
          {
            "text": "系统",
            "items": [
              {
                "text": "首页",
                "link": "/doc/pages/homePage/map-display/"
              },
              {
                "text": "产品管理",
                "link": "/doc/pages/productManage/product-list/"
              },
              {
                "text": "设备管理",
                "link": "/doc/pages/deviceManage/device-list/"
              },
              {
                "text": "数据中心",
                "link": "/doc/pages/dataCenter/data-center/"
              },
              {
                "text": "项目管理",
                "link": "/doc/pages/projectManage/project-list/"
              },
              {
                "text": "经销商管理",
                "link": "/doc/pages/distributorManage/distributor-list/"
              },
              {
                "text": "个人中心",
                "link": "/doc/pages/personalCenter/personal-information/"
              }
            ]
          }
        ]
      },
      {
        "text": "案例",
        "link": "/pages/5d571c/"
      },
      {},
      {},
      {},
      {},
      {}
    ],
    "sidebarDepth": 2,
    "logo": "/img/logo.png",
    "searchMaxSuggestions": 10,
    "lastUpdated": "上次更新",
    "sidebar": {
      "/01.文档/": [
        {
          "title": "速览",
          "collapsable": false,
          "children": [
            [
              "01.速览/01.快速开始.md",
              "快速开始",
              "/doc/pages/fast-start"
            ],
            [
              "01.速览/02.功能概览.md",
              "功能概览",
              "/doc/pages/web-guide"
            ]
          ]
        },
        {
          "title": "首页",
          "collapsable": false,
          "children": [
            [
              "02.首页/01.地图展示.md",
              "地图展示",
              "/doc/pages/homePage/map-display"
            ],
            [
              "02.首页/02.大屏展示.md",
              "大屏展示",
              "/doc/pages/homePage/data-display"
            ],
            [
              "02.首页/03.统计信息.md",
              "统计信息",
              "/doc/pages/homePage/statistics"
            ]
          ]
        },
        {
          "title": "产品管理",
          "collapsable": false,
          "children": [
            [
              "03.产品管理/01.产品清单.md",
              "产品清单",
              "/doc/pages/productManage/product-list"
            ]
          ]
        },
        {
          "title": "设备管理",
          "collapsable": false,
          "children": [
            [
              "04.设备管理/01.设备清单.md",
              "设备清单",
              "/doc/pages/deviceManage/device-list"
            ],
            [
              "04.设备管理/02.设备授权.md",
              "设备授权",
              "/doc/pages/deviceManage/device-authorize"
            ],
            [
              "04.设备管理/03.设备录入.md",
              "设备录入",
              "/doc/pages/deviceManage/device-enter"
            ],
            [
              "04.设备管理/04.设备分配.md",
              "设备分配",
              "/doc/pages/deviceManage/device-allocation"
            ]
          ]
        },
        {
          "title": "数据中心",
          "collapsable": false,
          "children": [
            [
              "05.数据中心/01.关键数据.md",
              "关键数据",
              "/doc/pages/dataCenter/data-center"
            ],
            [
              "05.数据中心/02.报警数据.md",
              "报警数据",
              "/doc/pages/dataCenter/alarm-data"
            ],
            [
              "05.数据中心/03.设备日志.md",
              "设备日志",
              "/doc/pages/dataCenter/device-log"
            ],
            [
              "05.数据中心/04.控制日志.md",
              "控制日志",
              "/doc/pages/dataCenter/control-data"
            ]
          ]
        },
        {
          "title": "项目管理",
          "collapsable": false,
          "children": [
            [
              "06.项目管理/01.项目清单.md",
              "项目清单",
              "/doc/pages/projectManage/project-list"
            ]
          ]
        },
        {
          "title": "经销商管理",
          "collapsable": false,
          "children": [
            [
              "07.经销商管理/01.经销商清单.md",
              "经销商清单",
              "/doc/pages/distributorManage/distributor-list"
            ]
          ]
        },
        {
          "title": "个人中心",
          "collapsable": false,
          "children": [
            [
              "08.个人中心/01.个人中心.md",
              "个人信息",
              "/doc/pages/personalCenter/personal-information"
            ]
          ]
        }
      ],
      "catalogue": {},
      "/02.案例/": [
        [
          "01.案例.md",
          "案例",
          "/pages/5d571c"
        ]
      ]
    },
    "updateBar": {
      "showToArticle": false
    },
    "pageStyle": "line",
    "category": false,
    "tag": false,
    "footer": {
      "createYear": 2019,
      "copyrightInfo": "Evan Xu | MIT License"
    },
    "htmlModules": {
      "pageT": "\n    <div class=\"wwads-cn wwads-horizontal page-wwads\" data-id=\"136\"></div>\n    <style>\n      .page-wwads{\n        width:100%!important;\n        min-height: 0;\n        margin: 0;\n      }\n      .page-wwads .wwads-img img{\n        width:80px!important;\n      }\n      .page-wwads .wwads-poweredby{\n        width: 40px;\n        position: absolute;\n        right: 25px;\n        bottom: 3px;\n      }\n      .wwads-content .wwads-text, .page-wwads .wwads-text{\n        height: 100%;\n        padding-top: 5px;\n        display: block;\n      }\n  </style>\n  ",
      "sidebarT": "\n  <a href=\"http://apifox.cn/a103xugaoyi\" target=\"_blank\">\n    <img src=\"/img/adv.png\" alt=\"npm\" class=\"no-zoom\" style=\"width: 100%;border-radius: 2px;\">\n    <p style=\"text-align: center;margin: 0;color: #999;font-size: 12px;\">点击返回Di-Link EasyIoT平台</p>\n  </a>"
    }
  }
}