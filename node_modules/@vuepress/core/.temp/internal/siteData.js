/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "vuepress-theme-vdoing",
  "description": "一个基于VuePress的 知识管理&博客 主题",
  "base": "/",
  "headTags": [
    [
      "link",
      {
        "rel": "icon",
        "href": "/img/favicon.ico"
      }
    ],
    [
      "meta",
      {
        "name": "keywords",
        "content": "vuepress,theme,blog,vdoing"
      }
    ],
    [
      "meta",
      {
        "name": "theme-color",
        "content": "#11a8cd"
      }
    ]
  ],
  "pages": [
    {
      "title": "介绍",
      "frontmatter": {
        "title": "介绍",
        "date": "2020-05-11T13:54:03.000Z",
        "permalink": "/pages/a2f161",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/01.%E6%8C%87%E5%8D%97/02.%E4%BB%8B%E7%BB%8D.html",
      "relativePath": "01.指南/01.指南/02.介绍.md",
      "key": "v-7531a7e2",
      "path": "/pages/a2f161/",
      "headers": [
        {
          "level": 2,
          "title": "特性",
          "slug": "特性",
          "normalizedTitle": "特性",
          "charIndex": 267
        },
        {
          "level": 2,
          "title": "扩展功能",
          "slug": "扩展功能",
          "normalizedTitle": "扩展功能",
          "charIndex": 541
        },
        {
          "level": 2,
          "title": "安利",
          "slug": "安利",
          "normalizedTitle": "安利",
          "charIndex": 865
        }
      ],
      "headersStr": "特性 扩展功能 安利",
      "content": "Vdoing是VuePress v1.x的一个主题，是在默认主题基础上做的修改和扩展，很多配置仍然沿用官方配置。使用本主题可以很方便的搭建一个结构化的知识库或博客。\n\n这个主题的初衷是打造一个好用的、面向程序员的知识管理工具： 主题初衷与诞生。\n\n注意\n\n 1. Node请使用>=18.0.0版本。\n 2. 在使用本主题前，要求你至少会VuePress v1.x的基本使用和默认主题的基本配置，然后再查看本文档。\n 3. 本文档仅负责介绍Vdoing主题对默认主题的扩展部分，更多配置请移步 VuePress v1.x文档\n\n\n# 特性\n\n * 知识管理\n\n包含三种典型的知识管理形态：结构化、碎片化、体系化。轻松打造属于你自己的知识管理平台。\n\n * 结构化\n\n自动生成侧边栏、目录页、索引页、面包屑等，轻松构建一个结构化知识库。\n\n * 碎片化&个性化\n\n博客功能提供一种知识的碎片化形态，并提供个性化的博客配置。\n\n * 简洁高效\n\n以 Markdown 为中心的项目结构，内置自动化工具，以更少的配置完成更多的事。配合多维索引快速定位每个知识点。\n\n * 沉浸式阅读体验\n\n专为阅读设计的UI，配合多种颜色模式、可关闭的侧边栏和导航栏，带给你一种沉浸式阅读体验。\n\n\n# 扩展功能\n\n相较于默认主题，添加的功能内容主要有：\n\n * 添加方便管理学习笔记和技术文档的自动生成结构化侧边栏、自动生成front matter、目录页、扩展的搜索框插件、面包屑、快捷翻页按钮 等，让你快速定位到任何你想要找的内容。\n\n * 添加博客相关的 文章信息栏（作者与创建时间）、最近更新栏 、博主信息栏、页脚版权栏、分类功能+分类页、标签功能+标签页、归档页、评论插件等。\n\n * 方便好用的 Markdown 容器。\n\n * 首页文章列表、个性化配置和样式美化等。\n\n * 多种颜色模式供用户选择：跟随系统、浅色模式、深色模式、阅读模式\n\n * 提高搬砖效率的辅助工具： 批量操作front matter工具\n\n * ...\n\n\n# 安利\n\n * 拥有它你就同时拥有了一个专属你个人的在线知识库(云笔记)、博客、文档库、Demo库、一站式技术搜索工具，内容全部采用Markdown编写，简单高效，各种代码随便贴。\n\n * 你可以在.md文件中写html、css、js、甚至是vue组件代码，markdown天然的就支持vue组件，魔改页面什么的不要太简单。\n\n * 相当多的程序员喜欢深色模式，还有的视力也不太好(🤓)，我们有浅色、深色和阅读模式，更有跟随系统自动响应深浅色模式功能，想怎么换就怎么换。\n   \n   > 点击右下角换肤按钮\n\n * 当你习惯用vdoing主题后，在别处看文档发现是markdown编写的，但所在站点的目录、导航、主题等某个地方用起来不是很爽，你都可以把文档拷贝或把整个专栏下载(如支持下载的话)下来放到vdoing主题，vdoing的自动化工具助你生成一个结构清晰的、拥有目录、页面导航的，而且有多种颜色模式的文档站。让你更专注于内容的学习。\n   \n   > 参考我博客中的文档专栏\n\n * 如果你想和更多的人分享你的文章，那么这款seo友好的主题是一个很不错的选择，更有为了加快百度收录而定制的每天定时百度推送程序。\n   \n   > 参考我的博客收录情况。\n\n别犹豫了，赶快上手吧",
      "normalizedContent": "vdoing是vuepress v1.x的一个主题，是在默认主题基础上做的修改和扩展，很多配置仍然沿用官方配置。使用本主题可以很方便的搭建一个结构化的知识库或博客。\n\n这个主题的初衷是打造一个好用的、面向程序员的知识管理工具： 主题初衷与诞生。\n\n注意\n\n 1. node请使用>=18.0.0版本。\n 2. 在使用本主题前，要求你至少会vuepress v1.x的基本使用和默认主题的基本配置，然后再查看本文档。\n 3. 本文档仅负责介绍vdoing主题对默认主题的扩展部分，更多配置请移步 vuepress v1.x文档\n\n\n# 特性\n\n * 知识管理\n\n包含三种典型的知识管理形态：结构化、碎片化、体系化。轻松打造属于你自己的知识管理平台。\n\n * 结构化\n\n自动生成侧边栏、目录页、索引页、面包屑等，轻松构建一个结构化知识库。\n\n * 碎片化&个性化\n\n博客功能提供一种知识的碎片化形态，并提供个性化的博客配置。\n\n * 简洁高效\n\n以 markdown 为中心的项目结构，内置自动化工具，以更少的配置完成更多的事。配合多维索引快速定位每个知识点。\n\n * 沉浸式阅读体验\n\n专为阅读设计的ui，配合多种颜色模式、可关闭的侧边栏和导航栏，带给你一种沉浸式阅读体验。\n\n\n# 扩展功能\n\n相较于默认主题，添加的功能内容主要有：\n\n * 添加方便管理学习笔记和技术文档的自动生成结构化侧边栏、自动生成front matter、目录页、扩展的搜索框插件、面包屑、快捷翻页按钮 等，让你快速定位到任何你想要找的内容。\n\n * 添加博客相关的 文章信息栏（作者与创建时间）、最近更新栏 、博主信息栏、页脚版权栏、分类功能+分类页、标签功能+标签页、归档页、评论插件等。\n\n * 方便好用的 markdown 容器。\n\n * 首页文章列表、个性化配置和样式美化等。\n\n * 多种颜色模式供用户选择：跟随系统、浅色模式、深色模式、阅读模式\n\n * 提高搬砖效率的辅助工具： 批量操作front matter工具\n\n * ...\n\n\n# 安利\n\n * 拥有它你就同时拥有了一个专属你个人的在线知识库(云笔记)、博客、文档库、demo库、一站式技术搜索工具，内容全部采用markdown编写，简单高效，各种代码随便贴。\n\n * 你可以在.md文件中写html、css、js、甚至是vue组件代码，markdown天然的就支持vue组件，魔改页面什么的不要太简单。\n\n * 相当多的程序员喜欢深色模式，还有的视力也不太好(🤓)，我们有浅色、深色和阅读模式，更有跟随系统自动响应深浅色模式功能，想怎么换就怎么换。\n   \n   > 点击右下角换肤按钮\n\n * 当你习惯用vdoing主题后，在别处看文档发现是markdown编写的，但所在站点的目录、导航、主题等某个地方用起来不是很爽，你都可以把文档拷贝或把整个专栏下载(如支持下载的话)下来放到vdoing主题，vdoing的自动化工具助你生成一个结构清晰的、拥有目录、页面导航的，而且有多种颜色模式的文档站。让你更专注于内容的学习。\n   \n   > 参考我博客中的文档专栏\n\n * 如果你想和更多的人分享你的文章，那么这款seo友好的主题是一个很不错的选择，更有为了加快百度收录而定制的每天定时百度推送程序。\n   \n   > 参考我的博客收录情况。\n\n别犹豫了，赶快上手吧",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "主题初衷与诞生123",
      "frontmatter": {
        "title": "主题初衷与诞生123",
        "date": "2020-05-11T13:59:38.000Z",
        "permalink": "/pages/52d5c3",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/01.%E6%8C%87%E5%8D%97/01.%E4%B8%BB%E9%A2%98%E5%88%9D%E8%A1%B7%E4%B8%8E%E8%AF%9E%E7%94%9F.html",
      "relativePath": "01.指南/01.指南/01.主题初衷与诞生.md",
      "key": "v-13904c06",
      "path": "/pages/52d5c3/",
      "headers": [
        {
          "level": 2,
          "title": "Markdown",
          "slug": "markdown",
          "normalizedTitle": "markdown",
          "charIndex": 170
        },
        {
          "level": 2,
          "title": "知识管理",
          "slug": "知识管理",
          "normalizedTitle": "知识管理",
          "charIndex": 80
        },
        {
          "level": 2,
          "title": "VuePress",
          "slug": "vuepress",
          "normalizedTitle": "vuepress",
          "charIndex": 355
        },
        {
          "level": 2,
          "title": "知识管理&博客主题-Vdoing的诞生",
          "slug": "知识管理-博客主题-vdoing的诞生",
          "normalizedTitle": "知识管理&amp;博客主题-vdoing的诞生",
          "charIndex": null
        },
        {
          "level": 3,
          "title": "主题名称",
          "slug": "主题名称",
          "normalizedTitle": "主题名称",
          "charIndex": 1119
        }
      ],
      "headersStr": "Markdown 知识管理 VuePress 知识管理&博客主题-Vdoing的诞生 主题名称",
      "content": "提示\n\n这是一条提示\n\n注意\n\n这是一条注意\n\n警告\n\n这是一条警告\n\n笔记\n\n这是笔记容器，在 版本才支持哦~\n\n这个主题的初衷是打造一个好用的、面向程序员的知识管理工具。123\n\n对于程序员来说，繁杂的知识体系难免会有遗忘的地方。如果有一个方便好用的知识管理工具，可以帮助我们很好的管理知识，并能够快速地把遗忘的知识点找回来。\n\n\n# Markdown\n\n最初接触Markdown的时候，我就被它简洁的语法干净的文本结构吸引住，它的代码块和兼容html标签的能力更是让我爱上它，很高兴找到了一个高效记录学习笔记的工具。\n\n\n# 知识管理\n\n在一段学习的日子里，我尝试过用txt记录笔记、云笔记、Markdown笔记，并把Markdown文件上传到github进行管理，但总感觉还是不够方便...直到我发现了VuePress，它似乎可以管理我的学习笔记，并且把站点部署到github pages不就是一个在线的云笔记网站了吗\n\n\n# VuePress\n\nVuePress是一个 Vue 驱动的静态网站生成器，正是以Markdown为中心的项目结构，它简洁至上的理念正合我心。对于我这个对Vue还算有一些了解的前端，迫不及待的想去使用它来搭建一个我的云笔记网站。\n\n\n# 知识管理&博客主题-Vdoing的诞生\n\n我以前的一个领导和我们说过一个好的知识管理可以帮助我们提高开发质量和开发效率，下面这张图就是他想传达的，我表示赞同：\n\n什么是一个好用的知识管理工具呢？其实我也在不断的寻找和思考中。不过我觉得它至少要结构清晰、管理方便，在查找知识点的过程中可以快速的找到，正像上图所说的要在15秒内找到一个知识点，在添加内容的时候可以很方便的添加，并且保证结构清晰。\n\nVuePress的官方默认主题是专门为写文档而生的，和我心目中的知识库有一些差距，比如在满足结构清晰这点上，每添加一个内容就得手动的添加侧边栏数据，还有在满足15秒内找到一个知识点上还是不够好，因此我觉得需要做一些改造。\n\n在知识管理方面，有三种典型的知识形态：\n\n>  * 结构化：看重知识的条理性和实用性，有一定专业背景才能看懂\n>  * 碎片化：描述具体的知识点，通俗易懂\n>  * 体系化：对某一领域的完整解读，通常是某类知识的专业之作\n\n从这三种知识形态出发，我给主题添加了自动生成结构化侧边栏、目录页、面包屑等等。在满足了结构化之后，写博客应该算得上是一种碎片化的形态，我就给主题添加了分类、标签、归档等等。在满足更方便添加内容上，有了自动生成front matter、批量操作front matter等，更多关于主题的知识从开始使用它去探索吧~~\n\n\n# 主题名称\n\nVdoing，中文大概是维度的意思。起这个名的原因，首先是我看过一个视频《尤雨溪创立vue的心路历程》B站传送 youtube传送，里面有讲到vue起名的故事，一开始想起的名其实是Seed.js，但是在npm上被占用了，然后发现vue是一个挺酷的一个词，才决定用vue。发现大佬起名可以这么酷。再者，这个主题我想它可以多维度的快速寻找一个知识点，要么就叫维度吧，那英文名就用Vdoing好了...",
      "normalizedContent": "提示\n\n这是一条提示\n\n注意\n\n这是一条注意\n\n警告\n\n这是一条警告\n\n笔记\n\n这是笔记容器，在 版本才支持哦~\n\n这个主题的初衷是打造一个好用的、面向程序员的知识管理工具。123\n\n对于程序员来说，繁杂的知识体系难免会有遗忘的地方。如果有一个方便好用的知识管理工具，可以帮助我们很好的管理知识，并能够快速地把遗忘的知识点找回来。\n\n\n# markdown\n\n最初接触markdown的时候，我就被它简洁的语法干净的文本结构吸引住，它的代码块和兼容html标签的能力更是让我爱上它，很高兴找到了一个高效记录学习笔记的工具。\n\n\n# 知识管理\n\n在一段学习的日子里，我尝试过用txt记录笔记、云笔记、markdown笔记，并把markdown文件上传到github进行管理，但总感觉还是不够方便...直到我发现了vuepress，它似乎可以管理我的学习笔记，并且把站点部署到github pages不就是一个在线的云笔记网站了吗\n\n\n# vuepress\n\nvuepress是一个 vue 驱动的静态网站生成器，正是以markdown为中心的项目结构，它简洁至上的理念正合我心。对于我这个对vue还算有一些了解的前端，迫不及待的想去使用它来搭建一个我的云笔记网站。\n\n\n# 知识管理&博客主题-vdoing的诞生\n\n我以前的一个领导和我们说过一个好的知识管理可以帮助我们提高开发质量和开发效率，下面这张图就是他想传达的，我表示赞同：\n\n什么是一个好用的知识管理工具呢？其实我也在不断的寻找和思考中。不过我觉得它至少要结构清晰、管理方便，在查找知识点的过程中可以快速的找到，正像上图所说的要在15秒内找到一个知识点，在添加内容的时候可以很方便的添加，并且保证结构清晰。\n\nvuepress的官方默认主题是专门为写文档而生的，和我心目中的知识库有一些差距，比如在满足结构清晰这点上，每添加一个内容就得手动的添加侧边栏数据，还有在满足15秒内找到一个知识点上还是不够好，因此我觉得需要做一些改造。\n\n在知识管理方面，有三种典型的知识形态：\n\n>  * 结构化：看重知识的条理性和实用性，有一定专业背景才能看懂\n>  * 碎片化：描述具体的知识点，通俗易懂\n>  * 体系化：对某一领域的完整解读，通常是某类知识的专业之作\n\n从这三种知识形态出发，我给主题添加了自动生成结构化侧边栏、目录页、面包屑等等。在满足了结构化之后，写博客应该算得上是一种碎片化的形态，我就给主题添加了分类、标签、归档等等。在满足更方便添加内容上，有了自动生成front matter、批量操作front matter等，更多关于主题的知识从开始使用它去探索吧~~\n\n\n# 主题名称\n\nvdoing，中文大概是维度的意思。起这个名的原因，首先是我看过一个视频《尤雨溪创立vue的心路历程》b站传送 youtube传送，里面有讲到vue起名的故事，一开始想起的名其实是seed.js，但是在npm上被占用了，然后发现vue是一个挺酷的一个词，才决定用vue。发现大佬起名可以这么酷。再者，这个主题我想它可以多维度的快速寻找一个知识点，要么就叫维度吧，那英文名就用vdoing好了...",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "快速上手",
      "frontmatter": {
        "title": "快速上手",
        "date": "2020-05-11T13:54:40.000Z",
        "permalink": "/pages/793dcb",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/01.%E6%8C%87%E5%8D%97/03.%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",
      "relativePath": "01.指南/01.指南/03.快速上手.md",
      "key": "v-2b861f33",
      "path": "/pages/793dcb/",
      "headers": [
        {
          "level": 2,
          "title": "安装和启动",
          "slug": "安装和启动",
          "normalizedTitle": "安装和启动",
          "charIndex": 29
        },
        {
          "level": 2,
          "title": "使用Vdoing主题",
          "slug": "使用vdoing主题",
          "normalizedTitle": "使用vdoing主题",
          "charIndex": 929
        },
        {
          "level": 2,
          "title": "版本升级",
          "slug": "版本升级",
          "normalizedTitle": "版本升级",
          "charIndex": 1212
        }
      ],
      "headersStr": "安装和启动 使用Vdoing主题 版本升级",
      "content": "注意⚠️\n\nNode请使用>=18.0.0版本。\n\n\n# 安装和启动\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n\n# enter the project directory\ncd vuepress-theme-vdoing\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing-doc.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-doc\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/xugaoyi/vuepress-theme-vdoing-doc\n\n# clone the project\ngit clone https://github.com/u2sb/vuepress-theme-vdoing-template.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-template\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/u2sb/vuepress-theme-vdoing-template\n\n\n# 使用Vdoing主题\n\n 1. 安装最新的Vdoing主题包：\n\nnpm install vuepress-theme-vdoing -D\n\n\n 2. 在.vuepress/config.js中配置使用主题：\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing'\n}\n\n\n提示\n\n 1. 不建议在原默认vuepress项目上单独安装使用本主题包，而是clone我的整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n主题的版本会不定期更新，你只需更新npm主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n提示\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n 2. 在.vuepress/config.js中，设置theme: 'vdoing'才是使用npm主题依赖包:\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing', // npm主题依赖包\n  // theme: require.resolve('../../vdoing'), // 使用本地主题包\n}\n",
      "normalizedContent": "注意⚠️\n\nnode请使用>=18.0.0版本。\n\n\n# 安装和启动\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n\n# enter the project directory\ncd vuepress-theme-vdoing\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n# clone the project\ngit clone https://github.com/xugaoyi/vuepress-theme-vdoing-doc.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-doc\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/xugaoyi/vuepress-theme-vdoing-doc\n\n# clone the project\ngit clone https://github.com/u2sb/vuepress-theme-vdoing-template.git\n\n# enter the project directory\ncd vuepress-theme-vdoing-template\n\n# install dependency 注意：如安装不成功请关闭淘宝源。\nnpm install # or yarn install\n\n# develop\nnpm run dev # or yarn dev\n\n\n> 仓库地址： https://github.com/u2sb/vuepress-theme-vdoing-template\n\n\n# 使用vdoing主题\n\n 1. 安装最新的vdoing主题包：\n\nnpm install vuepress-theme-vdoing -d\n\n\n 2. 在.vuepress/config.js中配置使用主题：\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing'\n}\n\n\n提示\n\n 1. 不建议在原默认vuepress项目上单独安装使用本主题包，而是clone我的整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n主题的版本会不定期更新，你只需更新npm主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n提示\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n 2. 在.vuepress/config.js中，设置theme: 'vdoing'才是使用npm主题依赖包:\n\n// config.js\nmodule.exports = {\n  theme: 'vdoing', // npm主题依赖包\n  // theme: require.resolve('../../vdoing'), // 使用本地主题包\n}\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "目录结构",
      "frontmatter": {
        "title": "目录结构",
        "date": "2020-05-11T13:54:56.000Z",
        "permalink": "/pages/2f674a",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/01.%E6%8C%87%E5%8D%97/04.%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.html",
      "relativePath": "01.指南/01.指南/04.目录结构.md",
      "key": "v-1a859c78",
      "path": "/pages/2f674a/",
      "headersStr": null,
      "content": ".\n├── .github   (可选，GitHub 相关文件)\n│   ├── workflows\n│   │   ├── baiduPush.yml (可选，百度定时自动推送)\n│   │   └── ci.yml (可选，自动部署)\n├── docs (必须，不要修改文件夹名称)\n│   ├── .vuepress （同官方，查看：https://vuepress.vuejs.org/zh/guide/directory-structure.html#目录结构）\n│   ├── @pages (可选，自动生成的文件夹，存放分类页、标签页、归档页)\n│   ├── _posts (可选，专门存放碎片化博客文章的文件夹)\n│   ├── <结构化目录>\n│   └── index.md (首页)\n├── vdoing (可选，本地的vdoing主题)\n├── utils  (可选，vdoing主题使用的node工具)\n│   ├── modules\n│   ├── config.yml (可选，批量操作front matter配置)\n│   ├── editFrontmatter.js (可选，批量操作front matter工具)\n├── baiduPush.sh (可选，百度推送命令脚本)\n├── deploy.sh (可选，部署命令脚本)\n│\n└── package.json\n\n\n\n * docs 文件夹名称请不要修改\n\n * docs/.vuepress 用于存放全局的配置、样式、静态资源等，同官方，查看 详情\n\n * docs/@pages 此文件夹是自动生成的，存放分类页、标签页、归档页对应的.md文件，一般不需要改动\n\n * docs/_posts 专门用于存放碎片化博客文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n * docs/<结构化目录> 请查看《构建结构化站点的核心配置和约定》。\n\n * docs/index.md 首页\n\n * vdoing 存放在本地的vdoing主题文件，如果你想深度的修改主题，首先要在docs/.vuepress/config.js中配置使用的主题指向这个文件。\n\n  module.exports = {\n    // theme: 'vdoing', // npm主题依赖包\n    theme: require.resolve('../../vdoing'), // 使用本地主题包\n  }\n\n\n  import { resolve } from 'path'\n  import { defineConfig4CustomTheme } from 'vuepress/config'\n  import { VdoingThemeConfig } from 'vuepress-theme-vdoing/types'\n  export default defineConfig4CustomTheme<VdoingThemeConfig>({\n    // theme: 'vdoing', // 使用npm主题包\n    theme: resolve(__dirname, '../../vdoing'), // 使用本地主题包\n  })\n\n\n注意：主题的后续维护升级只对npm主题包负责，就是说你使用本地主题就等于放弃了后续的升级服务。因此，建议能在docs/.vuepress/内配置和修改的，就尽量不要改动主题内部代码。\n\n----------------------------------------\n\n提示\n\n为了方便您更快的学习和使用本主题，我在代码当中添加了比较多的注释说明。",
      "normalizedContent": ".\n├── .github   (可选，github 相关文件)\n│   ├── workflows\n│   │   ├── baidupush.yml (可选，百度定时自动推送)\n│   │   └── ci.yml (可选，自动部署)\n├── docs (必须，不要修改文件夹名称)\n│   ├── .vuepress （同官方，查看：https://vuepress.vuejs.org/zh/guide/directory-structure.html#目录结构）\n│   ├── @pages (可选，自动生成的文件夹，存放分类页、标签页、归档页)\n│   ├── _posts (可选，专门存放碎片化博客文章的文件夹)\n│   ├── <结构化目录>\n│   └── index.md (首页)\n├── vdoing (可选，本地的vdoing主题)\n├── utils  (可选，vdoing主题使用的node工具)\n│   ├── modules\n│   ├── config.yml (可选，批量操作front matter配置)\n│   ├── editfrontmatter.js (可选，批量操作front matter工具)\n├── baidupush.sh (可选，百度推送命令脚本)\n├── deploy.sh (可选，部署命令脚本)\n│\n└── package.json\n\n\n\n * docs 文件夹名称请不要修改\n\n * docs/.vuepress 用于存放全局的配置、样式、静态资源等，同官方，查看 详情\n\n * docs/@pages 此文件夹是自动生成的，存放分类页、标签页、归档页对应的.md文件，一般不需要改动\n\n * docs/_posts 专门用于存放碎片化博客文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n * docs/<结构化目录> 请查看《构建结构化站点的核心配置和约定》。\n\n * docs/index.md 首页\n\n * vdoing 存放在本地的vdoing主题文件，如果你想深度的修改主题，首先要在docs/.vuepress/config.js中配置使用的主题指向这个文件。\n\n  module.exports = {\n    // theme: 'vdoing', // npm主题依赖包\n    theme: require.resolve('../../vdoing'), // 使用本地主题包\n  }\n\n\n  import { resolve } from 'path'\n  import { defineconfig4customtheme } from 'vuepress/config'\n  import { vdoingthemeconfig } from 'vuepress-theme-vdoing/types'\n  export default defineconfig4customtheme<vdoingthemeconfig>({\n    // theme: 'vdoing', // 使用npm主题包\n    theme: resolve(__dirname, '../../vdoing'), // 使用本地主题包\n  })\n\n\n注意：主题的后续维护升级只对npm主题包负责，就是说你使用本地主题就等于放弃了后续的升级服务。因此，建议能在docs/.vuepress/内配置和修改的，就尽量不要改动主题内部代码。\n\n----------------------------------------\n\n提示\n\n为了方便您更快的学习和使用本主题，我在代码当中添加了比较多的注释说明。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "自动生成front matter",
      "frontmatter": {
        "title": "自动生成front matter",
        "date": "2020-05-12T11:46:37.000Z",
        "permalink": "/pages/088c16",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/01.%E6%8C%87%E5%8D%97/06.%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90front%20matter.html",
      "relativePath": "01.指南/01.指南/06.自动生成front matter.md",
      "key": "v-053d2a30",
      "path": "/pages/088c16/",
      "headers": [
        {
          "level": 3,
          "title": "生成示例",
          "slug": "生成示例",
          "normalizedTitle": "生成示例",
          "charIndex": 203
        },
        {
          "level": 3,
          "title": "title",
          "slug": "title",
          "normalizedTitle": "title",
          "charIndex": 28
        },
        {
          "level": 3,
          "title": "date",
          "slug": "date",
          "normalizedTitle": "date",
          "charIndex": 38
        },
        {
          "level": 3,
          "title": "permalink",
          "slug": "permalink",
          "normalizedTitle": "permalink",
          "charIndex": 49
        },
        {
          "level": 3,
          "title": "categories",
          "slug": "categories",
          "normalizedTitle": "categories",
          "charIndex": 63
        },
        {
          "level": 3,
          "title": "tags",
          "slug": "tags",
          "normalizedTitle": "tags",
          "charIndex": 78
        },
        {
          "level": 3,
          "title": "扩展自动生成front matter",
          "slug": "扩展自动生成front-matter",
          "normalizedTitle": "扩展自动生成front matter",
          "charIndex": 1126
        },
        {
          "level": 3,
          "title": "碎片化文章‘分类’的自动生成规则",
          "slug": "碎片化文章-分类-的自动生成规则",
          "normalizedTitle": "碎片化文章‘分类’的自动生成规则",
          "charIndex": 1232
        }
      ],
      "headersStr": "生成示例 title date permalink categories tags 扩展自动生成front matter 碎片化文章‘分类’的自动生成规则",
      "content": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendFrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《JavaScript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - JavaScript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：YYYY-MM-DD HH:MM:SS\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> Q：自动生成front matter为什么要包含永久链接？\n> \n> A：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendFrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendFrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeConfig.categoryText 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categoryText的默认值是‘随笔’，可在themeConfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "normalizedContent": "当你没有给.md文件的front matter指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)、主题配置中extendfrontmatter配置的字段时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n\n# 生成示例\n\n---\ntitle: 《javascript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - javascript\ntags:\n  -\n---\n\n\n\n# title\n\n * 类型: string\n\n * 默认：.md文件的名称\n\n当前页面的标题\n\n\n# date\n\n * 类型: string\n * 格式：yyyy-mm-dd hh:mm:ss\n * 默认：.md文件在系统中创建的时间\n\n当前页面的创建时间，如需手动添加或修改该字段时请按照格式添加或修改\n\n\n# permalink\n\n * 类型: string\n * 默认：/pages/+ 6位字母加数字的随机码\n\n当前页面的永久链接\n\n> q：自动生成front matter为什么要包含永久链接？\n> \n> a：使用永久链接是出于以下几点考虑:\n> \n>  * 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n>  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n>  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# categories\n\n * 类型: array\n * 默认：\n   * .md所在的文件夹名称。\n   * 如果.md文件所在的目录是三级目录，则会有两个分类值，分别是二级目录和一级目录的文件夹名称。如果在四级目录，则再多一个三级目录的文件夹名称分类。（级别说明）\n   * 如果.md文件所在的目录是_posts，则默认值是随笔，这个默认值可以在config.js中修改，参考：config.js配置\n * 如果在 config.js配置 设置了category: false 将不会自动生成该字段\n\n当前页面的分类\n\n\n# tags\n\n * 类型: array\n * 默认：空数组\n * 如果在 config.js配置 设置了tag: false 将不会自动生成该字段\n\n当前页面的标签，默认值是空数组，自动生成该字段只是为了方便后面添加标签值。\n\n\n# 扩展自动生成front matter\n\n当在主题配置中配置了extendfrontmatter时，将在自动生成front matter时添加相应配置的字段和数据。详见：extendfrontmatter\n\n\n# 碎片化文章‘分类’的自动生成规则\n\n> 碎片化文章即放在_posts文件夹的文章，里面的.md文件不需要遵循命名约定，不会生成结构化侧边栏和目录页。\n\n当文章在_posts根目录时，分类获取 themeconfig.categorytext 的值，如_posts/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 随笔\n\n\n> categorytext的默认值是‘随笔’，可在themeconfig修改，详见categorytext。\n\n当文章在非_posts根目录时，获取父文件夹的名称作为分类，如\n\n_posts/想法/奇思妙想/foo.md ，则foo.md文件的分类会生成为：\n\ncategories:\n  - 想法\n  - 奇思妙想\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "使目录栏支持h2~h6标题",
      "frontmatter": {
        "title": "使目录栏支持h2~h6标题",
        "date": "2022-03-18T15:02:52.000Z",
        "permalink": "/pages/8dfab5/",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/02.%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/03.%E4%BD%BF%E7%9B%AE%E5%BD%95%E6%A0%8F%E6%94%AF%E6%8C%81h2~h6%E6%A0%87%E9%A2%98.html",
      "relativePath": "01.指南/02.相关文章/03.使目录栏支持h2~h6标题.md",
      "key": "v-7653713c",
      "path": "/pages/8dfab5/",
      "headers": [
        {
          "level": 2,
          "title": "markdown.extractHeaders",
          "slug": "markdown-extractheaders",
          "normalizedTitle": "markdown.extractheaders",
          "charIndex": 70
        }
      ],
      "headersStr": "markdown.extractHeaders",
      "content": "在.vuepress/config.js添加如下配置即可使 VuePress 提取相应标题级别的数据，并应用到主题的右侧目录栏中。\n\n\n# markdown.extractHeaders\n\n * 类型: Array\n * 默认: ['h2', 'h3']\n\nMarkdown 文件的 headers (标题 & 小标题) 会在准备阶段被提取出来，并存储在 this.$page.headers 中。默认情况下，VuePress 会提取 h2 和 h3 标题。你可以通过这个选项来修改提取出的标题级别。\n\nmodule.exports = {\n  markdown: {\n    extractHeaders: [ 'h2', 'h3', 'h4', 'h5', 'h6' ]\n  }\n}\n\n\n注：此配置来自 VuePress官方文档",
      "normalizedContent": "在.vuepress/config.js添加如下配置即可使 vuepress 提取相应标题级别的数据，并应用到主题的右侧目录栏中。\n\n\n# markdown.extractheaders\n\n * 类型: array\n * 默认: ['h2', 'h3']\n\nmarkdown 文件的 headers (标题 & 小标题) 会在准备阶段被提取出来，并存储在 this.$page.headers 中。默认情况下，vuepress 会提取 h2 和 h3 标题。你可以通过这个选项来修改提取出的标题级别。\n\nmodule.exports = {\n  markdown: {\n    extractheaders: [ 'h2', 'h3', 'h4', 'h5', 'h6' ]\n  }\n}\n\n\n注：此配置来自 vuepress官方文档",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "Markdown 中使用组件",
      "frontmatter": {
        "title": "Markdown 中使用组件",
        "date": "2020-11-10T18:56:22.000Z",
        "permalink": "/pages/197691/",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/01.%E6%8C%87%E5%8D%97/08.Markdown%20%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%BB%84%E4%BB%B6.html",
      "relativePath": "01.指南/01.指南/08.Markdown 中使用组件.md",
      "key": "v-227e1b8a",
      "path": "/pages/197691/",
      "headers": [
        {
          "level": 2,
          "title": "标记",
          "slug": "标记",
          "normalizedTitle": "标记",
          "charIndex": 43
        },
        {
          "level": 4,
          "title": "《沁园春·雪》",
          "slug": "《沁园春·雪》",
          "normalizedTitle": "《沁园春·雪》",
          "charIndex": 220
        },
        {
          "level": 2,
          "title": "代码块选项卡",
          "slug": "代码块选项卡",
          "normalizedTitle": "代码块选项卡",
          "charIndex": 406
        }
      ],
      "headersStr": "标记 《沁园春·雪》 代码块选项卡",
      "content": "主题的内置组件可以直接在Markdown文件中以类似html标签的方式使用。\n\n\n# 标记\n\n * Props:\n   \n   * text- string\n   * type - string, 可选值： tip | warning | error，默认： tip\n   * vertical - string, 可选值： top | middle，默认： top\n\n * Usage:\n\n你可以在标题或其他内容中使用标记：\n\n#### 《沁园春·雪》 <Badge text=\"摘\"/>\n北国风光<Badge text=\"注释\" type=\"warning\"/>，千里冰封，万里雪飘。\n\n> <Badge text=\"译文\" type=\"error\" vertical=\"middle\"/>: 北方的风光。\n\n\n效果：\n\n# 《沁园春·雪》\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 代码块选项卡\n\n在<code-group>中嵌套<code-block>来配合使用。在<code-block>标签添加title来指定tab标题，active指定当前tab：\n\n<code-group>\n  <code-block title=\"YARN\" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -D\n  ```\n  </code-block>\n\n  <code-block title=\"NPM\">\n  ```bash\n  npm install vuepress-theme-vdoing -D\n  ```\n  </code-block>\n</code-group>\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -D\n\n\nnpm install vuepress-theme-vdoing -D\n\n\n注意\n\n * 请在<code-group>标签与markdown内容之间使用空行隔开，否则可能会解析不出来。\n * 该组件只适用于放置代码块，放其他内容在体验上并不友好。如您确实需要放置其他内容的选项卡，推荐使用vuepress-plugin-tabs插件。",
      "normalizedContent": "主题的内置组件可以直接在markdown文件中以类似html标签的方式使用。\n\n\n# 标记\n\n * props:\n   \n   * text- string\n   * type - string, 可选值： tip | warning | error，默认： tip\n   * vertical - string, 可选值： top | middle，默认： top\n\n * usage:\n\n你可以在标题或其他内容中使用标记：\n\n#### 《沁园春·雪》 <badge text=\"摘\"/>\n北国风光<badge text=\"注释\" type=\"warning\"/>，千里冰封，万里雪飘。\n\n> <badge text=\"译文\" type=\"error\" vertical=\"middle\"/>: 北方的风光。\n\n\n效果：\n\n# 《沁园春·雪》\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 代码块选项卡\n\n在<code-group>中嵌套<code-block>来配合使用。在<code-block>标签添加title来指定tab标题，active指定当前tab：\n\n<code-group>\n  <code-block title=\"yarn\" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -d\n  ```\n  </code-block>\n\n  <code-block title=\"npm\">\n  ```bash\n  npm install vuepress-theme-vdoing -d\n  ```\n  </code-block>\n</code-group>\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -d\n\n\nnpm install vuepress-theme-vdoing -d\n\n\n注意\n\n * 请在<code-group>标签与markdown内容之间使用空行隔开，否则可能会解析不出来。\n * 该组件只适用于放置代码块，放其他内容在体验上并不友好。如您确实需要放置其他内容的选项卡，推荐使用vuepress-plugin-tabs插件。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "批量操作front matter工具",
      "frontmatter": {
        "title": "批量操作front matter工具",
        "date": "2020-05-13T11:52:45.000Z",
        "permalink": "/pages/2b8e22",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/02.%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/07.%E6%89%B9%E9%87%8F%E6%93%8D%E4%BD%9Cfront%20matter%E5%B7%A5%E5%85%B7.html",
      "relativePath": "01.指南/02.相关文章/07.批量操作front matter工具.md",
      "key": "v-613ce3ec",
      "path": "/pages/2b8e22/",
      "headersStr": null,
      "content": "当你想为某个文件夹下的所有.md文件添加、修改、删除某些front matter字段时，这个工具可以快速的为你批量操作。\n\n首先，你需要在package.json的scripts中写入脚本：\n\n// package.json\n{\n  \"scripts\": {\n       \"editFm\": \"node utils/editFrontmatter.js\",\n   }\n}\n\n\n在utils/config.yml配置要批量操作的文件夹和要编辑的字段，示例：\n\n# utils/config.yml\n#批量添加和修改、删除front matter配置文件\n\n# 需要批量处理的路径，docs文件夹内的文件夹 (数组。映射路径：docs/arr[1]/arr[2] ... )\npath:\n  - docs # 第一个成员必须是docs\n  - 《JS教程》专辑\n  - 第一章节\n\n# 要删除的字段 (数组)\ndelete:  \n  - article\n\n # 要添加、修改front matter的数据 （front matter中没有的数据则添加，已有的数据则覆盖）\ndata:\n  author: 齐天大圣\n  sidebar: false\n\n\n比如你要操作的文件夹路径是docs/《JS教程》专辑/第一章节，你需要这样配置路径：\n\npath:\n  - docs # 第一个成员必须是docs\n  - 《JS教程》专辑\n  - 第一章节\n\n\npath数组的第一个成员必须是docs，如果你想操作docs底下除了首页之外所有的.md文件，只需保留第一个成员docs即可。\n\n你想删除article字段：\n\ndelete:  \n  - article\n\n\n你想为这个文件夹下的所有.md文件添加作者author和隐藏侧边栏sidebar：\n\ndata:\n  author: 齐天大圣\n  sidebar: false\n\n\n最后，执行npm run editFm命令，为了防止误操作，会有一个询问过程：\n\nnpm run editFm\n? 批量操作frontmatter有修改数据的风险，确定要继续吗？ (Y/n) \n...\n",
      "normalizedContent": "当你想为某个文件夹下的所有.md文件添加、修改、删除某些front matter字段时，这个工具可以快速的为你批量操作。\n\n首先，你需要在package.json的scripts中写入脚本：\n\n// package.json\n{\n  \"scripts\": {\n       \"editfm\": \"node utils/editfrontmatter.js\",\n   }\n}\n\n\n在utils/config.yml配置要批量操作的文件夹和要编辑的字段，示例：\n\n# utils/config.yml\n#批量添加和修改、删除front matter配置文件\n\n# 需要批量处理的路径，docs文件夹内的文件夹 (数组。映射路径：docs/arr[1]/arr[2] ... )\npath:\n  - docs # 第一个成员必须是docs\n  - 《js教程》专辑\n  - 第一章节\n\n# 要删除的字段 (数组)\ndelete:  \n  - article\n\n # 要添加、修改front matter的数据 （front matter中没有的数据则添加，已有的数据则覆盖）\ndata:\n  author: 齐天大圣\n  sidebar: false\n\n\n比如你要操作的文件夹路径是docs/《js教程》专辑/第一章节，你需要这样配置路径：\n\npath:\n  - docs # 第一个成员必须是docs\n  - 《js教程》专辑\n  - 第一章节\n\n\npath数组的第一个成员必须是docs，如果你想操作docs底下除了首页之外所有的.md文件，只需保留第一个成员docs即可。\n\n你想删除article字段：\n\ndelete:  \n  - article\n\n\n你想为这个文件夹下的所有.md文件添加作者author和隐藏侧边栏sidebar：\n\ndata:\n  author: 齐天大圣\n  sidebar: false\n\n\n最后，执行npm run editfm命令，为了防止误操作，会有一个询问过程：\n\nnpm run editfm\n? 批量操作frontmatter有修改数据的风险，确定要继续吗？ (y/n) \n...\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "构建结构化站点的核心配置和约定",
      "frontmatter": {
        "title": "构建结构化站点的核心配置和约定",
        "date": "2020-05-12T11:01:21.000Z",
        "permalink": "/pages/33d574",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/01.%E6%8C%87%E5%8D%97/05.%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E5%92%8C%E7%BA%A6%E5%AE%9A.html",
      "relativePath": "01.指南/01.指南/05.核心配置和约定.md",
      "key": "v-cb78f0d6",
      "path": "/pages/33d574/",
      "headers": [
        {
          "level": 3,
          "title": "命名约定",
          "slug": "命名约定",
          "normalizedTitle": "命名约定",
          "charIndex": 442
        },
        {
          "level": 3,
          "title": "级别说明",
          "slug": "级别说明",
          "normalizedTitle": "级别说明",
          "charIndex": 694
        },
        {
          "level": 3,
          "title": "目录结构例子",
          "slug": "目录结构例子",
          "normalizedTitle": "目录结构例子",
          "charIndex": 1016
        },
        {
          "level": 3,
          "title": "如何知道侧边栏数据有没有正确生成？",
          "slug": "如何知道侧边栏数据有没有正确生成",
          "normalizedTitle": "如何知道侧边栏数据有没有正确生成？",
          "charIndex": 1850
        }
      ],
      "headersStr": "命名约定 级别说明 目录结构例子 如何知道侧边栏数据有没有正确生成？",
      "content": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeConfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: Boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 README.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 README.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《JavaScript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.JavaScript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "normalizedContent": "本主题遵循“约定优于配置”原则，如果你想构建一个结构化的站点，需要遵循下面这些约定，约定可以为你省去很多配置，轻松拥有一个结构清晰的站点。\n\n你需要在config.js中有如下配置：\n\n// config.js\nmodule.exports = {\n  themeconfig: {\n     sidebar: 'structuring' //  'structuring' | { mode: 'structuring', collapsable: boolean} | 'auto' | 自定义\n  }\n}\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 readme.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称。\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n提示\n\n序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别说明\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多只能到四级目录。\n\n * 一级目录\n   1. .vuepress、@pages、_posts、index.md 或 readme.md 这些文件(文件夹)不参与数据生成。\n   2. 序号非必须。（如一些专栏，可以不用序号)\n * 二级目录\n   1. 该级别下可以同时放文件夹和.md文件，但是两者序号要连贯（参考下面的例子中的其他）。\n   2. 必须有序号\n * 三级目录\n   * (同上)\n * 四级目录\n    1. 该级别下只能放.md文件。\n    2. 必须有序号\n\n所有级别内至少有一个文件或文件夹。\n\n\n# 目录结构例子\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《javascript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.javascript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n\n# 如何知道侧边栏数据有没有正确生成？\n\n在运行开发服务时(npm run dev)，在命令行查看打印记录，如果正确生成会有这样的绿色提示记录：\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\n\n如果有未按约定的文件，会有黄色警告记录，如：\n\nwarning:  该文件'xxx'序号出错，请填写正确的序号。\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "关于博客搭建与管理",
      "frontmatter": {
        "title": "关于博客搭建与管理",
        "date": "2020-05-13T12:12:33.000Z",
        "permalink": "/pages/26997d",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/02.%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/10.%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86.html",
      "relativePath": "01.指南/02.相关文章/10.关于博客搭建与管理.md",
      "key": "v-60971d12",
      "path": "/pages/26997d/",
      "headersStr": null,
      "content": "这里是我在搭建和管理博客过程中写的一些文章和小技巧。\n\n 1. 评论模块的搭建\n    \n    使用Gitalk实现静态博客无后台评论系统\n\n 2. 自定义域名及解析，详情\n\n 3. SEO相关\n    \n    // config.js\n    module.exports = {\n        description: '填写网站描述', // 以 <meta> 标签渲染到页面html中\n        head: [ // 注入到页面<head> 中的标签,[tagName, { attrName: attrValue }]\n            ['meta', { name: 'keywords', content: '填写关键字'}]\n        ]\n    }\n    \n\n 4. 图床\n    \n    GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床\n\n 5. 结合GitHub Actions开发的每天定时百度推送，加快收录\n    \n    GitHub Actions 定时运行代码：每天定时百度链接推送",
      "normalizedContent": "这里是我在搭建和管理博客过程中写的一些文章和小技巧。\n\n 1. 评论模块的搭建\n    \n    使用gitalk实现静态博客无后台评论系统\n\n 2. 自定义域名及解析，详情\n\n 3. seo相关\n    \n    // config.js\n    module.exports = {\n        description: '填写网站描述', // 以 <meta> 标签渲染到页面html中\n        head: [ // 注入到页面<head> 中的标签,[tagname, { attrname: attrvalue }]\n            ['meta', { name: 'keywords', content: '填写关键字'}]\n        ]\n    }\n    \n\n 4. 图床\n    \n    github + jsdelivr + tinypng+ picgo 打造稳定快速、高效免费图床\n\n 5. 结合github actions开发的每天定时百度推送，加快收录\n    \n    github actions 定时运行代码：每天定时百度链接推送",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "关于写文章和一级标题",
      "frontmatter": {
        "title": "关于写文章和一级标题",
        "date": "2020-05-13T12:07:32.000Z",
        "permalink": "/pages/9ae0bd",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/02.%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/09.%E5%85%B3%E4%BA%8E%E5%86%99%E6%96%87%E7%AB%A0%E5%92%8C%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98.html",
      "relativePath": "01.指南/02.相关文章/09.关于写文章和一级标题.md",
      "key": "v-718fb00e",
      "path": "/pages/9ae0bd/",
      "excerpt": "<p>写文章时，大概的流程是这样的：</p>\n<p>1.首先是创建<code>.md</code>文件，如果在结构化目录下则<strong>需要</strong>添加相应的序号，在碎片化博文目录<code>_posts</code>下<strong>不需要</strong>添加序号，文件名填写文章的标题。</p>\n<p>2.如果你想手动指定文章的分类、标签，则需要在头部front matter填写相应的字段。一般情况下不需要再填写其他字段。不想手动指定分类和标签也可以省略这一步。</p>\n<!--beforebegin--><div class=\"language-yaml extra-class\"><!--afterbegin--><pre v-pre class=\"language-yaml\"><code><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> \n  <span class=\"token punctuation\">-</span> 分类1\n<span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> \n  <span class=\"token punctuation\">-</span> 标签1\n  <span class=\"token punctuation\">-</span> 标签2\n<span class=\"token punctuation\">---</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>3.<strong>关于一级标题</strong>，即markdown中的一级标题(<code># 标题</code>)，你可以写也可以不写，在页面中实际显示的文章标题是取自front matter中的<code>title</code>，然后把<code>.md</code>中的一级标题隐藏了。</p>\n<blockquote>\n<p>这样做即可以保留本地文件的一级标题，也可以兼容线上页面的标题。\n同时，对于在新建<code>.md</code>文件时已经输入了一次标题在文件名，不想在文档中重复输入一次标题的，也是可以实现的。</p>\n</blockquote>\n<p>4.<strong>关于文章摘要</strong>，你想在首先文章列表中显示摘要时可以在合适的位置添加一个`</p>\n",
      "headersStr": null,
      "content": "写文章时，大概的流程是这样的：\n\n1.首先是创建.md文件，如果在结构化目录下则需要添加相应的序号，在碎片化博文目录_posts下不需要添加序号，文件名填写文章的标题。\n\n2.如果你想手动指定文章的分类、标签，则需要在头部front matter填写相应的字段。一般情况下不需要再填写其他字段。不想手动指定分类和标签也可以省略这一步。\n\n---\ncategories: \n  - 分类1\ntags: \n  - 标签1\n  - 标签2\n---\n\n\n3.关于一级标题，即markdown中的一级标题(# 标题)，你可以写也可以不写，在页面中实际显示的文章标题是取自front matter中的title，然后把.md中的一级标题隐藏了。\n\n> 这样做即可以保留本地文件的一级标题，也可以兼容线上页面的标题。 同时，对于在新建.md文件时已经输入了一次标题在文件名，不想在文档中重复输入一次标题的，也是可以实现的。\n\n4.关于文章摘要，你想在首先文章列表中显示摘要时可以在合适的位置添加一个<!-- more -->注释，参考：添加摘要\n\n5.最后，就可以正式开始写作啦。",
      "normalizedContent": "写文章时，大概的流程是这样的：\n\n1.首先是创建.md文件，如果在结构化目录下则需要添加相应的序号，在碎片化博文目录_posts下不需要添加序号，文件名填写文章的标题。\n\n2.如果你想手动指定文章的分类、标签，则需要在头部front matter填写相应的字段。一般情况下不需要再填写其他字段。不想手动指定分类和标签也可以省略这一步。\n\n---\ncategories: \n  - 分类1\ntags: \n  - 标签1\n  - 标签2\n---\n\n\n3.关于一级标题，即markdown中的一级标题(# 标题)，你可以写也可以不写，在页面中实际显示的文章标题是取自front matter中的title，然后把.md中的一级标题隐藏了。\n\n> 这样做即可以保留本地文件的一级标题，也可以兼容线上页面的标题。 同时，对于在新建.md文件时已经输入了一次标题在文件名，不想在文档中重复输入一次标题的，也是可以实现的。\n\n4.关于文章摘要，你想在首先文章列表中显示摘要时可以在合适的位置添加一个<!-- more -->注释，参考：添加摘要\n\n5.最后，就可以正式开始写作啦。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "在线编辑和新增文章的方法",
      "frontmatter": {
        "title": "在线编辑和新增文章的方法",
        "date": "2020-05-19T11:17:58.000Z",
        "permalink": "/pages/c5a54d",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/02.%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/11.%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%92%8C%E6%96%B0%E5%A2%9E%E6%96%87%E7%AB%A0%E7%9A%84%E6%96%B9%E6%B3%95.html",
      "relativePath": "01.指南/02.相关文章/11.在线编辑和新增文章的方法.md",
      "key": "v-00e021ed",
      "path": "/pages/c5a54d/",
      "headers": [
        {
          "level": 3,
          "title": "在线编辑原有的文章",
          "slug": "在线编辑原有的文章",
          "normalizedTitle": "在线编辑原有的文章",
          "charIndex": 61
        },
        {
          "level": 3,
          "title": "在线新增文章",
          "slug": "在线新增文章",
          "normalizedTitle": "在线新增文章",
          "charIndex": 422
        }
      ],
      "headersStr": "在线编辑原有的文章 在线新增文章",
      "content": "说明\n\n以下方法实现的前提是把博客源码上传到github仓库，并配置好 GitHub Actions 自动部署。\n\n\n# 在线编辑原有的文章\n\n首先，在config.js启用页面的编辑按钮，并配置好github仓库和.md文件所在根目录等，详见 官方文档。\n\n示例：\n\n// config.js\nmodule.exports = {\n  themeConfig: {\n    repo: 'xugaoyi/vuepress-theme-vdoing', // Github仓库地址\n    docsDir: 'docs', // .md文件放在了docs目录下\n    editLinks: true, // 启用编辑链接\n    editLinkText: '编辑',\n  }\n}\n\n\n配置好之后，每个文章页面底下都会有一个编辑按钮，点击即可跳到github在线编辑，编辑完成后提交就会自动触发GitHub Actions自动部署。\n\n\n# 在线新增文章\n\n在github博客源码仓库相应的文章目录下，新建.md文件，编辑好文章并提交后会触发GitHub Actions自动部署。\n\n> 提示：当使用过在线编辑或新增后，下次在本地编辑之前先拉取代码。",
      "normalizedContent": "说明\n\n以下方法实现的前提是把博客源码上传到github仓库，并配置好 github actions 自动部署。\n\n\n# 在线编辑原有的文章\n\n首先，在config.js启用页面的编辑按钮，并配置好github仓库和.md文件所在根目录等，详见 官方文档。\n\n示例：\n\n// config.js\nmodule.exports = {\n  themeconfig: {\n    repo: 'xugaoyi/vuepress-theme-vdoing', // github仓库地址\n    docsdir: 'docs', // .md文件放在了docs目录下\n    editlinks: true, // 启用编辑链接\n    editlinktext: '编辑',\n  }\n}\n\n\n配置好之后，每个文章页面底下都会有一个编辑按钮，点击即可跳到github在线编辑，编辑完成后提交就会自动触发github actions自动部署。\n\n\n# 在线新增文章\n\n在github博客源码仓库相应的文章目录下，新建.md文件，编辑好文章并提交后会触发github actions自动部署。\n\n> 提示：当使用过在线编辑或新增后，下次在本地编辑之前先拉取代码。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "主题配置",
      "frontmatter": {
        "title": "主题配置",
        "date": "2020-05-12T14:57:21.000Z",
        "permalink": "/pages/a20ce8",
        "article": false
      },
      "regularPath": "/02.%E9%85%8D%E7%BD%AE/01.%E9%85%8D%E7%BD%AE/01.%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE.html",
      "relativePath": "02.配置/01.配置/01.主题配置.md",
      "key": "v-65c67f70",
      "path": "/pages/a20ce8/",
      "headers": [
        {
          "level": 2,
          "title": "是否打开分类、标签、归档",
          "slug": "是否打开分类、标签、归档",
          "normalizedTitle": "是否打开分类、标签、归档",
          "charIndex": 107
        },
        {
          "level": 3,
          "title": "category",
          "slug": "category",
          "normalizedTitle": "category",
          "charIndex": 124
        },
        {
          "level": 3,
          "title": "tag",
          "slug": "tag",
          "normalizedTitle": "tag",
          "charIndex": 271
        },
        {
          "level": 3,
          "title": "archive",
          "slug": "archive",
          "normalizedTitle": "archive",
          "charIndex": 413
        },
        {
          "level": 3,
          "title": "使用分类页、标签页、归档页链接",
          "slug": "使用分类页、标签页、归档页链接",
          "normalizedTitle": "使用分类页、标签页、归档页链接",
          "charIndex": 560
        },
        {
          "level": 2,
          "title": "碎片化文章默认分类值",
          "slug": "碎片化文章默认分类值",
          "normalizedTitle": "碎片化文章默认分类值",
          "charIndex": 682
        },
        {
          "level": 3,
          "title": "categoryText",
          "slug": "categorytext",
          "normalizedTitle": "categorytext",
          "charIndex": 697
        },
        {
          "level": 2,
          "title": "页面风格",
          "slug": "页面风格",
          "normalizedTitle": "页面风格",
          "charIndex": 768
        },
        {
          "level": 3,
          "title": "pageStyle",
          "slug": "pagestyle",
          "normalizedTitle": "pagestyle",
          "charIndex": 777
        },
        {
          "level": 3,
          "title": "defaultMode",
          "slug": "defaultmode",
          "normalizedTitle": "defaultmode",
          "charIndex": 932
        },
        {
          "level": 2,
          "title": "body背景大图",
          "slug": "body背景大图",
          "normalizedTitle": "body背景大图",
          "charIndex": 1056
        },
        {
          "level": 3,
          "title": "bodyBgImg",
          "slug": "bodybgimg",
          "normalizedTitle": "bodybgimg",
          "charIndex": 833
        },
        {
          "level": 3,
          "title": "bodyBgImgOpacity",
          "slug": "bodybgimgopacity",
          "normalizedTitle": "bodybgimgopacity",
          "charIndex": 1190
        },
        {
          "level": 3,
          "title": "bodyBgImgInterval",
          "slug": "bodybgimginterval",
          "normalizedTitle": "bodybgimginterval",
          "charIndex": 1162
        },
        {
          "level": 2,
          "title": "文章标题前的图标",
          "slug": "文章标题前的图标",
          "normalizedTitle": "文章标题前的图标",
          "charIndex": 1335
        },
        {
          "level": 3,
          "title": "titleBadge",
          "slug": "titlebadge",
          "normalizedTitle": "titlebadge",
          "charIndex": 1348
        },
        {
          "level": 3,
          "title": "titleBadgeIcons",
          "slug": "titlebadgeicons",
          "normalizedTitle": "titlebadgeicons",
          "charIndex": 1401
        },
        {
          "level": 2,
          "title": "文章内容块的背景底纹",
          "slug": "文章内容块的背景底纹",
          "normalizedTitle": "文章内容块的背景底纹",
          "charIndex": 1456
        },
        {
          "level": 3,
          "title": "contentBgStyle",
          "slug": "contentbgstyle",
          "normalizedTitle": "contentbgstyle",
          "charIndex": 1471
        },
        {
          "level": 2,
          "title": "侧边栏",
          "slug": "侧边栏",
          "normalizedTitle": "侧边栏",
          "charIndex": 1598
        },
        {
          "level": 3,
          "title": "sidebar",
          "slug": "sidebar",
          "normalizedTitle": "sidebar",
          "charIndex": 1606
        },
        {
          "level": 3,
          "title": "sidebarOpen",
          "slug": "sidebaropen",
          "normalizedTitle": "sidebaropen",
          "charIndex": 1860
        },
        {
          "level": 3,
          "title": "对指定页面禁用侧边栏",
          "slug": "对指定页面禁用侧边栏",
          "normalizedTitle": "对指定页面禁用侧边栏",
          "charIndex": 1958
        },
        {
          "level": 3,
          "title": "碎片化文章的侧边栏",
          "slug": "碎片化文章的侧边栏",
          "normalizedTitle": "碎片化文章的侧边栏",
          "charIndex": 2031
        },
        {
          "level": 2,
          "title": "最近更新栏",
          "slug": "最近更新栏",
          "normalizedTitle": "最近更新栏",
          "charIndex": 2118
        },
        {
          "level": 3,
          "title": "updateBar",
          "slug": "updatebar",
          "normalizedTitle": "updatebar",
          "charIndex": 2128
        },
        {
          "level": 3,
          "title": "非文章页的设置",
          "slug": "非文章页的设置",
          "normalizedTitle": "非文章页的设置",
          "charIndex": 2316
        },
        {
          "level": 2,
          "title": "右侧文章大纲栏",
          "slug": "右侧文章大纲栏",
          "normalizedTitle": "右侧文章大纲栏",
          "charIndex": 2471
        },
        {
          "level": 3,
          "title": "rightMenuBar",
          "slug": "rightmenubar",
          "normalizedTitle": "rightmenubar",
          "charIndex": 2483
        },
        {
          "level": 2,
          "title": "快捷翻页按钮",
          "slug": "快捷翻页按钮",
          "normalizedTitle": "快捷翻页按钮",
          "charIndex": 2611
        },
        {
          "level": 3,
          "title": "pageButton",
          "slug": "pagebutton",
          "normalizedTitle": "pagebutton",
          "charIndex": 2622
        },
        {
          "level": 2,
          "title": "文章作者信息",
          "slug": "文章作者信息",
          "normalizedTitle": "文章作者信息",
          "charIndex": 2703
        },
        {
          "level": 3,
          "title": "author",
          "slug": "author",
          "normalizedTitle": "author",
          "charIndex": 2714
        },
        {
          "level": 3,
          "title": "指定的文章作者信息",
          "slug": "指定的文章作者信息",
          "normalizedTitle": "指定的文章作者信息",
          "charIndex": 2834
        },
        {
          "level": 2,
          "title": "博主信息",
          "slug": "博主信息",
          "normalizedTitle": "博主信息",
          "charIndex": 2971
        },
        {
          "level": 3,
          "title": "blogger",
          "slug": "blogger",
          "normalizedTitle": "blogger",
          "charIndex": 2980
        },
        {
          "level": 2,
          "title": "社交图标",
          "slug": "社交图标",
          "normalizedTitle": "社交图标",
          "charIndex": 3135
        },
        {
          "level": 3,
          "title": "social",
          "slug": "social",
          "normalizedTitle": "social",
          "charIndex": 3144
        },
        {
          "level": 3,
          "title": "主题内置的社交图标",
          "slug": "主题内置的社交图标",
          "normalizedTitle": "主题内置的社交图标",
          "charIndex": 3439
        },
        {
          "level": 2,
          "title": "扩展自动生成front matter",
          "slug": "扩展自动生成front-matter",
          "normalizedTitle": "扩展自动生成front matter",
          "charIndex": 3700
        },
        {
          "level": 3,
          "title": "extendFrontmatter",
          "slug": "extendfrontmatter",
          "normalizedTitle": "extendfrontmatter",
          "charIndex": 3723
        },
        {
          "level": 2,
          "title": "页脚版权栏",
          "slug": "页脚版权栏",
          "normalizedTitle": "页脚版权栏",
          "charIndex": 4080
        },
        {
          "level": 3,
          "title": "footer",
          "slug": "footer",
          "normalizedTitle": "footer",
          "charIndex": 4090
        },
        {
          "level": 2,
          "title": "自定义html模块",
          "slug": "自定义html模块",
          "normalizedTitle": "自定义html模块",
          "charIndex": 4298
        },
        {
          "level": 3,
          "title": "htmlModules",
          "slug": "htmlmodules",
          "normalizedTitle": "htmlmodules",
          "charIndex": 4325
        }
      ],
      "headersStr": "是否打开分类、标签、归档 category tag archive 使用分类页、标签页、归档页链接 碎片化文章默认分类值 categoryText 页面风格 pageStyle defaultMode body背景大图 bodyBgImg bodyBgImgOpacity bodyBgImgInterval 文章标题前的图标 titleBadge titleBadgeIcons 文章内容块的背景底纹 contentBgStyle 侧边栏 sidebar sidebarOpen 对指定页面禁用侧边栏 碎片化文章的侧边栏 最近更新栏 updateBar 非文章页的设置 右侧文章大纲栏 rightMenuBar 快捷翻页按钮 pageButton 文章作者信息 author 指定的文章作者信息 博主信息 blogger 社交图标 social 主题内置的社交图标 扩展自动生成front matter extendFrontmatter 页脚版权栏 footer 自定义html模块 htmlModules",
      "content": "主题的配置在.vuepress/config.ts文件的themeConfig字段中，是在原有配置的基础上做的新增和修改，配置示例请查看：config.ts。\n\n更多官方配置，请查看vuepress文档。\n\n\n# 是否打开分类、标签、归档\n\n\n# category\n\n * 类型：boolean\n * 默认：true\n\n是否打开分类功能。 如打开，会做的事情有：\n\n 1. 自动生成的front matter包含分类字段\n 2. 页面中显示与分类相关的信息和模块\n 3. 自动生成分类页面（在@pages文件夹）\n\n如关闭，则反之。\n\n\n# tag\n\n * 类型：boolean\n * 默认：true\n\n是否打开标签功能。 如打开，会做的事情有：\n\n 1. 自动生成的front matter包含标签字段\n 2. 页面中显示与标签相关的信息和模块\n 3. 自动生成标签页面（在@pages文件夹）\n\n如关闭，则反之。\n\n\n# archive\n\n * 类型：boolean\n * 默认：true\n\n是否打开归档功能。 如打开，会做的事情有：\n\n 1. 自动生成归档页面（在@pages文件夹）\n\n如关闭，则反之。\n\n提示\n\n如果你仅仅是想使用这个主题来搭建知识库，并不想使用分类、标签、归档功能，就可以关闭它们。\n\n\n# 使用分类页、标签页、归档页链接\n\n当你打开了分类、标签、归档功能，就可以在导航或其他地方添加分类页、标签页、归档页的链接：\n\n * 分类页: /categories/\n * 标签页: /tags/\n * 归档页: /archives/\n\n\n# 碎片化文章默认分类值\n\n\n# categoryText\n\n * 类型：string\n * 默认：'随笔'\n\n碎片化文章（_posts文件夹的文章）默认生成的分类值\n\n\n# 页面风格\n\n\n# pageStyle\n\n * 类型：string\n * 可选值：'card' | 'line' （line在未设置bodyBgImg时才生效）\n * 默认：'card'\n\n页面风格，card时背景显示灰色衬托出卡片样式，line时背景显示纯色，并且部分模块带线条边框（未设置bodyBgImg时才生效）\n\n\n# defaultMode\n\n * 类型：string\n * 可选值：'auto' | 'light' | 'dark' | 'read'\n * 默认：'auto'\n\n默认外观模式，用户未在页面手动修改过模式时才生效，否则以用户设置的模式为准\n\n\n# body背景大图\n\n\n# bodyBgImg\n\n * 类型：string | array\n * 默认：undefined\n\nbody背景大图，单张图片使用String，多张图片使用Array， 多张图片时每隔 <bodyBgImgInterval> 秒换一张\n\n\n# bodyBgImgOpacity\n\n * 类型：number\n * 默认：0.5\n * 选值范围：0 ~ 1.0\n\nbody背景图透明度\n\n\n# bodyBgImgInterval\n\n * 类型：number\n * 默认：15\n * 单位：s\n\nbody有多张背景大图时的切换间隔\n\n\n# 文章标题前的图标\n\n\n# titleBadge\n\n * 类型：boolean\n * 默认：true\n\n是否打开文章标题图标\n\n\n# titleBadgeIcons\n\n * 类型：array\n * 默认：内置图标\n\n文章标题图标的地址\n\n\n# 文章内容块的背景底纹\n\n\n# contentBgStyle\n\n * 类型：number\n * 默认：undefined\n * 选值：1 => 方格 | 2 => 横线 | 3 => 竖线 | 4 => 左斜线 | 5 => 右斜线 | 6 => 点状\n\n文章内容块的背景底纹\n\n\n# 侧边栏\n\n\n# sidebar\n\n * 类型：srting | object | array\n * 在默认主题原有的配置上新增两项参数：\n   * 'structuring' 自动生成结构化侧边栏\n   * { mode: 'structuring', collapsable: Boolean} 自动生成结构化侧边栏，并设置侧边栏是否可折叠，默认true\n\n提示\n\n如需构建结构化站点请把此配置设置为structuring 或 { mode: 'structuring', collapsable: false}\n\n\n# sidebarOpen\n\n * 类型：boolean\n * 默认：true\n\n初始状态下是否打开侧边栏\n\n提示\n\n在侧边栏关闭状态下，页面向下滚动时会隐藏顶部导航栏，让用户更专注于阅读。\n\n\n# 对指定页面禁用侧边栏\n\n你可以通过 front matter 来禁用指定页面的侧边栏：\n\n---\nsidebar: false\n---\n\n\n\n# 碎片化文章的侧边栏\n\n在_posts文件夹的文章会自动在 front matter 添加 sidebar: auto\n\n---\nsidebar: auto\n---\n\n\n\n# 最近更新栏\n\n\n# updateBar\n\n * 类型：object\n * 默认：{showToArticle: true, moreArticle: '/archives/'}\n   * showToArticle 显示到文章页底部，默认true\n   * moreArticle “更多文章”跳转的页面，默认'/archives/'\n\n最近更新栏，显示于文章页底部和简约版首页文章列表\n\n\n# 非文章页的设置\n\n对于非文章页，如目录页、关于、友情链接等自定义页面，最好在front matter设置article: false，设置之后这个页面将被认定为非文章页，不显示面包屑和作者、时间，不显示最近更新栏，不会参与到最近更新文章的数据计算中。\n\n---\narticle: false\n---\n\n\n\n# 右侧文章大纲栏\n\n\n# rightMenuBar\n\n * 类型：boolean\n * 默认：true\n\n是否显示右侧文章大纲栏。设置为false或屏宽小于1300px时，文章大纲将与左侧侧边栏混合在一起。 (注：在屏宽小于1300px下无论如何都不显示右侧文章大纲栏。)\n\n\n# 快捷翻页按钮\n\n\n# pageButton\n\n * 类型：boolean\n * 默认：true\n\n是否显示快捷翻页按钮 (此按钮是文章页左右两边的箭头按钮，小屏中不会显示。)\n\n\n# 文章作者信息\n\n\n# author\n\n * 类型：string | {name: String, link: String}\n * 默认：undefined\n * 属性：\n   * name 作者名称\n   * link 作者链接\n\n文章默认的作者信息\n\n\n# 指定的文章作者信息\n\n你也可以在指定的文章front matter设置作者信息，优先级比默认作者信息高，示例：\n\n---\nauthor:\n  name: 作者名\n  link: https://xxx.com\n---\n 或\n---\nauthor: 作者名\n---\n\n\n\n# 博主信息\n\n\n# blogger\n\n * 参数和类型：{avatar: String, name: String, slogan: String}\n * 默认：undefined\n   * avatar 头像，必需\n   * name 博主名称，必需\n   * slogan 标语，可选\n\n博主信息显示于首页博主信息栏\n\n\n# 社交图标\n\n\n# social\n\n * 参数和类型：{iconfontCssFile: String, icons: [{iconClass: String, title: String, link: String}]}\n * 默认：undefined\n   * iconfontCssFile 可选，阿里图标库（或其他）的在线css字体图标文件地址，对于主题没有的图标可自由添加\n   * icons 图标列表，数量自由\n     * iconClass 图标的Class名称\n     * title 图标的title\n     * link 图标的跳转链接\n\n社交图标显示于博主信息栏和页脚栏\n\n\n# 主题内置的社交图标\n\n微信            QQ        邮件             npm        github        gitee        微博\n                                                                             \nicon-weixin   icon-QQ   icon-youjian   icon-npm   icon-github   icon-gitee   icon-weibo\n\n\n# 扩展自动生成front matter\n\n\n# extendFrontmatter\n\n * 类型：Object\n * 默认：undefined\n\n当.md文件的front matter不存在extendFrontmatter内相应的字段时，将在运行开发服务dev或打包build时自动添加，但不会覆盖已有的数据。\n\n例子：\n\nextendFrontmatter: {\n  author: {\n    name: 'xugaoyi',\n    link: 'https://github.com/xugaoyi'\n  },\n  titleTag: '',\n}\n\n\n生成到front matter：\n\n---\nauthor:\n  name: xugaoyi\n  link: https://github.com/xugaoyi\ntitleTag:\n---\n\n\n\n# 页脚版权栏\n\n\n# footer\n\n * 参数和类型：{createYear: Number | String, copyrightInfo: String}\n * 默认：undefined\n   * createYear 博客创建的年份\n   * copyrightInfo 可以配置包括版权信息、备案信息在内的所有信息，支持a标签\n\n页脚版权栏信息，原默认主题在首页的front matter中的footer配置项已弃用。\n\n\n# 自定义html模块\n\n> 可用于插入广告模块\n\n\n# htmlModules\n\n * 类型：object\n\n * 默认：undefined\n\n * 属性：\n   \n   * homeSidebarB 首页侧边栏底部\n   * sidebarT 所有左侧边栏顶部\n   * sidebarB 所有左侧边栏底部\n   * pageT 页面顶部\n   * pageB 页面底部\n   * pageTshowMode 页面顶部的显示方式\n     * 未配置 默认所有页面显示\n     * 'article' 仅文章页①显示\n     * 'custom' 仅自定义页①显示\n   * pageBshowMode 页面底部的显示方式\n     * 未配置 默认全局显示\n     * 'article' 仅文章页①显示\n     * 'custom' 仅自定义页①显示\n   * windowLB 全局窗口左下角②\n   * windowRB 全局窗口右下角②\n   \n   \n   > ①注：在.md文件front matter配置article: false的页面是自定义页，未配置的默认是文章页（首页除外）。\n   > \n   > ②注：windowLB 和 windowRB：1.展示区块最大宽高200px*400px。2.请给自定义元素定一个不超过200px*400px的宽高。3.在屏幕宽度小于960px时无论如何都不会显示。\n\n * 格式：\n\nhtmlModules: {\n   homeSidebarB: htmlString,\n   sidebarT: htmlString,\n   sidebarB: htmlString,\n   pageT: htmlString,\n   pageB: htmlString,\n   pageTshowMode: 'article' | 'custom',\n   pageBshowMode: 'article' | 'custom',\n   windowLB: htmlString,\n   windowRB: htmlString,\n }\n",
      "normalizedContent": "主题的配置在.vuepress/config.ts文件的themeconfig字段中，是在原有配置的基础上做的新增和修改，配置示例请查看：config.ts。\n\n更多官方配置，请查看vuepress文档。\n\n\n# 是否打开分类、标签、归档\n\n\n# category\n\n * 类型：boolean\n * 默认：true\n\n是否打开分类功能。 如打开，会做的事情有：\n\n 1. 自动生成的front matter包含分类字段\n 2. 页面中显示与分类相关的信息和模块\n 3. 自动生成分类页面（在@pages文件夹）\n\n如关闭，则反之。\n\n\n# tag\n\n * 类型：boolean\n * 默认：true\n\n是否打开标签功能。 如打开，会做的事情有：\n\n 1. 自动生成的front matter包含标签字段\n 2. 页面中显示与标签相关的信息和模块\n 3. 自动生成标签页面（在@pages文件夹）\n\n如关闭，则反之。\n\n\n# archive\n\n * 类型：boolean\n * 默认：true\n\n是否打开归档功能。 如打开，会做的事情有：\n\n 1. 自动生成归档页面（在@pages文件夹）\n\n如关闭，则反之。\n\n提示\n\n如果你仅仅是想使用这个主题来搭建知识库，并不想使用分类、标签、归档功能，就可以关闭它们。\n\n\n# 使用分类页、标签页、归档页链接\n\n当你打开了分类、标签、归档功能，就可以在导航或其他地方添加分类页、标签页、归档页的链接：\n\n * 分类页: /categories/\n * 标签页: /tags/\n * 归档页: /archives/\n\n\n# 碎片化文章默认分类值\n\n\n# categorytext\n\n * 类型：string\n * 默认：'随笔'\n\n碎片化文章（_posts文件夹的文章）默认生成的分类值\n\n\n# 页面风格\n\n\n# pagestyle\n\n * 类型：string\n * 可选值：'card' | 'line' （line在未设置bodybgimg时才生效）\n * 默认：'card'\n\n页面风格，card时背景显示灰色衬托出卡片样式，line时背景显示纯色，并且部分模块带线条边框（未设置bodybgimg时才生效）\n\n\n# defaultmode\n\n * 类型：string\n * 可选值：'auto' | 'light' | 'dark' | 'read'\n * 默认：'auto'\n\n默认外观模式，用户未在页面手动修改过模式时才生效，否则以用户设置的模式为准\n\n\n# body背景大图\n\n\n# bodybgimg\n\n * 类型：string | array\n * 默认：undefined\n\nbody背景大图，单张图片使用string，多张图片使用array， 多张图片时每隔 <bodybgimginterval> 秒换一张\n\n\n# bodybgimgopacity\n\n * 类型：number\n * 默认：0.5\n * 选值范围：0 ~ 1.0\n\nbody背景图透明度\n\n\n# bodybgimginterval\n\n * 类型：number\n * 默认：15\n * 单位：s\n\nbody有多张背景大图时的切换间隔\n\n\n# 文章标题前的图标\n\n\n# titlebadge\n\n * 类型：boolean\n * 默认：true\n\n是否打开文章标题图标\n\n\n# titlebadgeicons\n\n * 类型：array\n * 默认：内置图标\n\n文章标题图标的地址\n\n\n# 文章内容块的背景底纹\n\n\n# contentbgstyle\n\n * 类型：number\n * 默认：undefined\n * 选值：1 => 方格 | 2 => 横线 | 3 => 竖线 | 4 => 左斜线 | 5 => 右斜线 | 6 => 点状\n\n文章内容块的背景底纹\n\n\n# 侧边栏\n\n\n# sidebar\n\n * 类型：srting | object | array\n * 在默认主题原有的配置上新增两项参数：\n   * 'structuring' 自动生成结构化侧边栏\n   * { mode: 'structuring', collapsable: boolean} 自动生成结构化侧边栏，并设置侧边栏是否可折叠，默认true\n\n提示\n\n如需构建结构化站点请把此配置设置为structuring 或 { mode: 'structuring', collapsable: false}\n\n\n# sidebaropen\n\n * 类型：boolean\n * 默认：true\n\n初始状态下是否打开侧边栏\n\n提示\n\n在侧边栏关闭状态下，页面向下滚动时会隐藏顶部导航栏，让用户更专注于阅读。\n\n\n# 对指定页面禁用侧边栏\n\n你可以通过 front matter 来禁用指定页面的侧边栏：\n\n---\nsidebar: false\n---\n\n\n\n# 碎片化文章的侧边栏\n\n在_posts文件夹的文章会自动在 front matter 添加 sidebar: auto\n\n---\nsidebar: auto\n---\n\n\n\n# 最近更新栏\n\n\n# updatebar\n\n * 类型：object\n * 默认：{showtoarticle: true, morearticle: '/archives/'}\n   * showtoarticle 显示到文章页底部，默认true\n   * morearticle “更多文章”跳转的页面，默认'/archives/'\n\n最近更新栏，显示于文章页底部和简约版首页文章列表\n\n\n# 非文章页的设置\n\n对于非文章页，如目录页、关于、友情链接等自定义页面，最好在front matter设置article: false，设置之后这个页面将被认定为非文章页，不显示面包屑和作者、时间，不显示最近更新栏，不会参与到最近更新文章的数据计算中。\n\n---\narticle: false\n---\n\n\n\n# 右侧文章大纲栏\n\n\n# rightmenubar\n\n * 类型：boolean\n * 默认：true\n\n是否显示右侧文章大纲栏。设置为false或屏宽小于1300px时，文章大纲将与左侧侧边栏混合在一起。 (注：在屏宽小于1300px下无论如何都不显示右侧文章大纲栏。)\n\n\n# 快捷翻页按钮\n\n\n# pagebutton\n\n * 类型：boolean\n * 默认：true\n\n是否显示快捷翻页按钮 (此按钮是文章页左右两边的箭头按钮，小屏中不会显示。)\n\n\n# 文章作者信息\n\n\n# author\n\n * 类型：string | {name: string, link: string}\n * 默认：undefined\n * 属性：\n   * name 作者名称\n   * link 作者链接\n\n文章默认的作者信息\n\n\n# 指定的文章作者信息\n\n你也可以在指定的文章front matter设置作者信息，优先级比默认作者信息高，示例：\n\n---\nauthor:\n  name: 作者名\n  link: https://xxx.com\n---\n 或\n---\nauthor: 作者名\n---\n\n\n\n# 博主信息\n\n\n# blogger\n\n * 参数和类型：{avatar: string, name: string, slogan: string}\n * 默认：undefined\n   * avatar 头像，必需\n   * name 博主名称，必需\n   * slogan 标语，可选\n\n博主信息显示于首页博主信息栏\n\n\n# 社交图标\n\n\n# social\n\n * 参数和类型：{iconfontcssfile: string, icons: [{iconclass: string, title: string, link: string}]}\n * 默认：undefined\n   * iconfontcssfile 可选，阿里图标库（或其他）的在线css字体图标文件地址，对于主题没有的图标可自由添加\n   * icons 图标列表，数量自由\n     * iconclass 图标的class名称\n     * title 图标的title\n     * link 图标的跳转链接\n\n社交图标显示于博主信息栏和页脚栏\n\n\n# 主题内置的社交图标\n\n微信            qq        邮件             npm        github        gitee        微博\n                                                                             \nicon-weixin   icon-qq   icon-youjian   icon-npm   icon-github   icon-gitee   icon-weibo\n\n\n# 扩展自动生成front matter\n\n\n# extendfrontmatter\n\n * 类型：object\n * 默认：undefined\n\n当.md文件的front matter不存在extendfrontmatter内相应的字段时，将在运行开发服务dev或打包build时自动添加，但不会覆盖已有的数据。\n\n例子：\n\nextendfrontmatter: {\n  author: {\n    name: 'xugaoyi',\n    link: 'https://github.com/xugaoyi'\n  },\n  titletag: '',\n}\n\n\n生成到front matter：\n\n---\nauthor:\n  name: xugaoyi\n  link: https://github.com/xugaoyi\ntitletag:\n---\n\n\n\n# 页脚版权栏\n\n\n# footer\n\n * 参数和类型：{createyear: number | string, copyrightinfo: string}\n * 默认：undefined\n   * createyear 博客创建的年份\n   * copyrightinfo 可以配置包括版权信息、备案信息在内的所有信息，支持a标签\n\n页脚版权栏信息，原默认主题在首页的front matter中的footer配置项已弃用。\n\n\n# 自定义html模块\n\n> 可用于插入广告模块\n\n\n# htmlmodules\n\n * 类型：object\n\n * 默认：undefined\n\n * 属性：\n   \n   * homesidebarb 首页侧边栏底部\n   * sidebart 所有左侧边栏顶部\n   * sidebarb 所有左侧边栏底部\n   * paget 页面顶部\n   * pageb 页面底部\n   * pagetshowmode 页面顶部的显示方式\n     * 未配置 默认所有页面显示\n     * 'article' 仅文章页①显示\n     * 'custom' 仅自定义页①显示\n   * pagebshowmode 页面底部的显示方式\n     * 未配置 默认全局显示\n     * 'article' 仅文章页①显示\n     * 'custom' 仅自定义页①显示\n   * windowlb 全局窗口左下角②\n   * windowrb 全局窗口右下角②\n   \n   \n   > ①注：在.md文件front matter配置article: false的页面是自定义页，未配置的默认是文章页（首页除外）。\n   > \n   > ②注：windowlb 和 windowrb：1.展示区块最大宽高200px*400px。2.请给自定义元素定一个不超过200px*400px的宽高。3.在屏幕宽度小于960px时无论如何都不会显示。\n\n * 格式：\n\nhtmlmodules: {\n   homesidebarb: htmlstring,\n   sidebart: htmlstring,\n   sidebarb: htmlstring,\n   paget: htmlstring,\n   pageb: htmlstring,\n   pagetshowmode: 'article' | 'custom',\n   pagebshowmode: 'article' | 'custom',\n   windowlb: htmlstring,\n   windowrb: htmlstring,\n }\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "部署",
      "frontmatter": {
        "title": "部署",
        "date": "2020-05-13T12:10:53.000Z",
        "permalink": "/pages/0fc1d2",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/02.%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/08.%E9%83%A8%E7%BD%B2.html",
      "relativePath": "01.指南/02.相关文章/08.部署.md",
      "key": "v-2e2a7bdb",
      "path": "/pages/0fc1d2/",
      "headers": [
        {
          "level": 2,
          "title": "1.使用deploy.sh脚本部署",
          "slug": "_1-使用deploy-sh脚本部署",
          "normalizedTitle": "1.使用deploy.sh脚本部署",
          "charIndex": 122
        },
        {
          "level": 2,
          "title": "2. 使用GitHub Action自动持续集成",
          "slug": "_2-使用github-action自动持续集成",
          "normalizedTitle": "2. 使用github action自动持续集成",
          "charIndex": 576
        },
        {
          "level": 2,
          "title": "部署升级：同时部署到github和coding",
          "slug": "部署升级-同时部署到github和coding",
          "normalizedTitle": "部署升级：同时部署到github和coding",
          "charIndex": 909
        },
        {
          "level": 3,
          "title": "部署方式有两种：",
          "slug": "部署方式有两种",
          "normalizedTitle": "部署方式有两种：",
          "charIndex": 1082
        },
        {
          "level": 4,
          "title": "1) 、使用如下命令一键部署到github和coding",
          "slug": "_1-、使用如下命令一键部署到github和coding",
          "normalizedTitle": "1) 、使用如下命令一键部署到github和coding",
          "charIndex": 1094
        },
        {
          "level": 4,
          "title": "2）、使用GitHub Action自动部署到github和coding",
          "slug": "_2-、使用github-action自动部署到github和coding",
          "normalizedTitle": "2）、使用github action自动部署到github和coding",
          "charIndex": 1143
        }
      ],
      "headersStr": "1.使用deploy.sh脚本部署 2. 使用GitHub Action自动持续集成 部署升级：同时部署到github和coding 部署方式有两种： 1) 、使用如下命令一键部署到github和coding 2）、使用GitHub Action自动部署到github和coding",
      "content": "注意\n\n目前作者使用的部署方式已改为 vercel，部署方法参考 这里。（2022.01.01）\n更多 部署方式\n\n本项目内置了两种自动部署脚本，用于一键部署到 GitHub Pages 或 国内访问速度更快的Coding Pages\n\n\n# 1.使用deploy.sh脚本部署\n\n第一步，修改deploy.sh脚本内的仓库地址为你的仓库，如有自定义域名则一并修改，没有则注释\n\n# 如果是发布到自定义域名\necho 'xugaoyi.com' > CNAME\n\n# 如果发布到 https://<USERNAME>.github.io\n# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>\n# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages\n\n\n第二步，一键部署命令\n\nnpm run deploy\n\n\n> windows系统下使用bash命令窗\n\n第三步，设置仓库的GitHub Pages。\n\n> deploy.sh文件看 这里 看不懂shell代码？ 参考：shell教程\n\n\n# 2. 使用GitHub Action自动持续集成\n\n第一步，按照官方文档，生成一个github token (令牌)。\n\n第二步，将这个密钥储存到当前仓库的Settings/Secrets里面。\n\n> Settings/Secrets是储存秘密的环境变量的地方。环境变量的名字可以随便起，这里用的是ACCESS_TOKEN。如果你不用这个名字，.github/workflows/ci.yml脚本里的变量名也要跟着改。\n\n第三步，push提交代码到GitHub仓库master分支。\n\n第四步，设置仓库的GitHub Pages\n\n> 参考 GitHub Action实现自动部署静态博客 ci.yml文件看 这里 看不懂yaml代码？ 参考：yaml教程\n\n\n# 部署升级：同时部署到github和coding\n\n为了让博客站能够让百度收录，因此我把博客部署到了coding。相关文章。\n\n在原有部署方式上做了升级，主要修改代码文件有下面这两个：\n\n使用前先将github token (令牌) 和coding token (令牌) 同时设置到github仓库的Settings/Secrets位置。\n\n\n# 部署方式有两种：\n\n# 1) 、使用如下命令一键部署到github和coding\n\nnpm run deploy\n\n\n# 2）、使用GitHub Action自动部署到github和coding\n\n只需要push提交代码到github仓库master分支即可。\n\n> 参考 《GitHub Action实现自动部署静态博客》",
      "normalizedContent": "注意\n\n目前作者使用的部署方式已改为 vercel，部署方法参考 这里。（2022.01.01）\n更多 部署方式\n\n本项目内置了两种自动部署脚本，用于一键部署到 github pages 或 国内访问速度更快的coding pages\n\n\n# 1.使用deploy.sh脚本部署\n\n第一步，修改deploy.sh脚本内的仓库地址为你的仓库，如有自定义域名则一并修改，没有则注释\n\n# 如果是发布到自定义域名\necho 'xugaoyi.com' > cname\n\n# 如果发布到 https://<username>.github.io\n# git push -f git@github.com:<username>/<username>.github.io.git master\n\n# 如果发布到 https://<username>.github.io/<repo>\n# git push -f git@github.com:<username>/<repo>.git master:gh-pages\n\n\n第二步，一键部署命令\n\nnpm run deploy\n\n\n> windows系统下使用bash命令窗\n\n第三步，设置仓库的github pages。\n\n> deploy.sh文件看 这里 看不懂shell代码？ 参考：shell教程\n\n\n# 2. 使用github action自动持续集成\n\n第一步，按照官方文档，生成一个github token (令牌)。\n\n第二步，将这个密钥储存到当前仓库的settings/secrets里面。\n\n> settings/secrets是储存秘密的环境变量的地方。环境变量的名字可以随便起，这里用的是access_token。如果你不用这个名字，.github/workflows/ci.yml脚本里的变量名也要跟着改。\n\n第三步，push提交代码到github仓库master分支。\n\n第四步，设置仓库的github pages\n\n> 参考 github action实现自动部署静态博客 ci.yml文件看 这里 看不懂yaml代码？ 参考：yaml教程\n\n\n# 部署升级：同时部署到github和coding\n\n为了让博客站能够让百度收录，因此我把博客部署到了coding。相关文章。\n\n在原有部署方式上做了升级，主要修改代码文件有下面这两个：\n\n使用前先将github token (令牌) 和coding token (令牌) 同时设置到github仓库的settings/secrets位置。\n\n\n# 部署方式有两种：\n\n# 1) 、使用如下命令一键部署到github和coding\n\nnpm run deploy\n\n\n# 2）、使用github action自动部署到github和coding\n\n只需要push提交代码到github仓库master分支即可。\n\n> 参考 《github action实现自动部署静态博客》",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "首页配置",
      "frontmatter": {
        "title": "首页配置",
        "date": "2020-05-12T15:36:50.000Z",
        "permalink": "/pages/f14bdb",
        "article": false
      },
      "regularPath": "/02.%E9%85%8D%E7%BD%AE/01.%E9%85%8D%E7%BD%AE/02.%E9%A6%96%E9%A1%B5%E9%85%8D%E7%BD%AE.html",
      "relativePath": "02.配置/01.配置/02.首页配置.md",
      "key": "v-7d64b580",
      "path": "/pages/f14bdb/",
      "headers": [
        {
          "level": 3,
          "title": "bannerBg",
          "slug": "bannerbg",
          "normalizedTitle": "bannerbg",
          "charIndex": 219
        },
        {
          "level": 3,
          "title": "features",
          "slug": "features",
          "normalizedTitle": "features",
          "charIndex": 373
        },
        {
          "level": 3,
          "title": "postList",
          "slug": "postlist",
          "normalizedTitle": "postlist",
          "charIndex": 776
        },
        {
          "level": 3,
          "title": "simplePostListLength",
          "slug": "simplepostlistlength",
          "normalizedTitle": "simplepostlistlength",
          "charIndex": 797
        },
        {
          "level": 3,
          "title": "hideRightBar",
          "slug": "hiderightbar",
          "normalizedTitle": "hiderightbar",
          "charIndex": 871
        }
      ],
      "headersStr": "bannerBg features postList simplePostListLength hideRightBar",
      "content": "在docs目录下的index.md或README.md的 front matter 指定 home: true，就会为你的站点生成一个首页，示例：\n\n---\nhome: true\n# heroImage: /img/web.png\nheroText: Evan's blog\ntagline: Web前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n# actionText: 立刻进入 →\n# actionLink: /web/\n# bannerBg: auto # auto => 网格纹背景(有bodyBgImg时无背景)，默认 | none => 无 | '大图地址' | background: 自定义背景样式       提示：如发现文本颜色不适应你的背景时可以到palette.styl修改$bannerTextColor变量\n\nfeatures: # 可选的\n  - title: 前端\n    details: JavaScript、ES6、Vue框架等前端技术\n    link: /web/ # 可选\n    imgUrl: /img/web.png # 可选\n  - title: 页面\n    details: html(5)/css(3)，前端页面相关技术\n    link: /ui/\n    imgUrl: /img/ui.png\n  - title: 技术\n    details: 技术文档、教程、技巧、总结等文章\n    link: /technology/\n    imgUrl: /img/other.png\n\n# 文章列表显示方式: detailed 默认，显示详细版文章列表（包括作者、分类、标签、摘要、分页等）| simple => 显示简约版文章列表（仅标题和日期）| none 不显示文章列表\n# postList: detailed\n# simplePostListLength: 10 # 简约版文章列表显示的文章数量，默认10。（仅在postList设置为simple时生效）\n# hideRightBar: true # 是否隐藏右侧边栏 (v1.11.2+)\n---\n\n\n一些字段还是沿用默认主题的，这里只对修改的地方做一个补充。\n\n\n# bannerBg\n\n * 类型：string\n * 可选参数：\n   * auto 自动背景，一般会显示网格纹背景，如果在config.js设置了bodyBgImg时则无背景\n   * none 无背景\n   * <大图地址>，如/img/bg.jpeg\n   * background: <自定义背景样式>，如background: blue\n * 默认： auto\n\n\n# features\n\n * 类型：{title: string, details: string, link?: string, imgUrl?: string}[]\n\nfeatures是在banner栏显示的特性描述，主题添加了图片的展示和点击跳转的链接\n\n * features[index].link 当前feature跳转的链接，可选\n * features[index].imgUrl 当前feature的图片地址，可选\n\n\n# postList\n\n * 类型：'detailed' | 'simple' | 'none'\n * 可选参数：\n   * detailed 显示详细版文章列表（包括标题、日期、作者、分类、标签、摘要、分页等）\n   * simple 显示简约版文章列表（仅标题和日期）\n   * none 不显示文章列表\n * 默认： detailed\n\n首页内容中的文章列表显示方式\n\n\n# simplePostListLength\n\n * 类型：number\n * 默认： 10\n\n简约版文章列表显示的文章数量，默认10。（仅在postList设置为simple时生效）\n\n\n# hideRightBar\n\n * 类型：boolean\n * 默认： false\n\n是否隐藏右侧边栏\n\n注意\n\n原默认主题首页的footer字段已改到config.js文件里设置",
      "normalizedContent": "在docs目录下的index.md或readme.md的 front matter 指定 home: true，就会为你的站点生成一个首页，示例：\n\n---\nhome: true\n# heroimage: /img/web.png\nherotext: evan's blog\ntagline: web前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n# actiontext: 立刻进入 →\n# actionlink: /web/\n# bannerbg: auto # auto => 网格纹背景(有bodybgimg时无背景)，默认 | none => 无 | '大图地址' | background: 自定义背景样式       提示：如发现文本颜色不适应你的背景时可以到palette.styl修改$bannertextcolor变量\n\nfeatures: # 可选的\n  - title: 前端\n    details: javascript、es6、vue框架等前端技术\n    link: /web/ # 可选\n    imgurl: /img/web.png # 可选\n  - title: 页面\n    details: html(5)/css(3)，前端页面相关技术\n    link: /ui/\n    imgurl: /img/ui.png\n  - title: 技术\n    details: 技术文档、教程、技巧、总结等文章\n    link: /technology/\n    imgurl: /img/other.png\n\n# 文章列表显示方式: detailed 默认，显示详细版文章列表（包括作者、分类、标签、摘要、分页等）| simple => 显示简约版文章列表（仅标题和日期）| none 不显示文章列表\n# postlist: detailed\n# simplepostlistlength: 10 # 简约版文章列表显示的文章数量，默认10。（仅在postlist设置为simple时生效）\n# hiderightbar: true # 是否隐藏右侧边栏 (v1.11.2+)\n---\n\n\n一些字段还是沿用默认主题的，这里只对修改的地方做一个补充。\n\n\n# bannerbg\n\n * 类型：string\n * 可选参数：\n   * auto 自动背景，一般会显示网格纹背景，如果在config.js设置了bodybgimg时则无背景\n   * none 无背景\n   * <大图地址>，如/img/bg.jpeg\n   * background: <自定义背景样式>，如background: blue\n * 默认： auto\n\n\n# features\n\n * 类型：{title: string, details: string, link?: string, imgurl?: string}[]\n\nfeatures是在banner栏显示的特性描述，主题添加了图片的展示和点击跳转的链接\n\n * features[index].link 当前feature跳转的链接，可选\n * features[index].imgurl 当前feature的图片地址，可选\n\n\n# postlist\n\n * 类型：'detailed' | 'simple' | 'none'\n * 可选参数：\n   * detailed 显示详细版文章列表（包括标题、日期、作者、分类、标签、摘要、分页等）\n   * simple 显示简约版文章列表（仅标题和日期）\n   * none 不显示文章列表\n * 默认： detailed\n\n首页内容中的文章列表显示方式\n\n\n# simplepostlistlength\n\n * 类型：number\n * 默认： 10\n\n简约版文章列表显示的文章数量，默认10。（仅在postlist设置为simple时生效）\n\n\n# hiderightbar\n\n * 类型：boolean\n * 默认： false\n\n是否隐藏右侧边栏\n\n注意\n\n原默认主题首页的footer字段已改到config.js文件里设置",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "如何让你的笔记更有表现力",
      "frontmatter": {
        "title": "如何让你的笔记更有表现力",
        "date": "2020-09-26T21:13:59.000Z",
        "permalink": "/pages/dd027d/",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/02.%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/06.%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84%E7%AC%94%E8%AE%B0%E6%9B%B4%E6%9C%89%E8%A1%A8%E7%8E%B0%E5%8A%9B.html",
      "relativePath": "01.指南/02.相关文章/06.如何让你的笔记更有表现力.md",
      "key": "v-b4984d22",
      "path": "/pages/dd027d/",
      "headers": [
        {
          "level": 2,
          "title": "1. 文本高亮",
          "slug": "_1-文本高亮",
          "normalizedTitle": "1. 文本高亮",
          "charIndex": 126
        },
        {
          "level": 2,
          "title": "2. 标记",
          "slug": "_2-标记",
          "normalizedTitle": "2. 标记",
          "charIndex": 233
        },
        {
          "level": 3,
          "title": "内置标记",
          "slug": "内置标记",
          "normalizedTitle": "内置标记",
          "charIndex": 243
        },
        {
          "level": 3,
          "title": "外部标记",
          "slug": "外部标记",
          "normalizedTitle": "外部标记",
          "charIndex": 348
        },
        {
          "level": 2,
          "title": "3. 折叠列表",
          "slug": "_3-折叠列表",
          "normalizedTitle": "3. 折叠列表",
          "charIndex": 546
        },
        {
          "level": 2,
          "title": "4. 思维导图 & 流程图",
          "slug": "_4-思维导图-流程图",
          "normalizedTitle": "4. 思维导图 &amp; 流程图",
          "charIndex": null
        },
        {
          "level": 3,
          "title": "方法一：",
          "slug": "方法一",
          "normalizedTitle": "方法一：",
          "charIndex": 721
        },
        {
          "level": 3,
          "title": "方法二：",
          "slug": "方法二",
          "normalizedTitle": "方法二：",
          "charIndex": 972
        },
        {
          "level": 3,
          "title": "方法三：",
          "slug": "方法三",
          "normalizedTitle": "方法三：",
          "charIndex": 1194
        },
        {
          "level": 2,
          "title": "5.Demo演示框",
          "slug": "_5-demo演示框",
          "normalizedTitle": "5.demo演示框",
          "charIndex": 1272
        },
        {
          "level": 3,
          "title": "方法一：",
          "slug": "方法一-2",
          "normalizedTitle": "方法一：",
          "charIndex": 721
        },
        {
          "level": 3,
          "title": "方法二：",
          "slug": "方法二-2",
          "normalizedTitle": "方法二：",
          "charIndex": 972
        }
      ],
      "headersStr": "1. 文本高亮 2. 标记 内置标记 外部标记 3. 折叠列表 4. 思维导图 & 流程图 方法一： 方法二： 方法三： 5.Demo演示框 方法一： 方法二：",
      "content": "你的知识笔记枯燥无味没有重点？基于本主题，配合各种骚操作，让你的知识笔记表现力爆棚~~\n\n笔记\n\nMarkdown的基本语法就不再重复啦 (对Markdown不了解的可以看 这里), 下面将介绍一些可以在本主题Markdown中使用的骚操作~\n\n\n# 1. 文本高亮\n\n使用<mark>标签让文本高亮\n\nVdoing是一款简洁高效的 &lt;mark>知识管理&amp;博客&lt;/mark> 主题\n\n\nVdoing是一款简洁高效的 知识管理&博客 主题\n\n\n# 2. 标记\n\n\n# 内置标记\n\n主题内置的Badge组件，直接在 Markdown 文件中使用\n\n<Badge text=\"beta\" type=\"warning\"/>\n<Badge text=\"Vdoing主题\"/>\n\n\n\n# 外部标记\n\n使用 shields 生成标记，在Markdown中使用\n\n![npm](https://img.shields.io/npm/v/vuepress-theme-vdoing)\n![star](https://img.shields.io/github/stars/xugaoyi/vuepress-theme-vdoing)\n\n\n\n\n> 这类标记图标可以生成动态统计数据。\n\n\n# 3. 折叠列表\n\n主题内置的容器，直接在 Markdown 文件中使用\n\n::: details\n这是一个详情块\n```js\nconsole.log('这是一个详情块')\n```\n:::\n\n\n点击查看\n\n这是一个详情块\n\nconsole.log('这是一个详情块')\n\n\n> 更多：Markdown 容器\n\n\n# 4. 思维导图 & 流程图\n\n\n# 方法一：\n\n 1. 使用Markmap生成思维导图html文件\n 2. 将html文件放在docs/.vuepress/public/markmap/\n 3. 通过<iframe>插入到Markdown\n\n  <iframe :src=\"$withBase('/markmap/01.html')\" width=\"100%\" height=\"400\" frameborder=\"0\" scrolling=\"No\" leftmargin=\"0\" topmargin=\"0\"></iframe>\n\n\n\n# 方法二：\n\n通过<iframe>标签引入processon或其他在线作图工具生成的链接。\n\n<iframe src=\"https://www.processon.com/view/link/5e718942e4b015182028682c\" width=\"100%\" height=\"500\" frameborder=\"0\" scrolling=\"No\" leftmargin=\"0\" topmargin=\"0\"></iframe>\n\n\n\n# 方法三：\n\n使用流程图插件：\n\n * vuepress-plugin-flowchart\n * vuepress-plugin-mermaidjs\n\n\n# 5.Demo演示框\n\n\n# 方法一：\n\n 1. 安装 vuepress-plugin-demo-block或其他同类插件，使用方法看插件文档\n 2. 在.vuepress/config.js配置插件\n 3. Markdown中使用\n\n> 同类插件：vuepress-plugin-demo-container\n\n<html>\n  <div class=\"animationBox\">\n    <div class=\"rotate\">旋转动画1</div>\n    <div class=\"play\">\n      <div class=\"img\">旋转动画2</div>\n      <span><p class=\"p2\"></p></span>\n      <span><p></p></span>\n      <span><p></p></span>\n      <span><p class=\"p2\"></p></span>\n    </div>\n    <div class=\"elasticity\">弹性动画</div>\n    <div class=\"elasticity2\">曲线弹性</div>\n  </div>\n</html>\n\n<style>\n  .animationBox{overflow: hidden;}\n  .animationBox>div{\n    width: 100px;height: 100px;background: #eee;border-radius: 50%;text-align: center;line-height: 100px;margin: 30px;float:left;\n  }\n  .rotate{\n    animation: rotate 5s linear infinite\n  }\n  .rotate:hover{ animation-play-state: paused}\n  @keyframes rotate {\n    0%{transform: rotate(0);}\n  100%{transform: rotate(360deg);}\n  }\n  .animationBox>.play {\n    position: relative;\n    margin: 50px 30px;\n    background:none;\n  }\n  .play .img{\n    position: absolute;\n    top: 0;\n    left:0;\n    z-index: 1;\n    width: 100px;height: 100px; background: #eee;\n    border-radius: 50%;\n\n    animation: rotate 5s linear infinite\n  }\n  .play span {\n    position: absolute;\n    top: 1px;\n    left:1px;\n    z-index: 0;\n    display: block;\n    width: 96px;\n    height: 96px;\n    border: 1px solid #999;\n    border-radius: 50%;\n  }\n  .play span p{display: block;width: 4px;height: 4px;background: #000;margin: -2px 0 0 50%;border-radius: 50%;opacity: 0.5;}\n  .play span .p2{margin: 50% 0 0 -2px;}\n  .play span{\n    animation: wave 5s linear infinite\n  }\n  .play>span:nth-child(3){\n    /* 延迟时间 */\n    animation-delay:1s;\n  }\n  .play>span:nth-child(4){\n    animation-delay:2.2s;\n  }\n  .play>span:nth-child(5){\n    animation-delay:3.8s;\n  }\n\n  @keyframes wave {\n    0%\n    {\n      transform:scale(1) rotate(360deg);\n      opacity: 0.8;\n    }\n  100%\n    {\n      transform:scale(1.8) rotate(0deg);\n      opacity: 0;\n    }\n  }\n\n\n  .elasticity{\n    animation: elasticity 1s linear 2s infinite\n  }\n\n  @keyframes elasticity{\n    0%{\n      transform: scale(0);\n    }\n    60%{\n      transform: scale(1.1);\n    }\n    90%{\n      transform: scale(1);\n    }\n  }\n\n  .elasticity2{\n    animation: elasticity2 1s cubic-bezier(.39,.62,.74,1.39) 2s infinite\n  }\n  @keyframes elasticity2{\n    0%{\n      transform: scale(0);\n    }\n    90%{\n      transform: scale(1);\n    }\n  }\n</style>\n\n\n\n\n\n# 方法二：\n\n嵌入codepen\n\n<iframe height=\"400\" style=\"width: 100%;\" scrolling=\"no\" title=\"【CSS：行为】使用:hover和attr()定制悬浮提示\" src=\"https://codepen.io/xugaoyi/embed/vYNKNaq?height=400&theme-id=light&default-tab=css,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" loading=\"lazy\">\n  See the Pen <a href='https://codepen.io/xugaoyi/pen/vYNKNaq'>【CSS：行为】使用:hover和attr()定制悬浮提示</a> by xugaoyi\n  (<a href='https://codepen.io/xugaoyi'>@xugaoyi</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n\nSee the Pen 【CSS：行为】使用:hover和attr()定制悬浮提示 by xugaoyi (@xugaoyi) on CodePen.\n\n笔记\n\n<iframe>标签还可以嵌入其他任何外部网页，如视频、地图等",
      "normalizedContent": "你的知识笔记枯燥无味没有重点？基于本主题，配合各种骚操作，让你的知识笔记表现力爆棚~~\n\n笔记\n\nmarkdown的基本语法就不再重复啦 (对markdown不了解的可以看 这里), 下面将介绍一些可以在本主题markdown中使用的骚操作~\n\n\n# 1. 文本高亮\n\n使用<mark>标签让文本高亮\n\nvdoing是一款简洁高效的 &lt;mark>知识管理&amp;博客&lt;/mark> 主题\n\n\nvdoing是一款简洁高效的 知识管理&博客 主题\n\n\n# 2. 标记\n\n\n# 内置标记\n\n主题内置的badge组件，直接在 markdown 文件中使用\n\n<badge text=\"beta\" type=\"warning\"/>\n<badge text=\"vdoing主题\"/>\n\n\n\n# 外部标记\n\n使用 shields 生成标记，在markdown中使用\n\n![npm](https://img.shields.io/npm/v/vuepress-theme-vdoing)\n![star](https://img.shields.io/github/stars/xugaoyi/vuepress-theme-vdoing)\n\n\n\n\n> 这类标记图标可以生成动态统计数据。\n\n\n# 3. 折叠列表\n\n主题内置的容器，直接在 markdown 文件中使用\n\n::: details\n这是一个详情块\n```js\nconsole.log('这是一个详情块')\n```\n:::\n\n\n点击查看\n\n这是一个详情块\n\nconsole.log('这是一个详情块')\n\n\n> 更多：markdown 容器\n\n\n# 4. 思维导图 & 流程图\n\n\n# 方法一：\n\n 1. 使用markmap生成思维导图html文件\n 2. 将html文件放在docs/.vuepress/public/markmap/\n 3. 通过<iframe>插入到markdown\n\n  <iframe :src=\"$withbase('/markmap/01.html')\" width=\"100%\" height=\"400\" frameborder=\"0\" scrolling=\"no\" leftmargin=\"0\" topmargin=\"0\"></iframe>\n\n\n\n# 方法二：\n\n通过<iframe>标签引入processon或其他在线作图工具生成的链接。\n\n<iframe src=\"https://www.processon.com/view/link/5e718942e4b015182028682c\" width=\"100%\" height=\"500\" frameborder=\"0\" scrolling=\"no\" leftmargin=\"0\" topmargin=\"0\"></iframe>\n\n\n\n# 方法三：\n\n使用流程图插件：\n\n * vuepress-plugin-flowchart\n * vuepress-plugin-mermaidjs\n\n\n# 5.demo演示框\n\n\n# 方法一：\n\n 1. 安装 vuepress-plugin-demo-block或其他同类插件，使用方法看插件文档\n 2. 在.vuepress/config.js配置插件\n 3. markdown中使用\n\n> 同类插件：vuepress-plugin-demo-container\n\n<html>\n  <div class=\"animationbox\">\n    <div class=\"rotate\">旋转动画1</div>\n    <div class=\"play\">\n      <div class=\"img\">旋转动画2</div>\n      <span><p class=\"p2\"></p></span>\n      <span><p></p></span>\n      <span><p></p></span>\n      <span><p class=\"p2\"></p></span>\n    </div>\n    <div class=\"elasticity\">弹性动画</div>\n    <div class=\"elasticity2\">曲线弹性</div>\n  </div>\n</html>\n\n<style>\n  .animationbox{overflow: hidden;}\n  .animationbox>div{\n    width: 100px;height: 100px;background: #eee;border-radius: 50%;text-align: center;line-height: 100px;margin: 30px;float:left;\n  }\n  .rotate{\n    animation: rotate 5s linear infinite\n  }\n  .rotate:hover{ animation-play-state: paused}\n  @keyframes rotate {\n    0%{transform: rotate(0);}\n  100%{transform: rotate(360deg);}\n  }\n  .animationbox>.play {\n    position: relative;\n    margin: 50px 30px;\n    background:none;\n  }\n  .play .img{\n    position: absolute;\n    top: 0;\n    left:0;\n    z-index: 1;\n    width: 100px;height: 100px; background: #eee;\n    border-radius: 50%;\n\n    animation: rotate 5s linear infinite\n  }\n  .play span {\n    position: absolute;\n    top: 1px;\n    left:1px;\n    z-index: 0;\n    display: block;\n    width: 96px;\n    height: 96px;\n    border: 1px solid #999;\n    border-radius: 50%;\n  }\n  .play span p{display: block;width: 4px;height: 4px;background: #000;margin: -2px 0 0 50%;border-radius: 50%;opacity: 0.5;}\n  .play span .p2{margin: 50% 0 0 -2px;}\n  .play span{\n    animation: wave 5s linear infinite\n  }\n  .play>span:nth-child(3){\n    /* 延迟时间 */\n    animation-delay:1s;\n  }\n  .play>span:nth-child(4){\n    animation-delay:2.2s;\n  }\n  .play>span:nth-child(5){\n    animation-delay:3.8s;\n  }\n\n  @keyframes wave {\n    0%\n    {\n      transform:scale(1) rotate(360deg);\n      opacity: 0.8;\n    }\n  100%\n    {\n      transform:scale(1.8) rotate(0deg);\n      opacity: 0;\n    }\n  }\n\n\n  .elasticity{\n    animation: elasticity 1s linear 2s infinite\n  }\n\n  @keyframes elasticity{\n    0%{\n      transform: scale(0);\n    }\n    60%{\n      transform: scale(1.1);\n    }\n    90%{\n      transform: scale(1);\n    }\n  }\n\n  .elasticity2{\n    animation: elasticity2 1s cubic-bezier(.39,.62,.74,1.39) 2s infinite\n  }\n  @keyframes elasticity2{\n    0%{\n      transform: scale(0);\n    }\n    90%{\n      transform: scale(1);\n    }\n  }\n</style>\n\n\n\n\n\n# 方法二：\n\n嵌入codepen\n\n<iframe height=\"400\" style=\"width: 100%;\" scrolling=\"no\" title=\"【css：行为】使用:hover和attr()定制悬浮提示\" src=\"https://codepen.io/xugaoyi/embed/vynknaq?height=400&theme-id=light&default-tab=css,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" loading=\"lazy\">\n  see the pen <a href='https://codepen.io/xugaoyi/pen/vynknaq'>【css：行为】使用:hover和attr()定制悬浮提示</a> by xugaoyi\n  (<a href='https://codepen.io/xugaoyi'>@xugaoyi</a>) on <a href='https://codepen.io'>codepen</a>.\n</iframe>\n\n\nsee the pen 【css：行为】使用:hover和attr()定制悬浮提示 by xugaoyi (@xugaoyi) on codepen.\n\n笔记\n\n<iframe>标签还可以嵌入其他任何外部网页，如视频、地图等",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "添加摘要",
      "frontmatter": {
        "title": "添加摘要",
        "date": "2020-05-13T11:47:49.000Z",
        "permalink": "/pages/1cc523",
        "article": false
      },
      "regularPath": "/02.%E9%85%8D%E7%BD%AE/01.%E9%85%8D%E7%BD%AE/05.%E6%B7%BB%E5%8A%A0%E6%91%98%E8%A6%81.html",
      "relativePath": "02.配置/01.配置/05.添加摘要.md",
      "key": "v-cd132d3e",
      "path": "/pages/1cc523/",
      "excerpt": "<p>文章摘要会显示于首页的详细版文章列表中，在编写文章时（<code>.md</code>文件中）在合适的位置添加一个`</p>\n",
      "headersStr": null,
      "content": "文章摘要会显示于首页的详细版文章列表中，在编写文章时（.md文件中）在合适的位置添加一个<!-- more -->注释。注释前面的内容将会暴露在摘要中。\n\n示例：\n\n# 如何根据系统主题自动响应CSS深色模式\n\n![Dark](https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200427163531.jpg)\n\n很多人喜欢选择APP或网站中的深色模式，也许他们更喜欢这样的外观，或者他们想让自己的眼睛免受疲劳。这篇文章将告诉你如何在网站中实现一个自动的CSS深色模式，根据访客的系统主题来自动响应。\n\n<!-- more -->\n\n## CSS 深色模式 (Dark Mode)\n\n...\n\n\n\n如示例的内容，在<!-- more -->注释前面的除了标题之外所有内容将显示到摘要中。摘要在文章列表的显示效果如下：\n\n\n\n\n\n值得注意的是摘要的内容也是文章内容的一部分，会显示在文章详情页中。",
      "normalizedContent": "文章摘要会显示于首页的详细版文章列表中，在编写文章时（.md文件中）在合适的位置添加一个<!-- more -->注释。注释前面的内容将会暴露在摘要中。\n\n示例：\n\n# 如何根据系统主题自动响应css深色模式\n\n![dark](https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200427163531.jpg)\n\n很多人喜欢选择app或网站中的深色模式，也许他们更喜欢这样的外观，或者他们想让自己的眼睛免受疲劳。这篇文章将告诉你如何在网站中实现一个自动的css深色模式，根据访客的系统主题来自动响应。\n\n<!-- more -->\n\n## css 深色模式 (dark mode)\n\n...\n\n\n\n如示例的内容，在<!-- more -->注释前面的除了标题之外所有内容将显示到摘要中。摘要在文章列表的显示效果如下：\n\n\n\n\n\n值得注意的是摘要的内容也是文章内容的一部分，会显示在文章详情页中。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "修改主题颜色和样式",
      "frontmatter": {
        "title": "修改主题颜色和样式",
        "date": "2020-05-13T11:48:50.000Z",
        "permalink": "/pages/f51918",
        "article": false
      },
      "regularPath": "/02.%E9%85%8D%E7%BD%AE/01.%E9%85%8D%E7%BD%AE/06.%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2%E5%92%8C%E6%A0%B7%E5%BC%8F.html",
      "relativePath": "02.配置/01.配置/06.修改主题颜色和样式.md",
      "key": "v-463039cb",
      "path": "/pages/f51918/",
      "headers": [
        {
          "level": 2,
          "title": "主题样式变量",
          "slug": "主题样式变量",
          "normalizedTitle": "主题样式变量",
          "charIndex": 2
        },
        {
          "level": 2,
          "title": "样式修改与适配",
          "slug": "样式修改与适配",
          "normalizedTitle": "样式修改与适配",
          "charIndex": 1417
        }
      ],
      "headersStr": "主题样式变量 样式修改与适配",
      "content": "# 主题样式变量\n\n下面是vdoing主题使用的css变量，你可以在.vuepress/styles/palette.styl修改这些变量覆盖它们：\n\n//***vdoing主题-CSS变量***//\n\n// 颜色\n$bannerTextColor = #fff // 首页banner区(博客标题区)的文本颜色\n$accentColor = #11A8CD\n$activeColor = #ff5722\n$arrowBgColor = #ccc\n\n// 布局\n$navbarHeight = 3.6rem\n$sidebarWidth = 18rem\n$contentWidth = 860px\n$homePageWidth = 1100px\n$rightMenuWidth = 230px // 右侧菜单\n\n// 代码块\n$lineNumbersWrapperWidth = 2.5rem\n\n// 浅色模式\n.theme-mode-light\n  --bodyBg: #f4f4f4\n  --mainBg: rgba(255,255,255,1)\n  --sidebarBg: rgba(255,255,255,.8)\n  --blurBg: rgba(255,255,255,.9)\n  --textColor: #004050\n  --textLightenColor: #0085AD\n  --borderColor: rgba(0,0,0,.15)\n  // 代码块浅色主题\n  --codeBg: #f6f6f6\n  --codeColor: #525252\n  codeThemeLight()\n  // 代码块深色主题\n  // --codeBg: #252526\n  // --codeColor: #fff\n  // codeThemeDark()\n\n// 深色模式\n.theme-mode-dark\n  --bodyBg: rgb(39,39,43)\n  --mainBg: rgba(30,30,34,1)\n  --sidebarBg: rgba(30,30,34,.8)\n  --blurBg: rgba(30,30,34,.8)\n  --textColor: rgb(140,140,150)\n  --textLightenColor: #0085AD\n  --borderColor: #2C2C3A\n  --codeBg: #252526\n  --codeColor: #fff\n  codeThemeDark()\n\n// 阅读模式\n.theme-mode-read\n  --bodyBg: rgb(240,240,208)\n  --mainBg: rgba(245,245,213,1)\n  --sidebarBg: rgba(245,245,213,.8)\n  --blurBg: rgba(245,245,213,.9)\n  --textColor: #004050\n  --textLightenColor: #0085AD\n  --borderColor: rgba(0,0,0,.15)\n  --codeBg: #282c34\n  --codeColor: #fff\n  codeThemeDark()\n\n\n上面的变量值可能不是最新的，最新的变量值可查看：palette.styl\n\n\n# 样式修改与适配\n\n当你想修改主题某个地方的样式时，或者你在给博客添加了一些新的模块或插件，发现样式和主题的样式不协调时，都可以在.vuepress/styles/index.styl 添加css样式来做修改。 需要注意的是，你在自己写的css样式中，请尽量使用主题提供的变量来进行适配。\n\n> 小技巧：当你发现自己写的css样式优先级没有原来的样式高时，可以在样式后面添加!improtant后缀，使你的样式优先级是最高的。",
      "normalizedContent": "# 主题样式变量\n\n下面是vdoing主题使用的css变量，你可以在.vuepress/styles/palette.styl修改这些变量覆盖它们：\n\n//***vdoing主题-css变量***//\n\n// 颜色\n$bannertextcolor = #fff // 首页banner区(博客标题区)的文本颜色\n$accentcolor = #11a8cd\n$activecolor = #ff5722\n$arrowbgcolor = #ccc\n\n// 布局\n$navbarheight = 3.6rem\n$sidebarwidth = 18rem\n$contentwidth = 860px\n$homepagewidth = 1100px\n$rightmenuwidth = 230px // 右侧菜单\n\n// 代码块\n$linenumberswrapperwidth = 2.5rem\n\n// 浅色模式\n.theme-mode-light\n  --bodybg: #f4f4f4\n  --mainbg: rgba(255,255,255,1)\n  --sidebarbg: rgba(255,255,255,.8)\n  --blurbg: rgba(255,255,255,.9)\n  --textcolor: #004050\n  --textlightencolor: #0085ad\n  --bordercolor: rgba(0,0,0,.15)\n  // 代码块浅色主题\n  --codebg: #f6f6f6\n  --codecolor: #525252\n  codethemelight()\n  // 代码块深色主题\n  // --codebg: #252526\n  // --codecolor: #fff\n  // codethemedark()\n\n// 深色模式\n.theme-mode-dark\n  --bodybg: rgb(39,39,43)\n  --mainbg: rgba(30,30,34,1)\n  --sidebarbg: rgba(30,30,34,.8)\n  --blurbg: rgba(30,30,34,.8)\n  --textcolor: rgb(140,140,150)\n  --textlightencolor: #0085ad\n  --bordercolor: #2c2c3a\n  --codebg: #252526\n  --codecolor: #fff\n  codethemedark()\n\n// 阅读模式\n.theme-mode-read\n  --bodybg: rgb(240,240,208)\n  --mainbg: rgba(245,245,213,1)\n  --sidebarbg: rgba(245,245,213,.8)\n  --blurbg: rgba(245,245,213,.9)\n  --textcolor: #004050\n  --textlightencolor: #0085ad\n  --bordercolor: rgba(0,0,0,.15)\n  --codebg: #282c34\n  --codecolor: #fff\n  codethemedark()\n\n\n上面的变量值可能不是最新的，最新的变量值可查看：palette.styl\n\n\n# 样式修改与适配\n\n当你想修改主题某个地方的样式时，或者你在给博客添加了一些新的模块或插件，发现样式和主题的样式不协调时，都可以在.vuepress/styles/index.styl 添加css样式来做修改。 需要注意的是，你在自己写的css样式中，请尽量使用主题提供的变量来进行适配。\n\n> 小技巧：当你发现自己写的css样式优先级没有原来的样式高时，可以在样式后面添加!improtant后缀，使你的样式优先级是最高的。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "目录页配置",
      "frontmatter": {
        "title": "目录页配置",
        "date": "2020-05-13T10:58:07.000Z",
        "permalink": "/pages/54651a",
        "article": false
      },
      "regularPath": "/02.%E9%85%8D%E7%BD%AE/01.%E9%85%8D%E7%BD%AE/04.%E7%9B%AE%E5%BD%95%E9%A1%B5%E9%85%8D%E7%BD%AE.html",
      "relativePath": "02.配置/01.配置/04.目录页配置.md",
      "key": "v-5c377227",
      "path": "/pages/54651a/",
      "headers": [
        {
          "level": 2,
          "title": "目录页说明",
          "slug": "目录页说明",
          "normalizedTitle": "目录页说明",
          "charIndex": 2
        },
        {
          "level": 2,
          "title": "配置项",
          "slug": "配置项",
          "normalizedTitle": "配置项",
          "charIndex": 911
        },
        {
          "level": 3,
          "title": "pageComponent.name",
          "slug": "pagecomponent-name",
          "normalizedTitle": "pagecomponent.name",
          "charIndex": 919
        },
        {
          "level": 3,
          "title": "pageComponent.data",
          "slug": "pagecomponent-data",
          "normalizedTitle": "pagecomponent.data",
          "charIndex": 979
        },
        {
          "level": 3,
          "title": "pageComponent.data.path",
          "slug": "pagecomponent-data-path",
          "normalizedTitle": "pagecomponent.data.path",
          "charIndex": 1016
        },
        {
          "level": 3,
          "title": "pageComponent.data.imgUrl",
          "slug": "pagecomponent-data-imgurl",
          "normalizedTitle": "pagecomponent.data.imgurl",
          "charIndex": 1186
        },
        {
          "level": 3,
          "title": "pageComponent.data.description",
          "slug": "pagecomponent-data-description",
          "normalizedTitle": "pagecomponent.data.description",
          "charIndex": 1268
        },
        {
          "level": 2,
          "title": "如何在导航栏中添加目录页链接",
          "slug": "如何在导航栏中添加目录页链接",
          "normalizedTitle": "如何在导航栏中添加目录页链接",
          "charIndex": 1348
        }
      ],
      "headersStr": "目录页说明 配置项 pageComponent.name pageComponent.data pageComponent.data.path pageComponent.data.imgUrl pageComponent.data.description 如何在导航栏中添加目录页链接",
      "content": "# 目录页说明\n\n注意\n\n目录页数据需要依赖于结构化的侧边栏数据，就是说你需要在config.js配置 sidebar: 'structuring' 或 sidebar: { mode: 'structuring', collapsable: false} 才能实现目录页数据的获取。\n\n>  * 目录页文件(.md文件)可以放置在二级目录、三级目录和四级目录。（级别说明）\n>  * 如果你不想在侧边栏显示目录页，你可以在一级目录中单独创建一个文件夹放置你的目录页(.md文件)，并在front matter中设置sidebar: false。\n>  * 如果你想让目录页和其他页面一起出现在侧边栏，你可以和其他页面共同放置在相应的文件夹。(不要设置sidebar: false)\n>  * 参照下面的示例配置好front matter，然后就可以在导航栏或首页添加目录页链接了。\n\n示例：\n\n---\npageComponent: # 使用页面组件\n  name: Catalogue # 组件名：Catalogue => 目录页组件\n  data: # 组件所需数据\n    path:  01.学习笔记/01.前端 # 设置为`docs/`下面的某个文件夹相对路径，如‘01.学习笔记/01.前端’ 或 ’01.学习笔记‘ (有序号的要带序号)\n    imgUrl: /img/web.png # 目录页内的图片\n    description: JavaScript、ES6、Vue框架等前端技术 # 目录描述（可加入a标签）\n\ntitle: 前端 # 页面标题\ndate: 2020-01-12 11:51:53 # 创建日期\npermalink: /note/javascript # 永久链接\nsidebar: false # 不显示侧边栏\narticle: false # 不是文章页 (不显示面包屑栏、最近更新栏等)\ncomment: false # 不显示评论栏\neditLink: false # 不显示编辑按钮\n---\n\n\n提示\n\n配置好目录页之后，点击文章页的面包屑将会跳转到目录页。\n\n\n# 配置项\n\n\n# pageComponent.name\n\n * 组件名，必需\n * 使用目录页时 必须 设置为Catalogue\n\n\n# pageComponent.data\n\n * 组件所需数据，必需\n\n\n# pageComponent.data.path\n\n * 要为其生成目录页的文件夹的相对路径，必需\n * 必须是在docs目录底下的文件夹相对路径\n * 示例：01.学习笔记或01.学习笔记/01.前端(有序号的要带序号)\n\n注意\n\n在v1.8.2版本之前，没有path属性，使用key代替。但key只支持指定一级目录的文件夹名称。\n\n\n# pageComponent.data.imgUrl\n\n * 目录页内的图片，可选。(v1.9.4之前必填)\n * 图片尺寸在页面中显示为80px*80px\n\n\n# pageComponent.data.description\n\n * 目录描述，必需\n * 可加a标签（如需加入a标签时，标签内部的引号请使用单引号）\n\n\n# 如何在导航栏中添加目录页链接\n\n // config.js\nmodule.exports = {\n    themeConfig: {\n        nav:  [\n            // 没有二级导航时可以直接添加\n           {text: '目录页', link: '/web/'},\n\n          // 有二级导航时\n           {text: '页面',\n               link: '/ui/',   //目录页， vdoing主题新增的配置项，有二级导航时，可以点击一级导航跳到目录页\n               items: [\n                 {text: 'HTML', link: '/pages/11/'},\n                 {text: 'CSS', link: '/pages/22/'},\n               ]\n            },\n       ]\n    }\n}\n\n\n参考：.vuepress/config/nav.js",
      "normalizedContent": "# 目录页说明\n\n注意\n\n目录页数据需要依赖于结构化的侧边栏数据，就是说你需要在config.js配置 sidebar: 'structuring' 或 sidebar: { mode: 'structuring', collapsable: false} 才能实现目录页数据的获取。\n\n>  * 目录页文件(.md文件)可以放置在二级目录、三级目录和四级目录。（级别说明）\n>  * 如果你不想在侧边栏显示目录页，你可以在一级目录中单独创建一个文件夹放置你的目录页(.md文件)，并在front matter中设置sidebar: false。\n>  * 如果你想让目录页和其他页面一起出现在侧边栏，你可以和其他页面共同放置在相应的文件夹。(不要设置sidebar: false)\n>  * 参照下面的示例配置好front matter，然后就可以在导航栏或首页添加目录页链接了。\n\n示例：\n\n---\npagecomponent: # 使用页面组件\n  name: catalogue # 组件名：catalogue => 目录页组件\n  data: # 组件所需数据\n    path:  01.学习笔记/01.前端 # 设置为`docs/`下面的某个文件夹相对路径，如‘01.学习笔记/01.前端’ 或 ’01.学习笔记‘ (有序号的要带序号)\n    imgurl: /img/web.png # 目录页内的图片\n    description: javascript、es6、vue框架等前端技术 # 目录描述（可加入a标签）\n\ntitle: 前端 # 页面标题\ndate: 2020-01-12 11:51:53 # 创建日期\npermalink: /note/javascript # 永久链接\nsidebar: false # 不显示侧边栏\narticle: false # 不是文章页 (不显示面包屑栏、最近更新栏等)\ncomment: false # 不显示评论栏\neditlink: false # 不显示编辑按钮\n---\n\n\n提示\n\n配置好目录页之后，点击文章页的面包屑将会跳转到目录页。\n\n\n# 配置项\n\n\n# pagecomponent.name\n\n * 组件名，必需\n * 使用目录页时 必须 设置为catalogue\n\n\n# pagecomponent.data\n\n * 组件所需数据，必需\n\n\n# pagecomponent.data.path\n\n * 要为其生成目录页的文件夹的相对路径，必需\n * 必须是在docs目录底下的文件夹相对路径\n * 示例：01.学习笔记或01.学习笔记/01.前端(有序号的要带序号)\n\n注意\n\n在v1.8.2版本之前，没有path属性，使用key代替。但key只支持指定一级目录的文件夹名称。\n\n\n# pagecomponent.data.imgurl\n\n * 目录页内的图片，可选。(v1.9.4之前必填)\n * 图片尺寸在页面中显示为80px*80px\n\n\n# pagecomponent.data.description\n\n * 目录描述，必需\n * 可加a标签（如需加入a标签时，标签内部的引号请使用单引号）\n\n\n# 如何在导航栏中添加目录页链接\n\n // config.js\nmodule.exports = {\n    themeconfig: {\n        nav:  [\n            // 没有二级导航时可以直接添加\n           {text: '目录页', link: '/web/'},\n\n          // 有二级导航时\n           {text: '页面',\n               link: '/ui/',   //目录页， vdoing主题新增的配置项，有二级导航时，可以点击一级导航跳到目录页\n               items: [\n                 {text: 'html', link: '/pages/11/'},\n                 {text: 'css', link: '/pages/22/'},\n               ]\n            },\n       ]\n    }\n}\n\n\n参考：.vuepress/config/nav.js",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "Markdown 容器",
      "frontmatter": {
        "title": "Markdown 容器",
        "date": "2020-05-29T11:16:18.000Z",
        "permalink": "/pages/d0d7eb/",
        "article": false
      },
      "regularPath": "/01.%E6%8C%87%E5%8D%97/01.%E6%8C%87%E5%8D%97/07.Markdown%20%E5%AE%B9%E5%99%A8.html",
      "relativePath": "01.指南/01.指南/07.Markdown 容器.md",
      "key": "v-d2dd1ac0",
      "path": "/pages/d0d7eb/",
      "headers": [
        {
          "level": 2,
          "title": "信息框容器",
          "slug": "信息框容器",
          "normalizedTitle": "信息框容器",
          "charIndex": 92
        },
        {
          "level": 2,
          "title": "布局容器",
          "slug": "布局容器",
          "normalizedTitle": "布局容器",
          "charIndex": 357
        },
        {
          "level": 3,
          "title": "我是居中的内容",
          "slug": "我是居中的内容",
          "normalizedTitle": "我是居中的内容",
          "charIndex": 384
        },
        {
          "level": 2,
          "title": "普通卡片列表",
          "slug": "普通卡片列表",
          "normalizedTitle": "普通卡片列表",
          "charIndex": 979
        },
        {
          "level": 3,
          "title": "语法",
          "slug": "语法",
          "normalizedTitle": "语法",
          "charIndex": 23
        },
        {
          "level": 2,
          "title": "图文卡片列表",
          "slug": "图文卡片列表",
          "normalizedTitle": "图文卡片列表",
          "charIndex": 3501
        },
        {
          "level": 3,
          "title": "语法",
          "slug": "语法-2",
          "normalizedTitle": "语法",
          "charIndex": 23
        },
        {
          "level": 2,
          "title": "增强配置",
          "slug": "增强配置",
          "normalizedTitle": "增强配置",
          "charIndex": 5725
        },
        {
          "level": 3,
          "title": "1. 普通卡片和图文卡片容器",
          "slug": "_1-普通卡片和图文卡片容器",
          "normalizedTitle": "1. 普通卡片和图文卡片容器",
          "charIndex": 5778
        },
        {
          "level": 4,
          "title": "target",
          "slug": "target",
          "normalizedTitle": "target",
          "charIndex": 5796
        },
        {
          "level": 3,
          "title": "2. 图文卡片容器",
          "slug": "_2-图文卡片容器",
          "normalizedTitle": "2. 图文卡片容器",
          "charIndex": 5870
        },
        {
          "level": 4,
          "title": "imgHeight",
          "slug": "imgheight",
          "normalizedTitle": "imgheight",
          "charIndex": 5883
        },
        {
          "level": 4,
          "title": "objectFit",
          "slug": "objectfit",
          "normalizedTitle": "objectfit",
          "charIndex": 5928
        },
        {
          "level": 4,
          "title": "lineClamp",
          "slug": "lineclamp",
          "normalizedTitle": "lineclamp",
          "charIndex": 6113
        },
        {
          "level": 3,
          "title": "3. 配置示例：",
          "slug": "_3-配置示例",
          "normalizedTitle": "3. 配置示例：",
          "charIndex": 6152
        }
      ],
      "headersStr": "信息框容器 布局容器 我是居中的内容 普通卡片列表 语法 图文卡片列表 语法 增强配置 1. 普通卡片和图文卡片容器 target 2. 图文卡片容器 imgHeight objectFit lineClamp 3. 配置示例：",
      "content": "Markdown 容器是对 Markdown 语法的一个扩展，使用简单的语法就可以在页面中呈现丰富的效果。\n\n除了原默认主题自带的容器外，本主题还新增了一些好用的自定义容器。\n\n\n# 信息框容器\n\n输入\n\n::: tip\n这是一条提示\n:::\n\n::: warning\n这是一条注意\n:::\n\n::: danger\n这是一条警告\n:::\n\n::: note\n这是笔记容器，在 <Badge text=\"v1.5.0 +\" /> 版本才支持哦~\n:::\n\n\n输出\n\n提示\n\n这是一条提示\n\n注意\n\n这是一条注意\n\n警告\n\n这是一条警告\n\n笔记\n\n这是笔记容器，在 以上版本才支持哦~\n\n以上容器均可自定义标题，如：\n\n::: tip 我的提示\n自定义标题的提示框\n:::\n\n\n我的提示\n\n自定义标题的提示框\n\n\n# 布局容器\n\n输入\n\n::: center\n  ### 我是居中的内容\n  （可用于标题、图片等的居中）\n:::\n\n::: right\n  [我是右浮动的内容](https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E8%BF%90%E5%8A%A8%E5%AE%9A%E5%BE%8B)\n:::\n\n::: details\n这是一个详情块，在 IE / Edge 中不生效\n```js\nconsole.log('这是一个详情块')\n```\n:::\n\n::: theorem 牛顿第一定律\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n::: right\n来自 [维基百科](https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E8%BF%90%E5%8A%A8%E5%AE%9A%E5%BE%8B)\n:::\n\n\n输出\n\n\n# 我是居中的内容\n\n（可用于标题、图片等的居中）\n\n我是右浮动的内容\n\n点击查看\n\n这是一个详情块，在 IE / Edge 中不生效\n\nconsole.log('这是一个详情块')\n\n\n牛顿第一定律\n\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n\n来自 维基百科\n\n> 注意：right、details、theorem这三个容器在v1.3.0 +版本才支持。center容器在v1.3.3 +版本才支持。\n\n\n# 普通卡片列表\n\n普通卡片列表容器，可用于友情链接、项目推荐、诗词展示等。\n\n先来看看效果：\n\n输出\n\n麋鹿鲁哟\n\n大道至简，知易行难\n\nXAOXUU\n\n#IOS #Volantis主题作者\n\n平凡的你我\n\n理想成为大牛的小陈同学\n\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgColor: '#CBEAFA' # 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号\n  textColor: '#6854A1' # 可选，默认var(--textColor)\n- name: XAOXUU\n  desc: '#IOS #Volantis主题作者'\n  avatar: https://jsd.cdn.zzko.cn/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgColor: '#718971'\n  textColor: '#fff'\n- name: 平凡的你我\n  desc: 理想成为大牛的小陈同学\n  avatar: https://reinness.com/avatar.png\n  link: https://reinness.com\n  bgColor: '#FCDBA0'\n  textColor: '#A05F2C'\n\n\n上面效果在Markdown中的代码是这样的：\n\n输入\n\n::: cardList\n```yaml\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgColor: '#CBEAFA' # 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号\n  textColor: '#6854A1' # 可选，默认var(--textColor)\n- name: XAOXUU\n  desc: '#IOS #Volantis主题作者'\n  avatar: https://jsd.cdn.zzko.cn/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgColor: '#718971'\n  textColor: '#fff'\n- name: 平凡的你我\n  desc: 理想成为大牛的小陈同学\n  avatar: https://reinness.com/avatar.png\n  link: https://reinness.com\n  bgColor: '#FCDBA0'\n  textColor: '#A05F2C'\n```\n:::\n\n\n\n# 语法\n\n::: cardList <每行显示数量>\n``` yaml\n- name: 名称\n  desc: 描述\n  avatar: https://xxx.jpg # 头像，可选\n  link: https://xxx/ # 链接，可选\n  bgColor: '#CBEAFA' # 背景色，可选，默认var(--bodyBg)。颜色值有#号时请添加引号\n  textColor: '#6854A1' # 文本色，可选，默认var(--textColor)\n```\n:::\n\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为yaml\n * 代码块内是一个yaml格式的数组列表\n * 数组成员的属性有：\n   * name名称\n   * desc描述\n   * avatar头像，可选\n   * link链接，可选\n   * bgColor背景色，可选，默认var(--bodyBg)。颜色值有#号时请添加引号\n   * textColor文本色，可选，默认var(--textColor)\n\n下面再来看另外一个示例：\n\n输入\n\n::: cardList 2\n```yaml\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgColor: '#F0DFB1'\n  textColor: '#242A38'\n- name: Vdoing\n  desc: 🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgColor: '#DFEEE7'\n  textColor: '#2A3344'\n```\n:::\n\n\n输出\n\n《静夜思》\n\n床前明月光，疑是地上霜。举头望明月，低头思故乡。\n\nVdoing\n\n🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgColor: '#F0DFB1'\n  textColor: '#242A38'\n- name: Vdoing\n  desc: 🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgColor: '#DFEEE7'\n  textColor: '#2A3344'\n\n\n\n# 图文卡片列表\n\n图文卡片列表容器，可用于项目展示、产品展示等。\n\n先看效果：\n\n输出\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nEvan Xu\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nEvan Xu\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nEvan Xu\n\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: Evan Xu # 作者，可选\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像，可选\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Evan Xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Evan Xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n\n\n输入\n\n::: cardImgList\n```yaml\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: Evan Xu # 作者，可选\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像，可选\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Evan Xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Evan Xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n```\n:::\n\n\n\n# 语法\n\n::: cardImgList <每行显示数量>\n``` yaml\n- img: https://xxx.jpg # 图片地址\n  link: https://xxx.com # 链接地址\n  name: 标题\n  desc: 描述 # 可选\n  author: 作者名称 # 可选\n  avatar: https://xxx.jpg # 作者头像，可选\n```\n:::\n\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为yaml\n * 代码块内是一个yaml格式的数组列表\n * 数组成员的属性有：\n   * img图片地址\n   * link链接地址\n   * name标题\n   * desc描述，可选\n   * author作者名称，可选\n   * avatar作者头像，可选\n\n\n# 增强配置\n\n为了适应更多需求场景，v1.9.0+版本的普通卡片和图文卡片容器添加了一些新的配置：\n\n\n# 1. 普通卡片和图文卡片容器\n\n# target\n\n * 链接的打开方式，默认_blank\n   \n   * _self 当前页面\n   \n   * _blank 新窗口打开\n\n\n# 2. 图文卡片容器\n\n# imgHeight\n\n * 设置图片高度，默认 auto\n   \n   * 带单位\n\n# objectFit\n\n * 设置图片的填充方式(object-fit)，默认 cover\n   \n   * fill 拉伸 (会改变宽高比)\n   * contain 缩放 (保持宽高比，会留空)\n   * cover 填充 (会裁剪)\n   * none 保持原有尺寸 (会留空或裁剪)\n   * scale-down 保证显示完整图片 (保持宽高比，会留空)\n\n# lineClamp\n\n * 描述文本超出多少行显示省略号，默认1\n\n\n\n\n# 3. 配置示例：\n\n::: cardImgList\n``` yaml\nconfig:\n    target: _blank\n    imgHeight: auto\n    objectFit: cover\n    lineClamp: 1\n\ndata:\n  - img: https://xxx.jpg\n    link: https://xugaoyi.com/\n    name: 标题\n    desc: 描述内容\n    author: Evan Xu\n    avatar: https://xxx.jpg\n```\n:::\n",
      "normalizedContent": "markdown 容器是对 markdown 语法的一个扩展，使用简单的语法就可以在页面中呈现丰富的效果。\n\n除了原默认主题自带的容器外，本主题还新增了一些好用的自定义容器。\n\n\n# 信息框容器\n\n输入\n\n::: tip\n这是一条提示\n:::\n\n::: warning\n这是一条注意\n:::\n\n::: danger\n这是一条警告\n:::\n\n::: note\n这是笔记容器，在 <badge text=\"v1.5.0 +\" /> 版本才支持哦~\n:::\n\n\n输出\n\n提示\n\n这是一条提示\n\n注意\n\n这是一条注意\n\n警告\n\n这是一条警告\n\n笔记\n\n这是笔记容器，在 以上版本才支持哦~\n\n以上容器均可自定义标题，如：\n\n::: tip 我的提示\n自定义标题的提示框\n:::\n\n\n我的提示\n\n自定义标题的提示框\n\n\n# 布局容器\n\n输入\n\n::: center\n  ### 我是居中的内容\n  （可用于标题、图片等的居中）\n:::\n\n::: right\n  [我是右浮动的内容](https://zh.wikipedia.org/wiki/%e7%89%9b%e9%a1%bf%e8%bf%90%e5%8a%a8%e5%ae%9a%e5%be%8b)\n:::\n\n::: details\n这是一个详情块，在 ie / edge 中不生效\n```js\nconsole.log('这是一个详情块')\n```\n:::\n\n::: theorem 牛顿第一定律\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n::: right\n来自 [维基百科](https://zh.wikipedia.org/wiki/%e7%89%9b%e9%a1%bf%e8%bf%90%e5%8a%a8%e5%ae%9a%e5%be%8b)\n:::\n\n\n输出\n\n\n# 我是居中的内容\n\n（可用于标题、图片等的居中）\n\n我是右浮动的内容\n\n点击查看\n\n这是一个详情块，在 ie / edge 中不生效\n\nconsole.log('这是一个详情块')\n\n\n牛顿第一定律\n\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n\n来自 维基百科\n\n> 注意：right、details、theorem这三个容器在v1.3.0 +版本才支持。center容器在v1.3.3 +版本才支持。\n\n\n# 普通卡片列表\n\n普通卡片列表容器，可用于友情链接、项目推荐、诗词展示等。\n\n先来看看效果：\n\n输出\n\n麋鹿鲁哟\n\n大道至简，知易行难\n\nxaoxuu\n\n#ios #volantis主题作者\n\n平凡的你我\n\n理想成为大牛的小陈同学\n\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgcolor: '#cbeafa' # 可选，默认var(--bodybg)。颜色值有#号时请添加单引号\n  textcolor: '#6854a1' # 可选，默认var(--textcolor)\n- name: xaoxuu\n  desc: '#ios #volantis主题作者'\n  avatar: https://jsd.cdn.zzko.cn/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgcolor: '#718971'\n  textcolor: '#fff'\n- name: 平凡的你我\n  desc: 理想成为大牛的小陈同学\n  avatar: https://reinness.com/avatar.png\n  link: https://reinness.com\n  bgcolor: '#fcdba0'\n  textcolor: '#a05f2c'\n\n\n上面效果在markdown中的代码是这样的：\n\n输入\n\n::: cardlist\n```yaml\n- name: 麋鹿鲁哟\n  desc: 大道至简，知易行难\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg # 可选\n  link: https://www.cnblogs.com/miluluyo/ # 可选\n  bgcolor: '#cbeafa' # 可选，默认var(--bodybg)。颜色值有#号时请添加单引号\n  textcolor: '#6854a1' # 可选，默认var(--textcolor)\n- name: xaoxuu\n  desc: '#ios #volantis主题作者'\n  avatar: https://jsd.cdn.zzko.cn/gh/xaoxuu/assets@master/avatar/avatar.png\n  link: https://xaoxuu.com\n  bgcolor: '#718971'\n  textcolor: '#fff'\n- name: 平凡的你我\n  desc: 理想成为大牛的小陈同学\n  avatar: https://reinness.com/avatar.png\n  link: https://reinness.com\n  bgcolor: '#fcdba0'\n  textcolor: '#a05f2c'\n```\n:::\n\n\n\n# 语法\n\n::: cardlist <每行显示数量>\n``` yaml\n- name: 名称\n  desc: 描述\n  avatar: https://xxx.jpg # 头像，可选\n  link: https://xxx/ # 链接，可选\n  bgcolor: '#cbeafa' # 背景色，可选，默认var(--bodybg)。颜色值有#号时请添加引号\n  textcolor: '#6854a1' # 文本色，可选，默认var(--textcolor)\n```\n:::\n\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为yaml\n * 代码块内是一个yaml格式的数组列表\n * 数组成员的属性有：\n   * name名称\n   * desc描述\n   * avatar头像，可选\n   * link链接，可选\n   * bgcolor背景色，可选，默认var(--bodybg)。颜色值有#号时请添加引号\n   * textcolor文本色，可选，默认var(--textcolor)\n\n下面再来看另外一个示例：\n\n输入\n\n::: cardlist 2\n```yaml\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgcolor: '#f0dfb1'\n  textcolor: '#242a38'\n- name: vdoing\n  desc: 🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgcolor: '#dfeee7'\n  textcolor: '#2a3344'\n```\n:::\n\n\n输出\n\n《静夜思》\n\n床前明月光，疑是地上霜。举头望明月，低头思故乡。\n\nvdoing\n\n🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgcolor: '#f0dfb1'\n  textcolor: '#242a38'\n- name: vdoing\n  desc: 🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgcolor: '#dfeee7'\n  textcolor: '#2a3344'\n\n\n\n# 图文卡片列表\n\n图文卡片列表容器，可用于项目展示、产品展示等。\n\n先看效果：\n\n输出\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nevan xu\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nevan xu\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nevan xu\n\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: evan xu # 作者，可选\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像，可选\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: evan xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: evan xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n\n\n输入\n\n::: cardimglist\n```yaml\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: evan xu # 作者，可选\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg # 头像，可选\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: evan xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n- img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: evan xu\n  avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n```\n:::\n\n\n\n# 语法\n\n::: cardimglist <每行显示数量>\n``` yaml\n- img: https://xxx.jpg # 图片地址\n  link: https://xxx.com # 链接地址\n  name: 标题\n  desc: 描述 # 可选\n  author: 作者名称 # 可选\n  avatar: https://xxx.jpg # 作者头像，可选\n```\n:::\n\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为yaml\n * 代码块内是一个yaml格式的数组列表\n * 数组成员的属性有：\n   * img图片地址\n   * link链接地址\n   * name标题\n   * desc描述，可选\n   * author作者名称，可选\n   * avatar作者头像，可选\n\n\n# 增强配置\n\n为了适应更多需求场景，v1.9.0+版本的普通卡片和图文卡片容器添加了一些新的配置：\n\n\n# 1. 普通卡片和图文卡片容器\n\n# target\n\n * 链接的打开方式，默认_blank\n   \n   * _self 当前页面\n   \n   * _blank 新窗口打开\n\n\n# 2. 图文卡片容器\n\n# imgheight\n\n * 设置图片高度，默认 auto\n   \n   * 带单位\n\n# objectfit\n\n * 设置图片的填充方式(object-fit)，默认 cover\n   \n   * fill 拉伸 (会改变宽高比)\n   * contain 缩放 (保持宽高比，会留空)\n   * cover 填充 (会裁剪)\n   * none 保持原有尺寸 (会留空或裁剪)\n   * scale-down 保证显示完整图片 (保持宽高比，会留空)\n\n# lineclamp\n\n * 描述文本超出多少行显示省略号，默认1\n\n\n\n\n# 3. 配置示例：\n\n::: cardimglist\n``` yaml\nconfig:\n    target: _blank\n    imgheight: auto\n    objectfit: cover\n    lineclamp: 1\n\ndata:\n  - img: https://xxx.jpg\n    link: https://xugaoyi.com/\n    name: 标题\n    desc: 描述内容\n    author: evan xu\n    avatar: https://xxx.jpg\n```\n:::\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "资源",
      "frontmatter": {
        "title": "资源",
        "date": "2020-05-12T15:10:15.000Z",
        "permalink": "/pages/db78e2",
        "article": false
      },
      "regularPath": "/03.%E8%B5%84%E6%BA%90/01.%E8%B5%84%E6%BA%90.html",
      "relativePath": "03.资源/01.资源.md",
      "key": "v-69633fec",
      "path": "/pages/db78e2/",
      "headers": [
        {
          "level": 2,
          "title": "插件推荐",
          "slug": "插件推荐",
          "normalizedTitle": "插件推荐",
          "charIndex": 2
        },
        {
          "level": 2,
          "title": "社区优秀解决方案",
          "slug": "社区优秀解决方案",
          "normalizedTitle": "社区优秀解决方案",
          "charIndex": 524
        },
        {
          "level": 3,
          "title": "1. 站点信息模块",
          "slug": "_1-站点信息模块",
          "normalizedTitle": "1. 站点信息模块",
          "charIndex": 537
        },
        {
          "level": 3,
          "title": "2. 私密文章功能",
          "slug": "_2-私密文章功能",
          "normalizedTitle": "2. 私密文章功能",
          "charIndex": 597
        },
        {
          "level": 3,
          "title": "3. 首页大图模块",
          "slug": "_3-首页大图模块",
          "normalizedTitle": "3. 首页大图模块",
          "charIndex": 648
        },
        {
          "level": 3,
          "title": "4. 优雅的全文搜索方案",
          "slug": "_4-优雅的全文搜索方案",
          "normalizedTitle": "4. 优雅的全文搜索方案",
          "charIndex": 683
        },
        {
          "level": 2,
          "title": "文章管理和发布",
          "slug": "文章管理和发布",
          "normalizedTitle": "文章管理和发布",
          "charIndex": 700
        },
        {
          "level": 2,
          "title": "图标&配图",
          "slug": "图标-配图",
          "normalizedTitle": "图标&amp;配图",
          "charIndex": null
        },
        {
          "level": 3,
          "title": "静态图标",
          "slug": "静态图标",
          "normalizedTitle": "静态图标",
          "charIndex": 822
        },
        {
          "level": 3,
          "title": "萌系图标",
          "slug": "萌系图标",
          "normalizedTitle": "萌系图标",
          "charIndex": 877
        },
        {
          "level": 3,
          "title": "动态图标",
          "slug": "动态图标",
          "normalizedTitle": "动态图标",
          "charIndex": 915
        },
        {
          "level": 3,
          "title": "插画",
          "slug": "插画",
          "normalizedTitle": "插画",
          "charIndex": 943
        },
        {
          "level": 3,
          "title": "配图",
          "slug": "配图",
          "normalizedTitle": "配图",
          "charIndex": 768
        },
        {
          "level": 3,
          "title": "Logo",
          "slug": "logo",
          "normalizedTitle": "logo",
          "charIndex": 990
        },
        {
          "level": 3,
          "title": "Emoji表情",
          "slug": "emoji表情",
          "normalizedTitle": "emoji表情",
          "charIndex": 1016
        },
        {
          "level": 2,
          "title": "共享资源",
          "slug": "共享资源",
          "normalizedTitle": "共享资源",
          "charIndex": 1113
        }
      ],
      "headersStr": "插件推荐 社区优秀解决方案 1. 站点信息模块 2. 私密文章功能 3. 首页大图模块 4. 优雅的全文搜索方案 文章管理和发布 图标&配图 静态图标 萌系图标 动态图标 插画 配图 Logo Emoji表情 共享资源",
      "content": "# 插件推荐\n\n * vuepress-plugin-fulltext-search 全文搜索\n\n * vuepress-plugin-thirdparty-search 可以添加第三方搜索链接的搜索框\n\n * vuepress-plugin-one-click-copy 代码块一键复制\n\n * vuepress-plugin-comment 评论区\n\n * vuepress-plugin-vssue 评论区（单页）\n\n * vuepress-plugin-vssue-global 评论区（全局）\n\n * vuepress-plugin-smplayer 播放器\n\n * vuepress-plugin-flowchart 流程图\n\n * vuepress-plugin-mathjax 数学公式\n\n * vuepress-plugin-tabs 选项卡\n\n * vuepress-plugin-element-ui Element UI\n\n * 花里胡哨的插件 鼠标点击特效、背景彩带、音乐播放器等花里胡哨的插件\n\n更多插件...\n\n * Awesome VuePress\n\n * 在npm中搜索\"vuepress–plugin\"\n\n\n# 社区优秀解决方案\n\n\n# 1. 站点信息模块\n\n在首页添加站点信息模块，效果：\n\n\n\n在文章页添加文章字数、阅读时间、浏览量，效果：\n\n\n\n\n# 2. 私密文章功能\n\n当大家想要「云端备份」文章到博客时，又不希望别人看到，该功能能满足你。\n\n\n# 3. 首页大图模块\n\n喜欢首页大图模式的朋友可以参考此教程。\n\n\n# 4. 优雅的全文搜索方案\n\n\n# 文章管理和发布\n\n使用 此插件 src-sy-post-publisher 发布思源笔记的文章到Vuepress等平台。\n\n\n# 图标&配图\n\n说明：以下图标非主题内置，你可以选择喜欢的图标右键保存或到图标库下载。更多图标：阿里图标库\n\n\n# 静态图标\n\n编程   服务器   机器学习   计算机网络   面向对象   软件开发   数据结构\n\n\n# 萌系图标\n\n * 猫咪系列\n   \n * 数码宝贝\n * 水果系列\n\n\n# 动态图标\n\n猫1   猫2   猫3   猫4\n\n\n# 插画\n\n免费插画\n2D/3D/手绘插画\n阿里插画库\n\n\n\n# 配图\n\n可画-文章配图\n\n\n# Logo\n\nlogo生成1\nlogo生成2\n\n\n# Emoji表情\n\nEmoji百科\n\n小技巧\n\n在任意输入框快速打开emoji表情方法：\nWindows系统下按Win + .\nMac系统下按Control + Command + 空格\n\n\n# 共享资源\n\n如果您有不错的资源，欢迎在 资源分享区 留言。\n\n",
      "normalizedContent": "# 插件推荐\n\n * vuepress-plugin-fulltext-search 全文搜索\n\n * vuepress-plugin-thirdparty-search 可以添加第三方搜索链接的搜索框\n\n * vuepress-plugin-one-click-copy 代码块一键复制\n\n * vuepress-plugin-comment 评论区\n\n * vuepress-plugin-vssue 评论区（单页）\n\n * vuepress-plugin-vssue-global 评论区（全局）\n\n * vuepress-plugin-smplayer 播放器\n\n * vuepress-plugin-flowchart 流程图\n\n * vuepress-plugin-mathjax 数学公式\n\n * vuepress-plugin-tabs 选项卡\n\n * vuepress-plugin-element-ui element ui\n\n * 花里胡哨的插件 鼠标点击特效、背景彩带、音乐播放器等花里胡哨的插件\n\n更多插件...\n\n * awesome vuepress\n\n * 在npm中搜索\"vuepress–plugin\"\n\n\n# 社区优秀解决方案\n\n\n# 1. 站点信息模块\n\n在首页添加站点信息模块，效果：\n\n\n\n在文章页添加文章字数、阅读时间、浏览量，效果：\n\n\n\n\n# 2. 私密文章功能\n\n当大家想要「云端备份」文章到博客时，又不希望别人看到，该功能能满足你。\n\n\n# 3. 首页大图模块\n\n喜欢首页大图模式的朋友可以参考此教程。\n\n\n# 4. 优雅的全文搜索方案\n\n\n# 文章管理和发布\n\n使用 此插件 src-sy-post-publisher 发布思源笔记的文章到vuepress等平台。\n\n\n# 图标&配图\n\n说明：以下图标非主题内置，你可以选择喜欢的图标右键保存或到图标库下载。更多图标：阿里图标库\n\n\n# 静态图标\n\n编程   服务器   机器学习   计算机网络   面向对象   软件开发   数据结构\n\n\n# 萌系图标\n\n * 猫咪系列\n   \n * 数码宝贝\n * 水果系列\n\n\n# 动态图标\n\n猫1   猫2   猫3   猫4\n\n\n# 插画\n\n免费插画\n2d/3d/手绘插画\n阿里插画库\n\n\n\n# 配图\n\n可画-文章配图\n\n\n# logo\n\nlogo生成1\nlogo生成2\n\n\n# emoji表情\n\nemoji百科\n\n小技巧\n\n在任意输入框快速打开emoji表情方法：\nwindows系统下按win + .\nmac系统下按control + command + 空格\n\n\n# 共享资源\n\n如果您有不错的资源，欢迎在 资源分享区 留言。\n\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "评论栏",
      "frontmatter": {
        "title": "评论栏",
        "date": "2020-05-13T12:00:39.000Z",
        "permalink": "/pages/ce175c",
        "article": false
      },
      "regularPath": "/02.%E9%85%8D%E7%BD%AE/01.%E9%85%8D%E7%BD%AE/07.%E8%AF%84%E8%AE%BA%E6%A0%8F.html",
      "relativePath": "02.配置/01.配置/07.评论栏.md",
      "key": "v-69eb3eb6",
      "path": "/pages/ce175c/",
      "headers": [
        {
          "level": 3,
          "title": "vuepress-plugin-comment",
          "slug": "vuepress-plugin-comment",
          "normalizedTitle": "vuepress-plugin-comment",
          "charIndex": 61
        },
        {
          "level": 3,
          "title": "vuepress-plugin-vssue",
          "slug": "vuepress-plugin-vssue",
          "normalizedTitle": "vuepress-plugin-vssue",
          "charIndex": 117
        },
        {
          "level": 3,
          "title": "vuepress-plugin-vssue-global",
          "slug": "vuepress-plugin-vssue-global",
          "normalizedTitle": "vuepress-plugin-vssue-global",
          "charIndex": 169
        },
        {
          "level": 3,
          "title": "Twikoo",
          "slug": "twikoo",
          "normalizedTitle": "twikoo",
          "charIndex": 235
        }
      ],
      "headersStr": "vuepress-plugin-comment vuepress-plugin-vssue vuepress-plugin-vssue-global Twikoo",
      "content": "评论栏推荐使用vuepress插件的方式来导入，这里推荐一些vuepress的评论插件，使用方法查阅相应的文档。\n\n\n# vuepress-plugin-comment\n\n * vuepress-plugin-comment\n\n\n# vuepress-plugin-vssue\n\n * vuepress-plugin-vssue\n\n\n# vuepress-plugin-vssue-global\n\n * vuepress-plugin-vssue-global\n\n\n# Twikoo\n\n * Twikoo",
      "normalizedContent": "评论栏推荐使用vuepress插件的方式来导入，这里推荐一些vuepress的评论插件，使用方法查阅相应的文档。\n\n\n# vuepress-plugin-comment\n\n * vuepress-plugin-comment\n\n\n# vuepress-plugin-vssue\n\n * vuepress-plugin-vssue\n\n\n# vuepress-plugin-vssue-global\n\n * vuepress-plugin-vssue-global\n\n\n# twikoo\n\n * twikoo",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "问答",
      "frontmatter": {
        "title": "问答",
        "date": "2020-05-25T12:01:52.000Z",
        "permalink": "/pages/9cc27d",
        "article": false
      },
      "regularPath": "/05.%E9%97%AE%E7%AD%94/01.%E9%97%AE%E7%AD%94.html",
      "relativePath": "05.问答/01.问答.md",
      "key": "v-eb988210",
      "path": "/pages/9cc27d/",
      "headers": [
        {
          "level": 2,
          "title": "我是一个小白，想使用这个主题搭建博客（知识库）需要做哪些工作？",
          "slug": "我是一个小白-想使用这个主题搭建博客-知识库-需要做哪些工作",
          "normalizedTitle": "我是一个小白，想使用这个主题搭建博客（知识库）需要做哪些工作？",
          "charIndex": 2
        },
        {
          "level": 2,
          "title": "clone 项目后需要修改哪些地方？",
          "slug": "clone-项目后需要修改哪些地方",
          "normalizedTitle": "clone 项目后需要修改哪些地方？",
          "charIndex": 220
        },
        {
          "level": 2,
          "title": "可减少项目冗余的地方有哪些？",
          "slug": "可减少项目冗余的地方有哪些",
          "normalizedTitle": "可减少项目冗余的地方有哪些？",
          "charIndex": 371
        },
        {
          "level": 2,
          "title": "我可以不使用永久链接吗？",
          "slug": "我可以不使用永久链接吗",
          "normalizedTitle": "我可以不使用永久链接吗？",
          "charIndex": 533
        },
        {
          "level": 2,
          "title": "是否支持国际化？",
          "slug": "是否支持国际化",
          "normalizedTitle": "是否支持国际化？",
          "charIndex": 756
        },
        {
          "level": 2,
          "title": "打包后在本地预览怎么没有样式？",
          "slug": "打包后在本地预览怎么没有样式",
          "normalizedTitle": "打包后在本地预览怎么没有样式？",
          "charIndex": 834
        },
        {
          "level": 2,
          "title": "在build时出现错误，但是在dev时是正常的",
          "slug": "在build时出现错误-但是在dev时是正常的",
          "normalizedTitle": "在build时出现错误，但是在dev时是正常的",
          "charIndex": 974
        }
      ],
      "headersStr": "我是一个小白，想使用这个主题搭建博客（知识库）需要做哪些工作？ clone 项目后需要修改哪些地方？ 可减少项目冗余的地方有哪些？ 我可以不使用永久链接吗？ 是否支持国际化？ 打包后在本地预览怎么没有样式？ 在build时出现错误，但是在dev时是正常的",
      "content": "# 我是一个小白，想使用这个主题搭建博客（知识库）需要做哪些工作？\n\n答：使用这个主题前需要你掌握下面这些知识：\n\n * 掌握 markdown、yaml 语法\n * 会使用终端（命令行），会使用 git\n * 会阅读文档、搜索文档\n * 会VuePress的基本使用和默认主题的基本配置\n\n以上知识都掌握之后，再查看本文档。你也可以运行我的主题项目，一边看代码，一边查看文档。主题项目内写了比较多的注释代码，方便你的学习和使用。\n\n\n# clone 项目后需要修改哪些地方？\n\n答：大致的修改流程是这样的：\n\n 1. 首先让项目正常的跑起来\n 2. 根据需求构建和替换 docs/<结构化目录> 的目录及内容\n 3. 根据需求修改 config.js 配置\n 4. 修改 首页配置\n 5. 修改 主题颜色和样式（如果你想修改的话）\n\n\n# 可减少项目冗余的地方有哪些？\n\n答：在完成项目的搭建之后，对于没有使用到的一些文件和代码，可以看情况删减，可删减的地方有:\n\n * 卸载config.js中未使用的插件依赖包\n * 参照 目录结构，删除未使用到的 可选 文件\n * 删除.vusepress目录内未使用到的 可选 文件\n * 删除各文件内的注释代码\n\n\n# 我可以不使用永久链接吗？\n\n答：不可以。当你没有在front matter指定永久链接时，主题会自动生成永久链接到front matter，你可以修改永久链接的值。 使用永久链接是出于以下几点考虑:\n\n 1. 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n 2. 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n 3. 主题中的目录页需要通过永久链接来访问文章。\n\n\n# 是否支持国际化？\n\n答：暂不支持。目前的国际化方案，只能是使用不同项目来处理，比如：一个项目是中文，一个项目是英文，在导航中添加中英文站点的链接。\n\n\n# 打包后在本地预览怎么没有样式？\n\n答：因vuepress打包后的CSS、JS等资源链接采用绝对路径引入，在本地预览时的引入链接是不正确的，部署到服务器即可正常引入和预览。如果你确实需要本地预览，可以使用vuepress-plugin-serve插件，使用方法看相应文档。\n\n\n# 在build时出现错误，但是在dev时是正常的\n\n答：这种情况多半是因为你在created或beforeCreate生命周期调用了浏览器API的原因导致，详情查看：浏览器的 API 访问限制",
      "normalizedContent": "# 我是一个小白，想使用这个主题搭建博客（知识库）需要做哪些工作？\n\n答：使用这个主题前需要你掌握下面这些知识：\n\n * 掌握 markdown、yaml 语法\n * 会使用终端（命令行），会使用 git\n * 会阅读文档、搜索文档\n * 会vuepress的基本使用和默认主题的基本配置\n\n以上知识都掌握之后，再查看本文档。你也可以运行我的主题项目，一边看代码，一边查看文档。主题项目内写了比较多的注释代码，方便你的学习和使用。\n\n\n# clone 项目后需要修改哪些地方？\n\n答：大致的修改流程是这样的：\n\n 1. 首先让项目正常的跑起来\n 2. 根据需求构建和替换 docs/<结构化目录> 的目录及内容\n 3. 根据需求修改 config.js 配置\n 4. 修改 首页配置\n 5. 修改 主题颜色和样式（如果你想修改的话）\n\n\n# 可减少项目冗余的地方有哪些？\n\n答：在完成项目的搭建之后，对于没有使用到的一些文件和代码，可以看情况删减，可删减的地方有:\n\n * 卸载config.js中未使用的插件依赖包\n * 参照 目录结构，删除未使用到的 可选 文件\n * 删除.vusepress目录内未使用到的 可选 文件\n * 删除各文件内的注释代码\n\n\n# 我可以不使用永久链接吗？\n\n答：不可以。当你没有在front matter指定永久链接时，主题会自动生成永久链接到front matter，你可以修改永久链接的值。 使用永久链接是出于以下几点考虑:\n\n 1. 在config.js配置nav时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n 2. 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n 3. 主题中的目录页需要通过永久链接来访问文章。\n\n\n# 是否支持国际化？\n\n答：暂不支持。目前的国际化方案，只能是使用不同项目来处理，比如：一个项目是中文，一个项目是英文，在导航中添加中英文站点的链接。\n\n\n# 打包后在本地预览怎么没有样式？\n\n答：因vuepress打包后的css、js等资源链接采用绝对路径引入，在本地预览时的引入链接是不正确的，部署到服务器即可正常引入和预览。如果你确实需要本地预览，可以使用vuepress-plugin-serve插件，使用方法看相应文档。\n\n\n# 在build时出现错误，但是在dev时是正常的\n\n答：这种情况多半是因为你在created或beforecreate生命周期调用了浏览器api的原因导致，详情查看：浏览器的 api 访问限制",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "案例",
      "frontmatter": {
        "title": "案例",
        "date": "2020-05-14T11:39:45.000Z",
        "permalink": "/pages/5d571c",
        "article": false
      },
      "regularPath": "/04.%E6%A1%88%E4%BE%8B/01.%E6%A1%88%E4%BE%8B.html",
      "relativePath": "04.案例/01.案例.md",
      "key": "v-6e69f288",
      "path": "/pages/5d571c/",
      "headers": [
        {
          "level": 2,
          "title": "特别用户",
          "slug": "特别用户",
          "normalizedTitle": "特别用户",
          "charIndex": 2
        },
        {
          "level": 2,
          "title": "知识库兼博客",
          "slug": "知识库兼博客",
          "normalizedTitle": "知识库兼博客",
          "charIndex": 2214
        },
        {
          "level": 2,
          "title": "知识库",
          "slug": "知识库",
          "normalizedTitle": "知识库",
          "charIndex": 2214
        },
        {
          "level": 2,
          "title": "社区类",
          "slug": "社区类",
          "normalizedTitle": "社区类",
          "charIndex": 14909
        },
        {
          "level": 2,
          "title": "博客类",
          "slug": "博客类",
          "normalizedTitle": "博客类",
          "charIndex": 15186
        },
        {
          "level": 2,
          "title": "文档类",
          "slug": "文档类",
          "normalizedTitle": "文档类",
          "charIndex": 16091
        },
        {
          "level": 2,
          "title": "申请加入案例",
          "slug": "申请加入案例",
          "normalizedTitle": "申请加入案例",
          "charIndex": 20751
        }
      ],
      "headersStr": "特别用户 知识库兼博客 知识库 社区类 博客类 文档类 申请加入案例",
      "content": "# 特别用户\n\nMyBatis-Plus官网\n\n🚀为简化开发而生\n\n青苗\n\nLiteFlow官网\n\n轻量，快速，稳定可编排的组件式规则引擎\n\n铂赛东\n\nEasy-Es官网\n\n傻瓜级ElasticSearch搜索引擎ORM框架\n\n老汉\n\nEasy-DotNET\n\n.Net 全栈知识体系。完全开源,欢迎pr共建生态\n\n一个大西瓜\n\nconfig:\n  imgHeight: 140px\n\ndata:\n  # - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210729-233554@2x.22bdqeiem2sg.png\n  #   link: https://docs.openharmony.cn/pages/000000/\n  #   name: OpenHarmony\n  #   desc: 开放原子开源基金会\n  #   author: OpenHarmony\n  #   avatar: https://www.openharmony.cn/static/img/core-card-item2.a72a0d10.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20211215-144040.hgt2875r2zc.webp\n    link: https://baomidou.com/\n    name: MyBatis-Plus官网\n    desc: 🚀为简化开发而生\n    author: 青苗\n    avatar: https://baomidou.com/img/logo.svg\n  # - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210729-235804@2x.75e9lfd65t40.png\n  #   link: https://docs.deepin.org\n  #   name: Deepin 社区文档\n  #   desc: Deepin 应用开发技术分享、DTK开发经验等\n  #   author: Deepin\n  #   avatar: https://jsd.cdn.zzko.cn/gh/xmuli/xmuliPic@pic/2021/deepin.png\n  # - img: https://ks3-cn-beijing.ksyuncs.com/vform-static/img/vform_website.png\n  #   link: http://www.vform666.com\n  #   name: VForm官网\n  #   desc: 低代码表单优选方案，拖拽式设计，一键生成源码\n  #   author: vformAdmin\n  #   avatar: https://www.vform666.com/vform-logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/xxx.7feub7n1y0g0.png\n    link: https://liteflow.yomahub.com\n    name: LiteFlow官网\n    desc: 轻量，快速，稳定可编排的组件式规则引擎\n    author: 铂赛东\n    avatar: https://portrait.gitee.com/uploads/avatars/user/367/1102362_bryan31_1578940308.png!avatar60\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/176866696-743faf44-4afd-4c12-9728-f982ea885836.2205nb3vf5mo.webp\n    link: https://easy-es.cn/\n    name: Easy-Es官网\n    desc: 傻瓜级ElasticSearch搜索引擎ORM框架\n    author: 老汉\n    avatar: https://iknow.hs.net/9fa0407f-30ff-4d8b-82da-a4990e41a04b.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230903/WX20230903-160123@2x.2urwej0micw0.webp\n    link: https://easy-dotnet.com/\n    name: Easy-DotNET\n    desc: .Net 全栈知识体系。完全开源,欢迎pr共建生态\n    author: 一个大西瓜\n    avatar: https://easy-dotnet.com/img/logo.png\n\n\n\n# 知识库兼博客\n\nEvan's blog\n\nWeb前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n\nEvan Xu\n\n麋鹿鲁哟\n\n运气交给锦鲤，\n你只管努力就好。 (●ˇ∀ˇ●)\n\n麋鹿鲁哟\n\nLingze's blog\n\n少侠, 别来无恙?\n\n令则\n\nsummer's blog\n\nDevops运维技术博客，分享运维技术\n\n夏苏文\n\nGocifer's DB & Blog\n\n一个中二少年，专注于计算机基础架构、云原生、网络、云计算的所学、所思、所行、所想。\n\ngocifer.jay\n\nDra-M\n\nJAVA后端\n\n莫小龙\n\n跟着老侯玩编程\n\n一个乐于编程知识分享的站点\n\n舞动的代码\n\n学习笔记\n\n平时的技术积累|分享交流技术心得|温故而知新\n\n爱做梦的奋斗青年\n\n研究院\n\n一万年太久，只争朝夕\n\nxwyang\n\nKimen's Blog\n\n全沾攻城狮\n\nKimen\n\nXLONG's blog\n\n蒸汽波、咖啡\n\nlixianglong3210\n\n偷吃了鸡蛋的梨\n\n捣鼓这,捣鼓那。\n\nAwrtiger\n\nXinghai's Blog\n\nWeb Security | Java Security\n\nXinghai\n\n二丫讲梵\n\n学习，记录，分享。(运维生活编程)\n\n二丫讲梵\n\n松松的一尺三分地\n\n记录工作和学习中的所得\n\nmasongsong\n\nYoung Kbt Blog\n\n记录学习Java, Web, 框架, 工具, 前端等相关知识, 记录生活和技术路程, 分享编程技巧。\n\nShip Liu\n\n梵一的博客\n\n个人博客和知识分享\n\n梵一\n\n未读代码\n\nJava 开发知识库，分享原创文章\n\n程序猿阿朗\n\n松本松的博客儿\n\nWeb前端技术博客，积跬步以至千里。\n\nsimonzhangs\n\n远方的灯塔\n\n专注于服务端技术分享\n\nterwer\n\nSuya's blog\n\n个人博客，分享技术文章，学习笔记，植物相关知识等。\n\nSuya\n\nColorPanda\n\n日语中文英文学习网站\n\nColorPanda\n\nZihanio\n\nZihan的学习博客\n\nZihan\n\n不器小窝\n\n但知行好事,莫要问前程\n\n不器\n\nVdoing主题博客模板\n\nVdoing主题博客模板\n\neryajf\n\nJava essay\n\nJava散文知识库，Spring全家桶，SpringCloud全家桶，高可用高并发架构，面试等\n\nMr.Fire\n\n行百里er\n\nJava,个人技术博客,后端开发,技术架构,分布式技术,Spring Cloud Alibaba,Elasticsearch,Redis,算法,数据结构,Git\n\n行百里er\n\nCaptain\n\n学习技术，Java基础、面试知识点、项目经验总结和一些学习笔记\n\nCaptain\n\n小薛博客\n\n小薛博客，专注IT技术分享，助力人人成为架构师\n\nxueqimiao\n\n呆呆的博客\n\n个人博客\n\n呆呆\n\nJorgen's blog\n\n🚀个人知识库兼博客🚀\n\njorgen\n\nKronos‘ blog\n\n内心丰盈者，独行也如众\n\n忘忧\n\najay\n\nCTF学习记录\n\najay\n\nconfig:\n  imgHeight: 140px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114033.png\n    link: https://xugaoyi.com/\n    name: Evan's blog\n    desc: Web前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n    author: Evan Xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200727170555.jpg\n    link: https://miluluyo.github.io/vdoingBlog/\n    name: 麋鹿鲁哟\n    desc: 运气交给锦鲤，</br>你只管努力就好。  (●ˇ∀ˇ●)\n    author: 麋鹿鲁哟\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg\n  - img: https://i.loli.net/2020/07/26/BUCplirGIq9YTNA.png\n    link: https://lingze.xyz/\n    name: Lingze's blog\n    desc: 少侠, 别来无恙?\n    author: 令则\n    avatar: https://i.loli.net/2020/07/11/XhqR7Idnk5LD8bC.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210730-000829@2x.6pjgy10flk00.png\n    link: https://www.xswsym.online/\n    name: summer's blog\n    desc: Devops运维技术博客，分享运维技术\n    author: 夏苏文\n    avatar: https://jsd.cdn.zzko.cn/gh/summerking1/image@main/tx.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201110221457.png\n    link: https://gocifer.github.io\n    name: Gocifer's DB & Blog\n    desc: 一个中二少年，专注于计算机基础架构、云原生、网络、云计算的所学、所思、所行、所想。\n    author: gocifer.jay\n    avatar: https://gocifer.github.io/img/avatar/gocifer.png\n  - img: https://dra-m.com/images/thumbnail.png\n    link: https://dra-m.com/\n    name: Dra-M\n    desc: JAVA后端\n    author: 莫小龙\n    avatar: https://q1.qlogo.cn/g?b=qq&nk=975425198&s=640\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200905142134.png\n    link: https://www.coder163.com/\n    name: 跟着老侯玩编程\n    desc: 一个乐于编程知识分享的站点\n    author: 舞动的代码\n    avatar: https://www.coder163.com/img/qun.png\n\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20210119213748.jpg\n    link: https://haijunit.top/\n    name: 学习笔记\n    desc: 平时的技术积累|分享交流技术心得|温故而知新\n    author: 爱做梦的奋斗青年\n    avatar: https://haijunit.top/images/avatar.png\n  - img: https://jsd.cdn.zzko.cn/gh/yxw839841231/images/studying-icu/20210120110320.png\n    link: https://www.studying.icu/\n    name: 研究院\n    desc: 一万年太久，只争朝夕\n    author: xwyang\n    avatar: https://avatars1.githubusercontent.com/u/13757119?s=80&v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210704-230751@2x.3pw80u1fo6u0.png\n    link: https://blog.kimen.com.cn/\n    name: Kimen's Blog\n    desc: 全沾攻城狮\n    author: Kimen\n    avatar: https://avatars.githubusercontent.com/u/25970284?s=460&u=69b419ad6de33eaa1d6b73d7f065f710076d6c55&v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20211101-165045-(1).4b4axinii160.png\n    link: https://lixianglong3210.gitee.io/xlong-vdoing/\n    name: XLONG's blog\n    desc: 蒸汽波、咖啡\n    author: lixianglong3210\n    avatar: http://www.lixianglong.cn/bg_store/img/avatar/default.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/Awrtiger/mirrorfile/img/web.png\n    link: https://www.ool.cool/\n    name: 偷吃了鸡蛋的梨\n    desc: 捣鼓这,捣鼓那。\n    author: Awrtiger\n    avatar: https://jsd.cdn.zzko.cn/gh/Awrtiger/mirrorfile/img/avatar.jpg\n  - img: https://image-1302577725.cos.ap-beijing.myqcloud.com/img/20210402183053.png\n    link: https://f4de-bak.github.io/\n    name: Xinghai's Blog\n    desc: Web Security | Java Security\n    author: Xinghai\n    avatar: https://image-1302577725.cos.ap-beijing.myqcloud.com/img/20210328234543.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/eyjf.png\n    link: https://wiki.eryajf.net\n    name: 二丫讲梵\n    desc: 学习，记录，分享。(运维生活编程)\n    author: 二丫讲梵\n    avatar: https://wiki.eryajf.net/img/logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/ss.2tev477ruza0.png\n    link: https://masongsong.cn\n    name: 松松的一尺三分地\n    desc: 记录工作和学习中的所得\n    author: masongsong\n    avatar: https://jsd.cdn.zzko.cn/gh/MssText/learn@master/images/49203535.35emn5vryma0.png\n  - img: https://jsd.cdn.zzko.cn/gh/Kele-Bingtang/static/user/20211218235045.png\n    link: https://notes.youngkbt.cn/\n    name: Young Kbt Blog\n    desc: 记录学习Java, Web, 框架, 工具, 前端等相关知识, 记录生活和技术路程, 分享编程技巧。\n    author: Ship Liu\n    avatar: https://jsd.cdn.zzko.cn/gh/Kele-Bingtang/static/user/avatar2.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/20220210094650.3q09d26tigc0.webp\n    link: https://chuck6.github.io/blog/\n    name: 梵一的博客\n    desc: 个人博客和知识分享\n    author: 梵一\n    avatar: https://chuck6.github.io/blog/img/paizhao.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/niumoo/cdn-assets/2021/20220316145528.png\n    link: https://www.wdbyte.com\n    name: 未读代码\n    desc: Java 开发知识库，分享原创文章\n    author: 程序猿阿朗\n    avatar: https://avatars.githubusercontent.com/u/26371673?v=4\n  - img: https://jsd.cdn.zzko.cn/gh/simonzhangs/image-hosting@master/vue-plugin-example/blog.qg2buhe5h4g.webp\n    link: https://simonzhangs.github.io/\n    name: 松本松的博客儿\n    desc: Web前端技术博客，积跬步以至千里。\n    author: simonzhangs\n    avatar: https://jsd.cdn.zzko.cn/gh/simonzhangs/image-hosting@master/20220319/image.4x708q9wzse0.webp\n  - img: https://jsd.cdn.zzko.cn/gh/terwer/upload/img/image-20220422000045653.png\n    link: http://terwergreen.com\n    name: 远方的灯塔\n    desc: 专注于服务端技术分享\n    author: terwer\n    avatar: https://jsd.cdn.zzko.cn/gh/terwer/upload/img/photo.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/nksuya/image_store@main/suyablog_home.5iou2ogjrm80.webp\n    link: https://suyaspace.com/\n    name: Suya's blog\n    desc: 个人博客，分享技术文章，学习笔记，植物相关知识等。\n    author: Suya\n    avatar: https://jsd.cdn.zzko.cn/gh/nksuya/image_store@master/tech/avatar.2tycyyc1ebr4.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store2@master/img/QQ20220526-224620@2x.44o82ibj9qq0.png\n    link: https://colorpanda.aifan.jp/\n    name: ColorPanda\n    desc: 日语中文英文学习网站\n    author: ColorPanda\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store2@master/img/image.3qr8m501tl20.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/asdf.23jsekfejla8.jpeg\n    link: https://inannan423.github.io/\n    name: Zihanio\n    desc: Zihan的学习博客\n    author: Zihan\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/xxx.67b3ygadagk0.jpeg\n  - img: https://user-images.githubusercontent.com/866409/175853573-28ded198-2348-4a82-8ddd-05088161e3fe.png\n    link: https://xingcxb.com\n    name: 不器小窝\n    desc: 但知行好事,莫要问前程\n    author: 不器\n    avatar: https://avatars.githubusercontent.com/u/866409?v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/QQ20220722-141037.22uk9ow7ary.png\n    link: https://eryajf.github.io/vdoing-template/\n    name: Vdoing主题博客模板\n    desc: Vdoing主题博客模板\n    author: eryajf\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/33259379.277tur21ir40.jpeg\n  - img: https://jsd.cdn.zzko.cn/gh/FireHH/github_img_repository/logo/微信截图_20220810164903.png\n    link: https://javaessay.cn/\n    name: Java essay\n    desc: Java散文知识库，Spring全家桶，SpringCloud全家桶，高可用高并发架构，面试等\n    author: Mr.Fire\n    avatar: https://jsd.cdn.zzko.cn/gh/FireHH/github_img_repository/logo/huge.jpg\n  - img: https://chendapeng.cn/images/about/blog_image.png\n    link: https://chendapeng.cn\n    name: 行百里er\n    desc: Java,个人技术博客,后端开发,技术架构,分布式技术,Spring Cloud Alibaba,Elasticsearch,Redis,算法,数据结构,Git\n    author: 行百里er\n    avatar: https://chendapeng.cn/images/about/avatar.png\n  - img: http://xyhwh-nav.cn/img/index.png\n    link: http://xyhwh-nav.cn\n    name: Captain\n    desc: 学习技术，Java基础、面试知识点、项目经验总结和一些学习笔记\n    author: Captain\n    avatar: http://xyhwh-nav.cn/img/logo.png\n  - img: https://xiaoxue-images.oss-cn-shenzhen.aliyuncs.com/blog/202212271108541.jpg\n    link: https://blog.xueqimiao.com/\n    name: 小薛博客\n    desc: 小薛博客，专注IT技术分享，助力人人成为架构师\n    author: xueqimiao\n    avatar: https://xiaoxue-images.oss-cn-shenzhen.aliyuncs.com/blog/202212271110209.png\n  - img: https://jsd.cdn.zzko.cn/gh/su-dd/cdn/博客/202301311644669.png\n    link: https://blog.addai.cn/\n    name: 呆呆的博客\n    desc: 个人博客\n    author: 呆呆\n    avatar: https://cdn.addai.cn/博客/网站使用/呆呆.webp\n  - img: https://jsd.cdn.zzko.cn/jorgen-zhao/blog/master/images/snapshot.png\n    link: https://jorgen.website\n    name: Jorgen's blog\n    desc: 🚀个人知识库兼博客🚀\n    author: jorgen\n    avatar: https://jorgen.website/img/avatar.jpg\n  - img: https://cdn.jsdelivr.net/gh/jywangyou/Images@master/img/index.20ce120yilgg.png\n    link: https://blog.wangyou.ink/\n    name: Kronos‘ blog\n    desc: 内心丰盈者，独行也如众\n    author: 忘忧\n    avatar: https://cdn.jsdelivr.net/gh/jywangyou/Images@master/img/okhead.5l9l7bclm5o0.png\n  - img: https://the0n3.top/medias/friends/siteimage.png\n    link: https://the0n3.top/\n    name: ajay\n    desc: CTF学习记录\n    author: ajay\n    avatar: https://the0n3.top/medias/friends/syz.png\n\n\n\n# 知识库\n\n知识库演示\n\nVdoing主题演示-知识库\n\nEvan Xu\n\nX86软路由和NAS\n\n记录X86软路由和NAS的一些知识\n\nMonoLogueChi\n\n计算模拟学习笔记\n\n《能源环境材料计算模拟方法》学习笔记，涉及密度泛函理论、第一性原理等和Materials Studio、VASP等的使用。\n\nNorthword\n\nSingerw's Repository\n\n技术的风花雪月之事，有个存档的地方，对于复盘，回忆，都是一个极好的方谭。\n\nSingerw\n\nhippo4j\n\n🔥 动态线程池框架，附带监控报警功能，轻量级的运维监控平台\n\nAcmenlt\n\n地信遥感数据汇\n\n解决目前地信遥感方向数据混杂，资源难以寻找的问题，构建一个地信遥感学习、讨论、交流的平台。\n\n锐多宝\n\nDe7v\n\n专注于安卓领域的技术传播\n\nwresource\n\nHowToStartOpenSource\n\nGitHub开源项目维护协作指南\n\neryajf\n\nconfig:\n  imgHeight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114035.png\n    link: https://xugaoyi.github.io/vdoing-demo-repository/\n    name: 知识库演示\n    desc: Vdoing主题演示-知识库\n    author: Evan Xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201219205536.jpg\n    link: https://wiki.router86.com/\n    name: X86软路由和NAS\n    desc: 记录X86软路由和NAS的一些知识\n    author: MonoLogueChi\n    avatar: https://blog.xxwhite.com/assets/img/avatar.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201219205318.jpg\n    link: https://blog.northword.cn/dft-learning\n    name: 计算模拟学习笔记\n    desc: 《能源环境材料计算模拟方法》学习笔记，涉及密度泛函理论、第一性原理等和Materials Studio、VASP等的使用。\n    author: Northword\n    avatar: https://storage.live.com/items/28C1032A24A9C53B!25785?authkey=AHAx3GOYEKGqm8I\n  - img: https://singerwimg-1300001977.cos.accelerate.myqcloud.com/20211008/WccSrJ0s.png\n    link: https://repository.singerw.com\n    name: Singerw's Repository\n    desc: 技术的风花雪月之事，有个存档的地方，对于复盘，回忆，都是一个极好的方谭。\n    author: Singerw\n    avatar: https://singerwimg-1300001977.cos.accelerate.myqcloud.com/2021/09/20/76f29482ffc9b.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/QQ20220113-114927.5oha7j06c580.webp\n    link: https://hippox.cn\n    name: hippo4j\n    desc: 🔥 动态线程池框架，附带监控报警功能，轻量级的运维监控平台\n    author: Acmenlt\n    avatar: https://hippox.cn/img/web.png\n  - img: https://pics.landcover100.com/pics/624e63f4c82b8.png\n    link: https://www.gisrsdata.com\n    name: 地信遥感数据汇\n    desc: 解决目前地信遥感方向数据混杂，资源难以寻找的问题，构建一个地信遥感学习、讨论、交流的平台。\n    author: 锐多宝\n    avatar: https://pics.landcover100.com/pics/624e6469cbb8a.jpg\n  - img: https://img.de7v.com/img/site-pic.jpg\n    link: https://www.de7v.com\n    name: De7v\n    desc: 专注于安卓领域的技术传播\n    author: wresource\n    avatar: https://img.de7v.com/img/wresource.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/11123.1aljpnjyr074.png\n    link: https://eryajf.github.io/HowToStartOpenSource/\n    name: HowToStartOpenSource\n    desc: GitHub开源项目维护协作指南\n    author: eryajf\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/33259379.277tur21ir40.jpeg\n\n\n\n# 社区类\n\n奕维投资教程站\n\n股票投资\n\n奕维\n\nconfig:\n  imgHeight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200921220111.png\n    link: https://course.yiwiz.com/\n    name: 奕维投资教程站\n    desc: 股票投资\n    author: 奕维\n    avatar: https://course.yiwiz.com/img/logo.png\n\n\n\n# 博客类\n\nVdoing's blog\n\nVdoing主题演示-博客\n\nEvan Xu\n\nTeler的日常\n\n好好学习，天天向上\n\nTeler\n\nxustudyxu's Blog\n\n一起学习编程!\n\nxustudyxu\n\nconfig:\n  imgHeight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114034.png\n    link: https://xugaoyi.github.io/vdoing-demo-blog/\n    name: Vdoing's blog\n    desc: Vdoing主题演示-博客\n    author: Evan Xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://s4.ax1x.com/2022/02/25/bAjINF.png\n    link: https://fangweilong.github.io/\n    name: Teler的日常\n    desc: 好好学习，天天向上\n    author: Teler\n    avatar: https://s4.ax1x.com/2022/02/25/bAva8J.jpg\n  - img: https://user-images.githubusercontent.com/53399655/163007243-1b99b96b-cac3-49ca-9950-03a1e877a6d8.png\n    link: https://xustudyxu.github.io/\n    name: xustudyxu's Blog\n    desc: 一起学习编程!\n    author: xustudyxu\n    avatar: https://xustudyxu.github.io/img/01.png\n\n\n\n# 文档类\n\nvdoing(本站)\n\n🚀一款简洁高效的VuePress 知识管理&博客 主题\n\nEvan Xu\n\nJA Plus 开发者文档\n\n一款开源的登录认证中间件\n\nyadong,zhang\n\nDokiMod 开发文档\n\n为 DDLC Mod 开发提供的完善文档\n\nimgradeone\n\nJeeSite 在线文档\n\nJeeSite 快速开发平台 - 在线文档\n\nThinkGem\n\nCleanPHP\n\nCleanPHP开发者文档\n\nankio\n\nJpom\n\n简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n\n不忘初心\n\n物美智能\n\n物美智能开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。\n\n随遇而安 / kerwincui\n\ntrace-recorder官网\n\n简单的， 可伸缩的， 高性能的跟踪记录仪\n\n蔡旺\n\n米饭文档\n\n米饭Minecraft插件文档\n\nhandy\n\nElectron-Egg\n\n一个入门简单、跨平台、企业级桌面软件开发框架\n\n哆啦好梦\n\nkhl.py.docs\n\nkook python sdk khl.py 文档\n\nmusnows\n\nSimplest Admin V2 文档\n\n本站用于Simplest Admin 通用后台管理系统的文档系统\n\nTenyears\n\nRuleGo 官网\n\n基于Go语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎\n\n玉米投手\n\nconfig:\n  imgHeight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114036.png\n    link: https://xugaoyi.github.io/vuepress-theme-vdoing-doc/\n    name: vdoing(本站)\n    desc: 🚀一款简洁高效的VuePress 知识管理&博客 主题\n    author: Evan Xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/QQ20210925-124836@2x (1).6ogvf85maog0.png\n    link: https://justauth.plus/\n    name: JA Plus 开发者文档\n    desc: 一款开源的登录认证中间件\n    author: yadong,zhang\n    avatar: https://portrait.gitee.com/uploads/avatars/user/261/784199_yadong.zhang_1578932767.png!avatar200\n  - img: https://assets.imgradeone.com/docsdokimod-pv.png\n    link: https://docs.dokimod.cn\n    name: DokiMod 开发文档\n    desc: 为 DDLC Mod 开发提供的完善文档\n    author: imgradeone\n    avatar: https://docs.dokimod.cn/logo_128x128.png\n  # - img: http://yogoyun.oss-cn-beijing.aliyuncs.com/help/public/other/20200630125515.png\n  #   link: http://help.yogoyun.com/\n  #   name: 柚果云服务\n  #   desc: 智能商业应用程序服务商。\n  #   author: 柚果云服务\n  #   avatar: http://yogoyun.oss-cn-beijing.aliyuncs.com/admin/console/logo.png\n  - img: https://jeesite.com/docs/img/docs.png\n    link: http://docs.jeesite.com\n    name: JeeSite 在线文档\n    desc: JeeSite 快速开发平台 - 在线文档\n    author: ThinkGem\n    avatar: https://jeesite.com/docs/img/logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/dreamncn/picBed@master/uPic/2022_05_12_20_40_04_1652359204_1652359204449_9mVkaR.png\n    link: https://cleanphp.ankio.net/\n    name: CleanPHP\n    desc: CleanPHP开发者文档\n    author: ankio\n    avatar: https://jsd.cdn.zzko.cn/gh/dreamncn/picBed@master/uPic/2022_04_04_19_48_51_1649072931_1649072931346_h4BGpQ.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/28284d.56bkx9qvhc00.webp\n    link: https://jpom-docs.keepbx.cn/\n    name: Jpom\n    desc: 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n    author: 不忘初心\n    avatar: https://jpom-docs.keepbx.cn/images/jpom_logo.png\n  - img: https://wumei.live/kerwincui/document/raw/branch/master/images/img.png\n    link: https://wumei.live/doc/\n    name: 物美智能\n    desc: 物美智能开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。\n    author: 随遇而安 / kerwincui\n    avatar: https://portrait.gitee.com/uploads/avatars/user/611/1834441_kerwincui_1581523162.png!avatar200\n  - img: https://pic.imgdb.cn/item/637c92ef16f2c2beb11293c7.jpg\n    link: https://trace-recorder.xusc.cn\n    name: trace-recorder官网\n    desc: 简单的， 可伸缩的， 高性能的跟踪记录仪\n    author: 蔡旺\n    avatar: https://pic.imgdb.cn/item/637c933516f2c2beb112ed43.jpg\n  - img: https://img.fastmirror.net/s/2023/04/07/64303c0e67329.png\n    link: https://ricedoc.handyplus.cn/\n    name: 米饭文档\n    desc: 米饭Minecraft插件文档\n    author: handy\n    avatar: https://img.fastmirror.net/s/2023/04/07/64303c1d551a1.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230506/68747470733a2f2f696d6730312e6b616b613939362e636f6d2f65652f65652d7765622e706e67.ok4htvc6vmo.webp\n    link: https://www.kaka996.com/\n    name: Electron-Egg\n    desc: 一个入门简单、跨平台、企业级桌面软件开发框架\n    author: 哆啦好梦\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230506/68747470733a2f2f696d6730312e6b616b613939362e636f6d2f65652f6c6f676f5f3230302e706e67.6agfx6e7l280.webp\n  - img: https://khl-py.eu.org/screenshots.png\n    link: https://khl-py.eu.org/\n    name: khl.py.docs\n    desc: kook python sdk khl.py 文档\n    author: musnows\n    avatar: https://khl-py.eu.org/favicon.ico\n  - img: http://rds-share.oss-cn-hangzhou.aliyuncs.com/admin/202309/202309090944430148132.png\n    link: https://doc.simplest.net.cn\n    name: Simplest Admin V2 文档\n    desc: 本站用于Simplest Admin 通用后台管理系统的文档系统\n    author: Tenyears\n    avatar: http://rds-share.oss-cn-hangzhou.aliyuncs.com/admin/202306/202306130908010175689.png\n  - img: https://rulego.cc/img/snapshot.png\n    link: https://rulego.cc/\n    name: RuleGo 官网\n    desc: 基于Go语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎\n    author: 玉米投手\n    avatar: https://rulego.cc/img/author_logo.jpg\n\n\n\n\n\n\n\n# 申请加入案例\n\n你想在这个页面展示你的站点吗？\n\n欢迎使用 Vdoing 主题的小伙伴到 这里 留下你的站点信息，你的站点将有机会出现在这个页面里~",
      "normalizedContent": "# 特别用户\n\nmybatis-plus官网\n\n🚀为简化开发而生\n\n青苗\n\nliteflow官网\n\n轻量，快速，稳定可编排的组件式规则引擎\n\n铂赛东\n\neasy-es官网\n\n傻瓜级elasticsearch搜索引擎orm框架\n\n老汉\n\neasy-dotnet\n\n.net 全栈知识体系。完全开源,欢迎pr共建生态\n\n一个大西瓜\n\nconfig:\n  imgheight: 140px\n\ndata:\n  # - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210729-233554@2x.22bdqeiem2sg.png\n  #   link: https://docs.openharmony.cn/pages/000000/\n  #   name: openharmony\n  #   desc: 开放原子开源基金会\n  #   author: openharmony\n  #   avatar: https://www.openharmony.cn/static/img/core-card-item2.a72a0d10.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20211215-144040.hgt2875r2zc.webp\n    link: https://baomidou.com/\n    name: mybatis-plus官网\n    desc: 🚀为简化开发而生\n    author: 青苗\n    avatar: https://baomidou.com/img/logo.svg\n  # - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210729-235804@2x.75e9lfd65t40.png\n  #   link: https://docs.deepin.org\n  #   name: deepin 社区文档\n  #   desc: deepin 应用开发技术分享、dtk开发经验等\n  #   author: deepin\n  #   avatar: https://jsd.cdn.zzko.cn/gh/xmuli/xmulipic@pic/2021/deepin.png\n  # - img: https://ks3-cn-beijing.ksyuncs.com/vform-static/img/vform_website.png\n  #   link: http://www.vform666.com\n  #   name: vform官网\n  #   desc: 低代码表单优选方案，拖拽式设计，一键生成源码\n  #   author: vformadmin\n  #   avatar: https://www.vform666.com/vform-logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/xxx.7feub7n1y0g0.png\n    link: https://liteflow.yomahub.com\n    name: liteflow官网\n    desc: 轻量，快速，稳定可编排的组件式规则引擎\n    author: 铂赛东\n    avatar: https://portrait.gitee.com/uploads/avatars/user/367/1102362_bryan31_1578940308.png!avatar60\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/176866696-743faf44-4afd-4c12-9728-f982ea885836.2205nb3vf5mo.webp\n    link: https://easy-es.cn/\n    name: easy-es官网\n    desc: 傻瓜级elasticsearch搜索引擎orm框架\n    author: 老汉\n    avatar: https://iknow.hs.net/9fa0407f-30ff-4d8b-82da-a4990e41a04b.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230903/wx20230903-160123@2x.2urwej0micw0.webp\n    link: https://easy-dotnet.com/\n    name: easy-dotnet\n    desc: .net 全栈知识体系。完全开源,欢迎pr共建生态\n    author: 一个大西瓜\n    avatar: https://easy-dotnet.com/img/logo.png\n\n\n\n# 知识库兼博客\n\nevan's blog\n\nweb前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n\nevan xu\n\n麋鹿鲁哟\n\n运气交给锦鲤，\n你只管努力就好。 (●ˇ∀ˇ●)\n\n麋鹿鲁哟\n\nlingze's blog\n\n少侠, 别来无恙?\n\n令则\n\nsummer's blog\n\ndevops运维技术博客，分享运维技术\n\n夏苏文\n\ngocifer's db & blog\n\n一个中二少年，专注于计算机基础架构、云原生、网络、云计算的所学、所思、所行、所想。\n\ngocifer.jay\n\ndra-m\n\njava后端\n\n莫小龙\n\n跟着老侯玩编程\n\n一个乐于编程知识分享的站点\n\n舞动的代码\n\n学习笔记\n\n平时的技术积累|分享交流技术心得|温故而知新\n\n爱做梦的奋斗青年\n\n研究院\n\n一万年太久，只争朝夕\n\nxwyang\n\nkimen's blog\n\n全沾攻城狮\n\nkimen\n\nxlong's blog\n\n蒸汽波、咖啡\n\nlixianglong3210\n\n偷吃了鸡蛋的梨\n\n捣鼓这,捣鼓那。\n\nawrtiger\n\nxinghai's blog\n\nweb security | java security\n\nxinghai\n\n二丫讲梵\n\n学习，记录，分享。(运维生活编程)\n\n二丫讲梵\n\n松松的一尺三分地\n\n记录工作和学习中的所得\n\nmasongsong\n\nyoung kbt blog\n\n记录学习java, web, 框架, 工具, 前端等相关知识, 记录生活和技术路程, 分享编程技巧。\n\nship liu\n\n梵一的博客\n\n个人博客和知识分享\n\n梵一\n\n未读代码\n\njava 开发知识库，分享原创文章\n\n程序猿阿朗\n\n松本松的博客儿\n\nweb前端技术博客，积跬步以至千里。\n\nsimonzhangs\n\n远方的灯塔\n\n专注于服务端技术分享\n\nterwer\n\nsuya's blog\n\n个人博客，分享技术文章，学习笔记，植物相关知识等。\n\nsuya\n\ncolorpanda\n\n日语中文英文学习网站\n\ncolorpanda\n\nzihanio\n\nzihan的学习博客\n\nzihan\n\n不器小窝\n\n但知行好事,莫要问前程\n\n不器\n\nvdoing主题博客模板\n\nvdoing主题博客模板\n\neryajf\n\njava essay\n\njava散文知识库，spring全家桶，springcloud全家桶，高可用高并发架构，面试等\n\nmr.fire\n\n行百里er\n\njava,个人技术博客,后端开发,技术架构,分布式技术,spring cloud alibaba,elasticsearch,redis,算法,数据结构,git\n\n行百里er\n\ncaptain\n\n学习技术，java基础、面试知识点、项目经验总结和一些学习笔记\n\ncaptain\n\n小薛博客\n\n小薛博客，专注it技术分享，助力人人成为架构师\n\nxueqimiao\n\n呆呆的博客\n\n个人博客\n\n呆呆\n\njorgen's blog\n\n🚀个人知识库兼博客🚀\n\njorgen\n\nkronos‘ blog\n\n内心丰盈者，独行也如众\n\n忘忧\n\najay\n\nctf学习记录\n\najay\n\nconfig:\n  imgheight: 140px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114033.png\n    link: https://xugaoyi.com/\n    name: evan's blog\n    desc: web前端技术博客，积跬步以至千里，致敬每个爱学习的你。\n    author: evan xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200727170555.jpg\n    link: https://miluluyo.github.io/vdoingblog/\n    name: 麋鹿鲁哟\n    desc: 运气交给锦鲤，</br>你只管努力就好。  (●ˇ∀ˇ●)\n    author: 麋鹿鲁哟\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200122153807.jpg\n  - img: https://i.loli.net/2020/07/26/bucplirgiq9ytna.png\n    link: https://lingze.xyz/\n    name: lingze's blog\n    desc: 少侠, 别来无恙?\n    author: 令则\n    avatar: https://i.loli.net/2020/07/11/xhqr7idnk5ld8bc.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210730-000829@2x.6pjgy10flk00.png\n    link: https://www.xswsym.online/\n    name: summer's blog\n    desc: devops运维技术博客，分享运维技术\n    author: 夏苏文\n    avatar: https://jsd.cdn.zzko.cn/gh/summerking1/image@main/tx.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201110221457.png\n    link: https://gocifer.github.io\n    name: gocifer's db & blog\n    desc: 一个中二少年，专注于计算机基础架构、云原生、网络、云计算的所学、所思、所行、所想。\n    author: gocifer.jay\n    avatar: https://gocifer.github.io/img/avatar/gocifer.png\n  - img: https://dra-m.com/images/thumbnail.png\n    link: https://dra-m.com/\n    name: dra-m\n    desc: java后端\n    author: 莫小龙\n    avatar: https://q1.qlogo.cn/g?b=qq&nk=975425198&s=640\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200905142134.png\n    link: https://www.coder163.com/\n    name: 跟着老侯玩编程\n    desc: 一个乐于编程知识分享的站点\n    author: 舞动的代码\n    avatar: https://www.coder163.com/img/qun.png\n\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20210119213748.jpg\n    link: https://haijunit.top/\n    name: 学习笔记\n    desc: 平时的技术积累|分享交流技术心得|温故而知新\n    author: 爱做梦的奋斗青年\n    avatar: https://haijunit.top/images/avatar.png\n  - img: https://jsd.cdn.zzko.cn/gh/yxw839841231/images/studying-icu/20210120110320.png\n    link: https://www.studying.icu/\n    name: 研究院\n    desc: 一万年太久，只争朝夕\n    author: xwyang\n    avatar: https://avatars1.githubusercontent.com/u/13757119?s=80&v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210704-230751@2x.3pw80u1fo6u0.png\n    link: https://blog.kimen.com.cn/\n    name: kimen's blog\n    desc: 全沾攻城狮\n    author: kimen\n    avatar: https://avatars.githubusercontent.com/u/25970284?s=460&u=69b419ad6de33eaa1d6b73d7f065f710076d6c55&v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20211101-165045-(1).4b4axinii160.png\n    link: https://lixianglong3210.gitee.io/xlong-vdoing/\n    name: xlong's blog\n    desc: 蒸汽波、咖啡\n    author: lixianglong3210\n    avatar: http://www.lixianglong.cn/bg_store/img/avatar/default.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/awrtiger/mirrorfile/img/web.png\n    link: https://www.ool.cool/\n    name: 偷吃了鸡蛋的梨\n    desc: 捣鼓这,捣鼓那。\n    author: awrtiger\n    avatar: https://jsd.cdn.zzko.cn/gh/awrtiger/mirrorfile/img/avatar.jpg\n  - img: https://image-1302577725.cos.ap-beijing.myqcloud.com/img/20210402183053.png\n    link: https://f4de-bak.github.io/\n    name: xinghai's blog\n    desc: web security | java security\n    author: xinghai\n    avatar: https://image-1302577725.cos.ap-beijing.myqcloud.com/img/20210328234543.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/eyjf.png\n    link: https://wiki.eryajf.net\n    name: 二丫讲梵\n    desc: 学习，记录，分享。(运维生活编程)\n    author: 二丫讲梵\n    avatar: https://wiki.eryajf.net/img/logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/ss.2tev477ruza0.png\n    link: https://masongsong.cn\n    name: 松松的一尺三分地\n    desc: 记录工作和学习中的所得\n    author: masongsong\n    avatar: https://jsd.cdn.zzko.cn/gh/msstext/learn@master/images/49203535.35emn5vryma0.png\n  - img: https://jsd.cdn.zzko.cn/gh/kele-bingtang/static/user/20211218235045.png\n    link: https://notes.youngkbt.cn/\n    name: young kbt blog\n    desc: 记录学习java, web, 框架, 工具, 前端等相关知识, 记录生活和技术路程, 分享编程技巧。\n    author: ship liu\n    avatar: https://jsd.cdn.zzko.cn/gh/kele-bingtang/static/user/avatar2.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/20220210094650.3q09d26tigc0.webp\n    link: https://chuck6.github.io/blog/\n    name: 梵一的博客\n    desc: 个人博客和知识分享\n    author: 梵一\n    avatar: https://chuck6.github.io/blog/img/paizhao.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/niumoo/cdn-assets/2021/20220316145528.png\n    link: https://www.wdbyte.com\n    name: 未读代码\n    desc: java 开发知识库，分享原创文章\n    author: 程序猿阿朗\n    avatar: https://avatars.githubusercontent.com/u/26371673?v=4\n  - img: https://jsd.cdn.zzko.cn/gh/simonzhangs/image-hosting@master/vue-plugin-example/blog.qg2buhe5h4g.webp\n    link: https://simonzhangs.github.io/\n    name: 松本松的博客儿\n    desc: web前端技术博客，积跬步以至千里。\n    author: simonzhangs\n    avatar: https://jsd.cdn.zzko.cn/gh/simonzhangs/image-hosting@master/20220319/image.4x708q9wzse0.webp\n  - img: https://jsd.cdn.zzko.cn/gh/terwer/upload/img/image-20220422000045653.png\n    link: http://terwergreen.com\n    name: 远方的灯塔\n    desc: 专注于服务端技术分享\n    author: terwer\n    avatar: https://jsd.cdn.zzko.cn/gh/terwer/upload/img/photo.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/nksuya/image_store@main/suyablog_home.5iou2ogjrm80.webp\n    link: https://suyaspace.com/\n    name: suya's blog\n    desc: 个人博客，分享技术文章，学习笔记，植物相关知识等。\n    author: suya\n    avatar: https://jsd.cdn.zzko.cn/gh/nksuya/image_store@master/tech/avatar.2tycyyc1ebr4.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store2@master/img/qq20220526-224620@2x.44o82ibj9qq0.png\n    link: https://colorpanda.aifan.jp/\n    name: colorpanda\n    desc: 日语中文英文学习网站\n    author: colorpanda\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store2@master/img/image.3qr8m501tl20.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/asdf.23jsekfejla8.jpeg\n    link: https://inannan423.github.io/\n    name: zihanio\n    desc: zihan的学习博客\n    author: zihan\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/xxx.67b3ygadagk0.jpeg\n  - img: https://user-images.githubusercontent.com/866409/175853573-28ded198-2348-4a82-8ddd-05088161e3fe.png\n    link: https://xingcxb.com\n    name: 不器小窝\n    desc: 但知行好事,莫要问前程\n    author: 不器\n    avatar: https://avatars.githubusercontent.com/u/866409?v=4\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/qq20220722-141037.22uk9ow7ary.png\n    link: https://eryajf.github.io/vdoing-template/\n    name: vdoing主题博客模板\n    desc: vdoing主题博客模板\n    author: eryajf\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/33259379.277tur21ir40.jpeg\n  - img: https://jsd.cdn.zzko.cn/gh/firehh/github_img_repository/logo/微信截图_20220810164903.png\n    link: https://javaessay.cn/\n    name: java essay\n    desc: java散文知识库，spring全家桶，springcloud全家桶，高可用高并发架构，面试等\n    author: mr.fire\n    avatar: https://jsd.cdn.zzko.cn/gh/firehh/github_img_repository/logo/huge.jpg\n  - img: https://chendapeng.cn/images/about/blog_image.png\n    link: https://chendapeng.cn\n    name: 行百里er\n    desc: java,个人技术博客,后端开发,技术架构,分布式技术,spring cloud alibaba,elasticsearch,redis,算法,数据结构,git\n    author: 行百里er\n    avatar: https://chendapeng.cn/images/about/avatar.png\n  - img: http://xyhwh-nav.cn/img/index.png\n    link: http://xyhwh-nav.cn\n    name: captain\n    desc: 学习技术，java基础、面试知识点、项目经验总结和一些学习笔记\n    author: captain\n    avatar: http://xyhwh-nav.cn/img/logo.png\n  - img: https://xiaoxue-images.oss-cn-shenzhen.aliyuncs.com/blog/202212271108541.jpg\n    link: https://blog.xueqimiao.com/\n    name: 小薛博客\n    desc: 小薛博客，专注it技术分享，助力人人成为架构师\n    author: xueqimiao\n    avatar: https://xiaoxue-images.oss-cn-shenzhen.aliyuncs.com/blog/202212271110209.png\n  - img: https://jsd.cdn.zzko.cn/gh/su-dd/cdn/博客/202301311644669.png\n    link: https://blog.addai.cn/\n    name: 呆呆的博客\n    desc: 个人博客\n    author: 呆呆\n    avatar: https://cdn.addai.cn/博客/网站使用/呆呆.webp\n  - img: https://jsd.cdn.zzko.cn/jorgen-zhao/blog/master/images/snapshot.png\n    link: https://jorgen.website\n    name: jorgen's blog\n    desc: 🚀个人知识库兼博客🚀\n    author: jorgen\n    avatar: https://jorgen.website/img/avatar.jpg\n  - img: https://cdn.jsdelivr.net/gh/jywangyou/images@master/img/index.20ce120yilgg.png\n    link: https://blog.wangyou.ink/\n    name: kronos‘ blog\n    desc: 内心丰盈者，独行也如众\n    author: 忘忧\n    avatar: https://cdn.jsdelivr.net/gh/jywangyou/images@master/img/okhead.5l9l7bclm5o0.png\n  - img: https://the0n3.top/medias/friends/siteimage.png\n    link: https://the0n3.top/\n    name: ajay\n    desc: ctf学习记录\n    author: ajay\n    avatar: https://the0n3.top/medias/friends/syz.png\n\n\n\n# 知识库\n\n知识库演示\n\nvdoing主题演示-知识库\n\nevan xu\n\nx86软路由和nas\n\n记录x86软路由和nas的一些知识\n\nmonologuechi\n\n计算模拟学习笔记\n\n《能源环境材料计算模拟方法》学习笔记，涉及密度泛函理论、第一性原理等和materials studio、vasp等的使用。\n\nnorthword\n\nsingerw's repository\n\n技术的风花雪月之事，有个存档的地方，对于复盘，回忆，都是一个极好的方谭。\n\nsingerw\n\nhippo4j\n\n🔥 动态线程池框架，附带监控报警功能，轻量级的运维监控平台\n\nacmenlt\n\n地信遥感数据汇\n\n解决目前地信遥感方向数据混杂，资源难以寻找的问题，构建一个地信遥感学习、讨论、交流的平台。\n\n锐多宝\n\nde7v\n\n专注于安卓领域的技术传播\n\nwresource\n\nhowtostartopensource\n\ngithub开源项目维护协作指南\n\neryajf\n\nconfig:\n  imgheight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114035.png\n    link: https://xugaoyi.github.io/vdoing-demo-repository/\n    name: 知识库演示\n    desc: vdoing主题演示-知识库\n    author: evan xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201219205536.jpg\n    link: https://wiki.router86.com/\n    name: x86软路由和nas\n    desc: 记录x86软路由和nas的一些知识\n    author: monologuechi\n    avatar: https://blog.xxwhite.com/assets/img/avatar.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20201219205318.jpg\n    link: https://blog.northword.cn/dft-learning\n    name: 计算模拟学习笔记\n    desc: 《能源环境材料计算模拟方法》学习笔记，涉及密度泛函理论、第一性原理等和materials studio、vasp等的使用。\n    author: northword\n    avatar: https://storage.live.com/items/28c1032a24a9c53b!25785?authkey=ahax3goyekgqm8i\n  - img: https://singerwimg-1300001977.cos.accelerate.myqcloud.com/20211008/wccsrj0s.png\n    link: https://repository.singerw.com\n    name: singerw's repository\n    desc: 技术的风花雪月之事，有个存档的地方，对于复盘，回忆，都是一个极好的方谭。\n    author: singerw\n    avatar: https://singerwimg-1300001977.cos.accelerate.myqcloud.com/2021/09/20/76f29482ffc9b.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/qq20220113-114927.5oha7j06c580.webp\n    link: https://hippox.cn\n    name: hippo4j\n    desc: 🔥 动态线程池框架，附带监控报警功能，轻量级的运维监控平台\n    author: acmenlt\n    avatar: https://hippox.cn/img/web.png\n  - img: https://pics.landcover100.com/pics/624e63f4c82b8.png\n    link: https://www.gisrsdata.com\n    name: 地信遥感数据汇\n    desc: 解决目前地信遥感方向数据混杂，资源难以寻找的问题，构建一个地信遥感学习、讨论、交流的平台。\n    author: 锐多宝\n    avatar: https://pics.landcover100.com/pics/624e6469cbb8a.jpg\n  - img: https://img.de7v.com/img/site-pic.jpg\n    link: https://www.de7v.com\n    name: de7v\n    desc: 专注于安卓领域的技术传播\n    author: wresource\n    avatar: https://img.de7v.com/img/wresource.png\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/11123.1aljpnjyr074.png\n    link: https://eryajf.github.io/howtostartopensource/\n    name: howtostartopensource\n    desc: github开源项目维护协作指南\n    author: eryajf\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/33259379.277tur21ir40.jpeg\n\n\n\n# 社区类\n\n奕维投资教程站\n\n股票投资\n\n奕维\n\nconfig:\n  imgheight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200921220111.png\n    link: https://course.yiwiz.com/\n    name: 奕维投资教程站\n    desc: 股票投资\n    author: 奕维\n    avatar: https://course.yiwiz.com/img/logo.png\n\n\n\n# 博客类\n\nvdoing's blog\n\nvdoing主题演示-博客\n\nevan xu\n\nteler的日常\n\n好好学习，天天向上\n\nteler\n\nxustudyxu's blog\n\n一起学习编程!\n\nxustudyxu\n\nconfig:\n  imgheight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114034.png\n    link: https://xugaoyi.github.io/vdoing-demo-blog/\n    name: vdoing's blog\n    desc: vdoing主题演示-博客\n    author: evan xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://s4.ax1x.com/2022/02/25/bajinf.png\n    link: https://fangweilong.github.io/\n    name: teler的日常\n    desc: 好好学习，天天向上\n    author: teler\n    avatar: https://s4.ax1x.com/2022/02/25/bava8j.jpg\n  - img: https://user-images.githubusercontent.com/53399655/163007243-1b99b96b-cac3-49ca-9950-03a1e877a6d8.png\n    link: https://xustudyxu.github.io/\n    name: xustudyxu's blog\n    desc: 一起学习编程!\n    author: xustudyxu\n    avatar: https://xustudyxu.github.io/img/01.png\n\n\n\n# 文档类\n\nvdoing(本站)\n\n🚀一款简洁高效的vuepress 知识管理&博客 主题\n\nevan xu\n\nja plus 开发者文档\n\n一款开源的登录认证中间件\n\nyadong,zhang\n\ndokimod 开发文档\n\n为 ddlc mod 开发提供的完善文档\n\nimgradeone\n\njeesite 在线文档\n\njeesite 快速开发平台 - 在线文档\n\nthinkgem\n\ncleanphp\n\ncleanphp开发者文档\n\nankio\n\njpom\n\n简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n\n不忘初心\n\n物美智能\n\n物美智能开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。\n\n随遇而安 / kerwincui\n\ntrace-recorder官网\n\n简单的， 可伸缩的， 高性能的跟踪记录仪\n\n蔡旺\n\n米饭文档\n\n米饭minecraft插件文档\n\nhandy\n\nelectron-egg\n\n一个入门简单、跨平台、企业级桌面软件开发框架\n\n哆啦好梦\n\nkhl.py.docs\n\nkook python sdk khl.py 文档\n\nmusnows\n\nsimplest admin v2 文档\n\n本站用于simplest admin 通用后台管理系统的文档系统\n\ntenyears\n\nrulego 官网\n\n基于go语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎\n\n玉米投手\n\nconfig:\n  imgheight: 150px\n\ndata:\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200530114036.png\n    link: https://xugaoyi.github.io/vuepress-theme-vdoing-doc/\n    name: vdoing(本站)\n    desc: 🚀一款简洁高效的vuepress 知识管理&博客 主题\n    author: evan xu\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store@master/blog/qq20210925-124836@2x (1).6ogvf85maog0.png\n    link: https://justauth.plus/\n    name: ja plus 开发者文档\n    desc: 一款开源的登录认证中间件\n    author: yadong,zhang\n    avatar: https://portrait.gitee.com/uploads/avatars/user/261/784199_yadong.zhang_1578932767.png!avatar200\n  - img: https://assets.imgradeone.com/docsdokimod-pv.png\n    link: https://docs.dokimod.cn\n    name: dokimod 开发文档\n    desc: 为 ddlc mod 开发提供的完善文档\n    author: imgradeone\n    avatar: https://docs.dokimod.cn/logo_128x128.png\n  # - img: http://yogoyun.oss-cn-beijing.aliyuncs.com/help/public/other/20200630125515.png\n  #   link: http://help.yogoyun.com/\n  #   name: 柚果云服务\n  #   desc: 智能商业应用程序服务商。\n  #   author: 柚果云服务\n  #   avatar: http://yogoyun.oss-cn-beijing.aliyuncs.com/admin/console/logo.png\n  - img: https://jeesite.com/docs/img/docs.png\n    link: http://docs.jeesite.com\n    name: jeesite 在线文档\n    desc: jeesite 快速开发平台 - 在线文档\n    author: thinkgem\n    avatar: https://jeesite.com/docs/img/logo.png\n  - img: https://jsd.cdn.zzko.cn/gh/dreamncn/picbed@master/upic/2022_05_12_20_40_04_1652359204_1652359204449_9mvkar.png\n    link: https://cleanphp.ankio.net/\n    name: cleanphp\n    desc: cleanphp开发者文档\n    author: ankio\n    avatar: https://jsd.cdn.zzko.cn/gh/dreamncn/picbed@master/upic/2022_04_04_19_48_51_1649072931_1649072931346_h4bgpq.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/28284d.56bkx9qvhc00.webp\n    link: https://jpom-docs.keepbx.cn/\n    name: jpom\n    desc: 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n    author: 不忘初心\n    avatar: https://jpom-docs.keepbx.cn/images/jpom_logo.png\n  - img: https://wumei.live/kerwincui/document/raw/branch/master/images/img.png\n    link: https://wumei.live/doc/\n    name: 物美智能\n    desc: 物美智能开源物联网平台，简单易用，可用于搭建物联网平台以及二次开发和学习。适用于智能家居、智慧办公、智慧社区、农业监测、水利监测、工业控制等。\n    author: 随遇而安 / kerwincui\n    avatar: https://portrait.gitee.com/uploads/avatars/user/611/1834441_kerwincui_1581523162.png!avatar200\n  - img: https://pic.imgdb.cn/item/637c92ef16f2c2beb11293c7.jpg\n    link: https://trace-recorder.xusc.cn\n    name: trace-recorder官网\n    desc: 简单的， 可伸缩的， 高性能的跟踪记录仪\n    author: 蔡旺\n    avatar: https://pic.imgdb.cn/item/637c933516f2c2beb112ed43.jpg\n  - img: https://img.fastmirror.net/s/2023/04/07/64303c0e67329.png\n    link: https://ricedoc.handyplus.cn/\n    name: 米饭文档\n    desc: 米饭minecraft插件文档\n    author: handy\n    avatar: https://img.fastmirror.net/s/2023/04/07/64303c1d551a1.jpg\n  - img: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230506/68747470733a2f2f696d6730312e6b616b613939362e636f6d2f65652f65652d7765622e706e67.ok4htvc6vmo.webp\n    link: https://www.kaka996.com/\n    name: electron-egg\n    desc: 一个入门简单、跨平台、企业级桌面软件开发框架\n    author: 哆啦好梦\n    avatar: https://jsd.cdn.zzko.cn/gh/xugaoyi/picx-images-hosting@master/20230506/68747470733a2f2f696d6730312e6b616b613939362e636f6d2f65652f6c6f676f5f3230302e706e67.6agfx6e7l280.webp\n  - img: https://khl-py.eu.org/screenshots.png\n    link: https://khl-py.eu.org/\n    name: khl.py.docs\n    desc: kook python sdk khl.py 文档\n    author: musnows\n    avatar: https://khl-py.eu.org/favicon.ico\n  - img: http://rds-share.oss-cn-hangzhou.aliyuncs.com/admin/202309/202309090944430148132.png\n    link: https://doc.simplest.net.cn\n    name: simplest admin v2 文档\n    desc: 本站用于simplest admin 通用后台管理系统的文档系统\n    author: tenyears\n    avatar: http://rds-share.oss-cn-hangzhou.aliyuncs.com/admin/202306/202306130908010175689.png\n  - img: https://rulego.cc/img/snapshot.png\n    link: https://rulego.cc/\n    name: rulego 官网\n    desc: 基于go语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎\n    author: 玉米投手\n    avatar: https://rulego.cc/img/author_logo.jpg\n\n\n\n\n\n\n\n# 申请加入案例\n\n你想在这个页面展示你的站点吗？\n\n欢迎使用 vdoing 主题的小伙伴到 这里 留下你的站点信息，你的站点将有机会出现在这个页面里~",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "front matter配置",
      "frontmatter": {
        "title": "front matter配置",
        "date": "2020-05-12T15:37:00.000Z",
        "permalink": "/pages/3216b0",
        "article": false
      },
      "regularPath": "/02.%E9%85%8D%E7%BD%AE/01.%E9%85%8D%E7%BD%AE/03.front%20matter%E9%85%8D%E7%BD%AE.html",
      "relativePath": "02.配置/01.配置/03.front matter配置.md",
      "key": "v-7b86ecd9",
      "path": "/pages/3216b0/",
      "headers": [
        {
          "level": 2,
          "title": "配置项",
          "slug": "配置项",
          "normalizedTitle": "配置项",
          "charIndex": 275
        },
        {
          "level": 3,
          "title": "titleTag",
          "slug": "titletag",
          "normalizedTitle": "titletag",
          "charIndex": 131
        },
        {
          "level": 3,
          "title": "sidebar",
          "slug": "sidebar",
          "normalizedTitle": "sidebar",
          "charIndex": 154
        },
        {
          "level": 3,
          "title": "article",
          "slug": "article",
          "normalizedTitle": "article",
          "charIndex": 169
        },
        {
          "level": 3,
          "title": "comment",
          "slug": "comment",
          "normalizedTitle": "comment",
          "charIndex": 184
        },
        {
          "level": 3,
          "title": "editLink",
          "slug": "editlink",
          "normalizedTitle": "editlink",
          "charIndex": 199
        },
        {
          "level": 3,
          "title": "author",
          "slug": "author",
          "normalizedTitle": "author",
          "charIndex": 215
        },
        {
          "level": 3,
          "title": "sticky (置顶)",
          "slug": "sticky-置顶",
          "normalizedTitle": "sticky (置顶)",
          "charIndex": 811
        }
      ],
      "headersStr": "配置项 titleTag sidebar article comment editLink author sticky (置顶)",
      "content": "一个比较完整的front matter示例：\n\n---\ntitle: 标题\ndate: 2020-02-21 14:40:19\npermalink: /pages/a1bc87\ncategories:\n  - 分类1\n  - 分类2\ntags:\n  - 标签1\ntitleTag: 原创 # v1.9.0+\nsidebar: false\narticle: false\ncomment: false\neditLink: false\nauthor:\n name: 作者\n link: https://xxx.com\nsticky: 1\n---\n\n\n\n# 配置项\n\n自动生成的front matter字段包括title、date、permalink、categories、tags，这里就不再重复赘述，参考：自动生成front matter\n\n\n# titleTag\n\n * 用于给标题添加 原创、转载 、优质、推荐 等自定义标记。\n\n添加了标题标记的文章，在文章页和文章列表、最近更新栏、归档页的文章标题都会显示此标记。\n\n\n# sidebar\n\n * false 不显示侧边栏\n * auto 显示自动侧边栏（只包含本文标题和子标题）\n\n\n# article\n\n * false 判定当前页面为非文章页\n\n对于非文章页，如目录页、关于、友情链接等自定义页面，需要设置此项。设置之后这个页面将被认定为非文章页，不显示面包屑和作者、时间，不显示最近更新栏，不会参与到最近更新文章的数据计算中。\n\n\n# comment\n\n * false 不显示评论区，这是评论插件的一个配置\n\n\n# editLink\n\n * false 不显示编辑链接\n\n\n# author\n\n * author.name 作者名称\n * author.link 作者链接\n\n指定当前页面的作者信息，如没有作者链接时可以这样：author: 作者名称\n\n\n# sticky (置顶)\n\n * 类型： number\n * 排序：允许有多个置顶文章，按照 1, 2, 3, ... 来降低置顶文章的排列优先级\n\n文章置顶，设置了此项将在首页详细版文章列表中处于置顶位置。",
      "normalizedContent": "一个比较完整的front matter示例：\n\n---\ntitle: 标题\ndate: 2020-02-21 14:40:19\npermalink: /pages/a1bc87\ncategories:\n  - 分类1\n  - 分类2\ntags:\n  - 标签1\ntitletag: 原创 # v1.9.0+\nsidebar: false\narticle: false\ncomment: false\neditlink: false\nauthor:\n name: 作者\n link: https://xxx.com\nsticky: 1\n---\n\n\n\n# 配置项\n\n自动生成的front matter字段包括title、date、permalink、categories、tags，这里就不再重复赘述，参考：自动生成front matter\n\n\n# titletag\n\n * 用于给标题添加 原创、转载 、优质、推荐 等自定义标记。\n\n添加了标题标记的文章，在文章页和文章列表、最近更新栏、归档页的文章标题都会显示此标记。\n\n\n# sidebar\n\n * false 不显示侧边栏\n * auto 显示自动侧边栏（只包含本文标题和子标题）\n\n\n# article\n\n * false 判定当前页面为非文章页\n\n对于非文章页，如目录页、关于、友情链接等自定义页面，需要设置此项。设置之后这个页面将被认定为非文章页，不显示面包屑和作者、时间，不显示最近更新栏，不会参与到最近更新文章的数据计算中。\n\n\n# comment\n\n * false 不显示评论区，这是评论插件的一个配置\n\n\n# editlink\n\n * false 不显示编辑链接\n\n\n# author\n\n * author.name 作者名称\n * author.link 作者链接\n\n指定当前页面的作者信息，如没有作者链接时可以这样：author: 作者名称\n\n\n# sticky (置顶)\n\n * 类型： number\n * 排序：允许有多个置顶文章，按照 1, 2, 3, ... 来降低置顶文章的排列优先级\n\n文章置顶，设置了此项将在首页详细版文章列表中处于置顶位置。",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "支持这个项目",
      "frontmatter": {
        "title": "支持这个项目",
        "date": "2020-05-12T15:09:57.000Z",
        "permalink": "/pages/1b12ed",
        "sidebar": false,
        "article": false
      },
      "regularPath": "/06.%E8%B5%9E%E5%8A%A9/01.%E8%B5%9E%E5%8A%A9.html",
      "relativePath": "06.赞助/01.赞助.md",
      "key": "v-29c1e0dc",
      "path": "/pages/1b12ed/",
      "headers": [
        {
          "level": 2,
          "title": "赞助商",
          "slug": "赞助商",
          "normalizedTitle": "赞助商",
          "charIndex": 110
        },
        {
          "level": 2,
          "title": "成为赞助商",
          "slug": "成为赞助商",
          "normalizedTitle": "成为赞助商",
          "charIndex": 290
        },
        {
          "level": 2,
          "title": "公众号",
          "slug": "公众号",
          "normalizedTitle": "公众号",
          "charIndex": 415
        },
        {
          "level": 2,
          "title": "致谢",
          "slug": "致谢",
          "normalizedTitle": "致谢",
          "charIndex": 522
        }
      ],
      "headersStr": "赞助商 成为赞助商 公众号 致谢",
      "content": "如果您正在使用这个项目并感觉良好，或者是想支持我继续开发，您可以通过如下任意方式支持我：\n\n 1. Star并分享 vuepress-theme-vdoing 🚀\n 2. 轻轻点击一次上面的广告 😄\n 3. 进入下面赞助商花十几秒钟扫码注册一下， 赞助商就会代您赞助一笔小钱。 😄\n 4. 通过以下二维码 一次性捐款，打赏作者一杯茶。🍵\n\n谢谢！ ❤️\n\n微信赞赏   微信   支付宝\n            \n\n\n# 赞助商\n\n> 如果您想支持本项目，奈何囊中羞涩，您可以花十几秒点击下方赞助商进入注册（只需微信扫码就可以），赞助商就会代您赞助一笔小钱。\n\n\n\n\n# 成为赞助商\n\n成为赞助商，即可将您的品牌LOGO及标语同时展示在：\n\n * GitHub仓库主页顶部\n * 官网首页顶部\n * 官网所有文档页左侧边栏顶部\n\n主题官网平均每月约8w+浏览量 + GitHub仓库每月约1w+浏览量\n\n联系方式\n\n\n# 公众号\n\n有趣研究社是本人对各种有趣的、好玩的、沙雕的创意和想法以在线小网站或者文章的形式表达出来，比如：\n\n * 小霸王游戏机\n * 爱国头像生成器\n * 到账语音生成器\n\n还有更多好玩的等你去探索吧~\n\n\n# 致谢\n\n感谢给予支持的朋友，您的支持是我前进的动力 🎉",
      "normalizedContent": "如果您正在使用这个项目并感觉良好，或者是想支持我继续开发，您可以通过如下任意方式支持我：\n\n 1. star并分享 vuepress-theme-vdoing 🚀\n 2. 轻轻点击一次上面的广告 😄\n 3. 进入下面赞助商花十几秒钟扫码注册一下， 赞助商就会代您赞助一笔小钱。 😄\n 4. 通过以下二维码 一次性捐款，打赏作者一杯茶。🍵\n\n谢谢！ ❤️\n\n微信赞赏   微信   支付宝\n            \n\n\n# 赞助商\n\n> 如果您想支持本项目，奈何囊中羞涩，您可以花十几秒点击下方赞助商进入注册（只需微信扫码就可以），赞助商就会代您赞助一笔小钱。\n\n\n\n\n# 成为赞助商\n\n成为赞助商，即可将您的品牌logo及标语同时展示在：\n\n * github仓库主页顶部\n * 官网首页顶部\n * 官网所有文档页左侧边栏顶部\n\n主题官网平均每月约8w+浏览量 + github仓库每月约1w+浏览量\n\n联系方式\n\n\n# 公众号\n\n有趣研究社是本人对各种有趣的、好玩的、沙雕的创意和想法以在线小网站或者文章的形式表达出来，比如：\n\n * 小霸王游戏机\n * 爱国头像生成器\n * 到账语音生成器\n\n还有更多好玩的等你去探索吧~\n\n\n# 致谢\n\n感谢给予支持的朋友，您的支持是我前进的动力 🎉",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/img/logo.png",
        "heroText": "test-vuepress-theme-vdoing",
        "tagline": "🚀一款简洁高效的VuePress 知识管理&博客 主题",
        "actionText": "开始使用 →",
        "actionLink": "/pages/a2f161/",
        "bannerBg": "none",
        "features": [
          {
            "title": "知识管理",
            "details": "包含三种典型的知识管理形态：结构化、碎片化、体系化。轻松打造属于你自己的知识管理平台"
          },
          {
            "title": "简洁高效",
            "details": "以 Markdown 为中心的项目结构，内置自动化工具，以更少的配置完成更多的事。配合多维索引快速定位每个知识点"
          },
          {
            "title": "沉浸式阅读",
            "details": "专为阅读设计的UI，配合多种颜色模式、可关闭的侧边栏和导航栏，带给你一种沉浸式阅读体验"
          }
        ],
        "postList": "none"
      },
      "regularPath": "/",
      "relativePath": "index.md",
      "key": "v-197a1f36",
      "path": "/",
      "headers": [
        {
          "level": 2,
          "title": "🎖特别用户",
          "slug": "🎖特别用户",
          "normalizedTitle": "🎖特别用户",
          "charIndex": 36
        },
        {
          "level": 2,
          "title": "🎉上新推荐",
          "slug": "🎉上新推荐",
          "normalizedTitle": "🎉上新推荐",
          "charIndex": 604
        },
        {
          "level": 2,
          "title": "⚡ 反馈与交流",
          "slug": "⚡-反馈与交流",
          "normalizedTitle": "⚡ 反馈与交流",
          "charIndex": 1202
        }
      ],
      "headersStr": "🎖特别用户 🎉上新推荐 ⚡ 反馈与交流",
      "content": "支持这个项目\n\n\n\n\n\n赞助商 (进入注册为主题作者充电)\n\n\n\n\n# 🎖特别用户\n\nMyBatis-Plus官网\n\n🚀为简化开发而生\n\n# - name: OpenHarmony\n#   desc: 开放原子开源基金会\n#   link: https://docs.openharmony.cn/pages/000000/\n#   bgColor: '#f1f1f1'\n#   textColor: '#2A3344'\n- name: MyBatis-Plus官网\n  desc: 🚀为简化开发而生\n  link: https://baomidou.com/\n  bgColor: '#f1f1f1'\n  textColor: '#2A3344'\n# - name: Deepin 社区\n#   desc: Deepin 应用开发技术分享、DTK开发经验等\n#   link: https://docs.deepin.org\n#   bgColor: '#f1f1f1'\n#   textColor: '#2A3344'\n# - name: VForm官网\n#   desc: 低代码表单优选方案，拖拽式设计，一键生成源码\n#   link: http://www.vform666.com\n#   bgColor: '#f1f1f1'\n#   textColor: '#2A3344'\n\n\n\n\n# 🎉上新推荐\n\n * v1.12.x\n   * 新增配置项pageStyle，用于切换页面的风格样式，可选卡片、 线条风格。详情\n   * 新增配置项bodyBgImgInterval，用于在设置了多张背景大图时修改大图切换的时间间隔。详情\n   * 新增配置项defaultMode，用于修改默认外观模式(v1.12.3)。详情\n * v1.11.x：新增配置项extendFrontmatter，用于扩展自动生成front matter。详情\n * v1.10.x：新增右侧目录栏对h2~h6标题的适配，并优化了UI，详情。\n * v1.9.x：新增配置文件对TypeScript的支持，参考config.ts。新增标题标记。\n * v1.8.x：新增 Markdown中使用的组件：代码块选项卡 。\n * v1.7.x：新增 自定义html模块 配置，可用于插入广告模块。\n * v1.6.x：支持四级目录，提高站点结构可塑性。\n * v1.5.x：新增笔记容器，轻松插入笔记框。\n * v1.4.x：新增了文章内容区块的 背景底纹配置，让你的文章看起来像笔记本的风格~\n * v1.2.x：这个版本对整体的UI细节做了很多优化，比如标签栏和分类栏等\n * v1.1.x：从这个版本开始主题新增超好用、高颜值的Markdown容器，快去 体验 吧~\n\n更多上新请查阅：更新日志\n\n\n\n\n# ⚡ 反馈与交流\n\n在使用过程中有任何问题和想法，请给我提 Issue。 你也可以在Issue查看别人提的问题和给出解决方案。\n\n或者加入我们的交流群：\n\nvdoing微信群(添加我微信备注\"进群\")   vdoing QQ群: 694387113\n\n",
      "normalizedContent": "支持这个项目\n\n\n\n\n\n赞助商 (进入注册为主题作者充电)\n\n\n\n\n# 🎖特别用户\n\nmybatis-plus官网\n\n🚀为简化开发而生\n\n# - name: openharmony\n#   desc: 开放原子开源基金会\n#   link: https://docs.openharmony.cn/pages/000000/\n#   bgcolor: '#f1f1f1'\n#   textcolor: '#2a3344'\n- name: mybatis-plus官网\n  desc: 🚀为简化开发而生\n  link: https://baomidou.com/\n  bgcolor: '#f1f1f1'\n  textcolor: '#2a3344'\n# - name: deepin 社区\n#   desc: deepin 应用开发技术分享、dtk开发经验等\n#   link: https://docs.deepin.org\n#   bgcolor: '#f1f1f1'\n#   textcolor: '#2a3344'\n# - name: vform官网\n#   desc: 低代码表单优选方案，拖拽式设计，一键生成源码\n#   link: http://www.vform666.com\n#   bgcolor: '#f1f1f1'\n#   textcolor: '#2a3344'\n\n\n\n\n# 🎉上新推荐\n\n * v1.12.x\n   * 新增配置项pagestyle，用于切换页面的风格样式，可选卡片、 线条风格。详情\n   * 新增配置项bodybgimginterval，用于在设置了多张背景大图时修改大图切换的时间间隔。详情\n   * 新增配置项defaultmode，用于修改默认外观模式(v1.12.3)。详情\n * v1.11.x：新增配置项extendfrontmatter，用于扩展自动生成front matter。详情\n * v1.10.x：新增右侧目录栏对h2~h6标题的适配，并优化了ui，详情。\n * v1.9.x：新增配置文件对typescript的支持，参考config.ts。新增标题标记。\n * v1.8.x：新增 markdown中使用的组件：代码块选项卡 。\n * v1.7.x：新增 自定义html模块 配置，可用于插入广告模块。\n * v1.6.x：支持四级目录，提高站点结构可塑性。\n * v1.5.x：新增笔记容器，轻松插入笔记框。\n * v1.4.x：新增了文章内容区块的 背景底纹配置，让你的文章看起来像笔记本的风格~\n * v1.2.x：这个版本对整体的ui细节做了很多优化，比如标签栏和分类栏等\n * v1.1.x：从这个版本开始主题新增超好用、高颜值的markdown容器，快去 体验 吧~\n\n更多上新请查阅：更新日志\n\n\n\n\n# ⚡ 反馈与交流\n\n在使用过程中有任何问题和想法，请给我提 issue。 你也可以在issue查看别人提的问题和给出解决方案。\n\n或者加入我们的交流群：\n\nvdoing微信群(添加我微信备注\"进群\")   vdoing qq群: 694387113\n\n",
      "charsets": {
        "cjk": true
      }
    },
    {
      "title": "博客文章",
      "frontmatter": {
        "archivesPage": true,
        "title": "博客文章",
        "permalink": "/blog/",
        "article": false
      },
      "regularPath": "/@pages/archivesPage.html",
      "relativePath": "@pages/archivesPage.md",
      "key": "v-0b57a5e8",
      "path": "/blog/",
      "headersStr": null,
      "content": "",
      "normalizedContent": "",
      "charsets": {}
    }
  ],
  "themeConfig": {
    "nav": [
      {
        "text": "首页",
        "link": "/"
      },
      {
        "text": "指南",
        "link": "/pages/a2f161/",
        "items": [
          {
            "text": "主题初衷与诞生11",
            "link": "/pages/52d5c3/"
          },
          {
            "text": "介绍",
            "link": "/pages/a2f161/"
          },
          {
            "text": "快速上手",
            "link": "/pages/793dcb/"
          },
          {
            "text": "目录结构",
            "link": "/pages/2f674a/"
          },
          {
            "text": "核心配置和约定",
            "link": "/pages/33d574/"
          },
          {
            "text": "自动生成front matter",
            "link": "/pages/088c16/"
          },
          {
            "text": "Markdown 容器",
            "link": "/pages/d0d7eb/"
          },
          {
            "text": "Markdown 中使用组件",
            "link": "/pages/197691/"
          }
        ]
      },
      {
        "text": "配置",
        "link": "/pages/a20ce8/",
        "items": [
          {
            "text": "主题配置",
            "link": "/pages/a20ce8/"
          }
        ]
      }
    ],
    "sidebarDepth": 2,
    "logo": "/img/logo.png",
    "repo": "https://github.com/Rossini402/easy-vuepress.git",
    "searchMaxSuggestions": 10,
    "lastUpdated": "上次更新",
    "docsDir": "docs",
    "editLinks": true,
    "editLinkText": "编辑",
    "sidebar": {
      "/01.指南/": [
        {
          "title": "指南",
          "collapsable": false,
          "children": [
            [
              "01.指南/01.主题初衷与诞生.md",
              "主题初衷与诞生123",
              "/pages/52d5c3"
            ],
            [
              "01.指南/02.介绍.md",
              "介绍",
              "/pages/a2f161"
            ],
            [
              "01.指南/03.快速上手.md",
              "快速上手",
              "/pages/793dcb"
            ],
            [
              "01.指南/04.目录结构.md",
              "目录结构",
              "/pages/2f674a"
            ],
            [
              "01.指南/05.核心配置和约定.md",
              "构建结构化站点的核心配置和约定",
              "/pages/33d574"
            ],
            [
              "01.指南/06.自动生成front matter.md",
              "自动生成front matter",
              "/pages/088c16"
            ],
            [
              "01.指南/07.Markdown 容器.md",
              "Markdown 容器",
              "/pages/d0d7eb/"
            ],
            [
              "01.指南/08.Markdown 中使用组件.md",
              "Markdown 中使用组件",
              "/pages/197691/"
            ]
          ]
        },
        {
          "title": "相关文章",
          "collapsable": false,
          "children": [
            [
              "02.相关文章/03.使目录栏支持h2~h6标题.md",
              "使目录栏支持h2~h6标题",
              "/pages/8dfab5/"
            ],
            [
              "02.相关文章/06.如何让你的笔记更有表现力.md",
              "如何让你的笔记更有表现力",
              "/pages/dd027d/"
            ],
            [
              "02.相关文章/07.批量操作front matter工具.md",
              "批量操作front matter工具",
              "/pages/2b8e22"
            ],
            [
              "02.相关文章/08.部署.md",
              "部署",
              "/pages/0fc1d2"
            ],
            [
              "02.相关文章/09.关于写文章和一级标题.md",
              "关于写文章和一级标题",
              "/pages/9ae0bd"
            ],
            [
              "02.相关文章/10.关于博客搭建与管理.md",
              "关于博客搭建与管理",
              "/pages/26997d"
            ],
            [
              "02.相关文章/11.在线编辑和新增文章的方法.md",
              "在线编辑和新增文章的方法",
              "/pages/c5a54d"
            ]
          ]
        }
      ],
      "catalogue": {},
      "/02.配置/": [
        {
          "title": "配置",
          "collapsable": false,
          "children": [
            [
              "01.配置/01.主题配置.md",
              "主题配置",
              "/pages/a20ce8"
            ],
            [
              "01.配置/02.首页配置.md",
              "首页配置",
              "/pages/f14bdb"
            ],
            [
              "01.配置/03.front matter配置.md",
              "front matter配置",
              "/pages/3216b0"
            ],
            [
              "01.配置/04.目录页配置.md",
              "目录页配置",
              "/pages/54651a"
            ],
            [
              "01.配置/05.添加摘要.md",
              "添加摘要",
              "/pages/1cc523"
            ],
            [
              "01.配置/06.修改主题颜色和样式.md",
              "修改主题颜色和样式",
              "/pages/f51918"
            ],
            [
              "01.配置/07.评论栏.md",
              "评论栏",
              "/pages/ce175c"
            ]
          ]
        }
      ],
      "/03.资源/": [
        [
          "01.资源.md",
          "资源",
          "/pages/db78e2"
        ]
      ],
      "/04.案例/": [
        [
          "01.案例.md",
          "案例",
          "/pages/5d571c"
        ]
      ],
      "/05.问答/": [
        [
          "01.问答.md",
          "问答",
          "/pages/9cc27d"
        ]
      ],
      "/06.赞助/": [
        [
          "01.赞助.md",
          "支持这个项目",
          "/pages/1b12ed"
        ]
      ]
    },
    "updateBar": {
      "showToArticle": false
    },
    "pageStyle": "line",
    "category": false,
    "tag": false,
    "author": {
      "name": "Evan Xu",
      "href": "https://github.com/xugaoyi"
    },
    "social": {
      "icons": [
        {
          "iconClass": "icon-youjian",
          "title": "发邮件",
          "link": "mailto:894072666@qq.com"
        },
        {
          "iconClass": "icon-github",
          "title": "GitHub",
          "link": "https://github.com/xugaoyi"
        },
        {
          "iconClass": "icon-erji",
          "title": "听音乐",
          "link": "https://music.163.com/#/playlist?id=755597173"
        }
      ]
    },
    "footer": {
      "createYear": 2019,
      "copyrightInfo": "Evan Xu | MIT License"
    },
    "htmlModules": {
      "pageT": "\n    <div class=\"wwads-cn wwads-horizontal page-wwads\" data-id=\"136\"></div>\n    <style>\n      .page-wwads{\n        width:100%!important;\n        min-height: 0;\n        margin: 0;\n      }\n      .page-wwads .wwads-img img{\n        width:80px!important;\n      }\n      .page-wwads .wwads-poweredby{\n        width: 40px;\n        position: absolute;\n        right: 25px;\n        bottom: 3px;\n      }\n      .wwads-content .wwads-text, .page-wwads .wwads-text{\n        height: 100%;\n        padding-top: 5px;\n        display: block;\n      }\n  </style>\n  ",
      "sidebarT": "\n  <a href=\"http://apifox.cn/a103xugaoyi\" target=\"_blank\">\n    <img src=\"https://jsd.cdn.zzko.cn/gh/xugaoyi/blog-gitalk-comment@master/img/431669861564_.2470ykdcpbds.jpg\" alt=\"npm\" class=\"no-zoom\" style=\"width: 100%;border-radius: 2px;\">\n    <p style=\"text-align: center;margin: 0;color: #999;font-size: 12px;\">(进入注册为作者充电)</p>\n  </a>"
    }
  }
}